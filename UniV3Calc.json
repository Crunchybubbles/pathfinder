{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "zeroForOne",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountSpecified",
          "type": "int256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        }
      ],
      "name": "calc_v3_swap",
      "outputs": [
        {
          "internalType": "int256",
          "name": "amount0",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/BitMath.sol",
    "1": "contracts/FixedPoint96.sol",
    "10": "contracts/UnsafeMath.sol",
    "11": "contracts/univ3calc.sol",
    "2": "contracts/FullMath.sol",
    "3": "contracts/LiquidityMath.sol",
    "4": "contracts/LowGasSafeMath.sol",
    "5": "contracts/SafeCast.sol",
    "6": "contracts/SqrtPriceMath.sol",
    "7": "contracts/SwapMath.sol",
    "9": "contracts/TickMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/univ3calc.sol",
    "exportedSymbols": {
      "BitMath": [
        1077
      ],
      "FixedPoint96": [
        3080
      ],
      "FullMath": [
        1250
      ],
      "IERC20": [
        19
      ],
      "IUniswapV3Pool": [
        93
      ],
      "LiquidityMath": [
        1302
      ],
      "LowGasSafeMath": [
        1432
      ],
      "SafeCast": [
        1502
      ],
      "SqrtPriceMath": [
        2018
      ],
      "SwapMath": [
        2279
      ],
      "TickBitmap": [
        2535
      ],
      "TickMath": [
        3070
      ],
      "UniV3Calc": [
        798
      ],
      "UnsafeMath": [
        3096
      ]
    },
    "id": 799,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:11"
      },
      {
        "id": 2,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:19:11"
      },
      {
        "absolutePath": "contracts/TickMath.sol",
        "file": "./TickMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 3071,
        "src": "44:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BitMath.sol",
        "file": "./BitMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 1078,
        "src": "69:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TickBitmap.sol",
        "file": "./TickBitmap.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 2536,
        "src": "93:26:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SwapMath.sol",
        "file": "./SwapMath.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 2280,
        "src": "120:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/FullMath.sol",
        "file": "./FullMath.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 1251,
        "src": "145:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SqrtPriceMath.sol",
        "file": "./SqrtPriceMath.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 2019,
        "src": "170:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LiquidityMath.sol",
        "file": "./LiquidityMath.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 1303,
        "src": "200:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LowGasSafeMath.sol",
        "file": "./LowGasSafeMath.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 1433,
        "src": "230:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SafeCast.sol",
        "file": "./SafeCast.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 799,
        "sourceUnit": 1503,
        "src": "261:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 19,
        "linearizedBaseContracts": [
          19
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70a08231",
            "id": 18,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "330:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "329:17:11"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "370:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:9:11"
            },
            "scope": 19,
            "src": "311:68:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 799,
        "src": "288:93:11"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 93,
        "linearizedBaseContracts": [
          93
        ],
        "name": "IUniswapV3Pool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IUniswapV3Pool.Slot0",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "sqrtPriceX96",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "440:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "440:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "tick",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "471:10:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 22,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "471:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "observationIndex",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "492:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "492:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "observationCardinality",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "526:29:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "526:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "observationCardinalityNext",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "566:33:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "566:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "feeProtocol",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "610:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "610:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "unlocked",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "638:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Slot0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "416:242:11",
            "visibility": "public"
          },
          {
            "functionSelector": "3850c7bd",
            "id": 39,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "slot0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:2:11"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "s0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "704:15:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                    "typeString": "struct IUniswapV3Pool.Slot0"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "Slot0",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34,
                    "src": "704:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Slot0_$34_storage_ptr",
                      "typeString": "struct IUniswapV3Pool.Slot0"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "703:17:11"
            },
            "scope": 93,
            "src": "664:57:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "1a686502",
            "id": 44,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:2:11"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "770:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:9:11"
            },
            "scope": 93,
            "src": "726:53:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f30dba93",
            "id": 65,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ticks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "799:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "798:12:11"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "liquidityGross",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "847:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "liquidityNet",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "883:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "feeGrowthOutside0X128",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "916:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "feeGrowthOutside1X128",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "959:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "tickCumulativeOutside",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1002:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int56",
                    "typeString": "int56"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "int56",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "secondsPerLiquidityOutsideX128",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1043:38:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "secondsOutside",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1095:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1130:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:327:11"
            },
            "scope": 93,
            "src": "784:377:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "5339c296",
            "id": 72,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickBitmap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "wordPosition",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1186:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:20:11"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1229:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:9:11"
            },
            "scope": 93,
            "src": "1166:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d0c93a7c",
            "id": 77,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickSpacing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:2:11"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1289:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:7:11"
            },
            "scope": 93,
            "src": "1243:53:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "ddca3f43",
            "id": 82,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:2:11"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1339:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1338:8:11"
            },
            "scope": 93,
            "src": "1301:46:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "0dfe1681",
            "id": 87,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:2:11"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1393:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:9:11"
            },
            "scope": 93,
            "src": "1352:50:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d21220a7",
            "id": 92,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:11"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1448:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:9:11"
            },
            "scope": 93,
            "src": "1407:50:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 799,
        "src": "384:1075:11"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 798,
        "linearizedBaseContracts": [
          798
        ],
        "name": "UniV3Calc",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1568:79:11",
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "wordPos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1578:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int16",
                        "typeString": "int16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 105,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1594:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "hexValue": "38",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1602:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "1594:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1588:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int16_$",
                          "typeString": "type(int16)"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "int16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1588:5:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1588:16:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int16",
                        "typeString": "int16"
                      }
                    },
                    "src": "1578:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:26:11"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "bitPos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1614:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 114,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1629:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "323536",
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1636:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_256_by_1",
                              "typeString": "int_const 256"
                            },
                            "value": "256"
                          },
                          "src": "1629:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1623:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:5:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1623:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1614:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:26:11"
                }
              ]
            },
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "position",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1505:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1504:12:11"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "wordPos",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1539:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "bitPos",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1554:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:29:11"
            },
            "scope": 798,
            "src": "1487:160:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1830:1816:11",
              "statements": [
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "1833:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "1833:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 137,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1870:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 136,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1855:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$93_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1855:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1833:43:11"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "1879:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1879:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 142,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1899:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tickSpacing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "1899:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                        "typeString": "function () view external returns (int24)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1879:38:11"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "compressed",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "1927:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1927:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "1946:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 149,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1953:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "1946:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1927:37:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 152,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1978:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1985:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1978:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1990:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "id": 156,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1997:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "1990:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1990:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1978:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "IfStatement",
                  "src": "1974:53:11",
                  "trueBody": {
                    "expression": {
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "2015:12:11",
                      "subExpression": {
                        "id": 161,
                        "name": "compressed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "2015:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 163,
                    "nodeType": "ExpressionStatement",
                    "src": "2015:12:11"
                  }
                },
                {
                  "condition": {
                    "id": 165,
                    "name": "lte",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "2077:3:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "2815:825:11",
                    "statements": [
                      {
                        "assignments": [
                          233,
                          235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 233,
                            "mutability": "mutable",
                            "name": "wordPos",
                            "nodeType": "VariableDeclaration",
                            "scope": 306,
                            "src": "2927:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int16",
                              "typeString": "int16"
                            },
                            "typeName": {
                              "id": 232,
                              "name": "int16",
                              "nodeType": "ElementaryTypeName",
                              "src": "2927:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int16",
                                "typeString": "int16"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 235,
                            "mutability": "mutable",
                            "name": "bitPos",
                            "nodeType": "VariableDeclaration",
                            "scope": 306,
                            "src": "2942:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2942:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 241,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 237,
                                "name": "compressed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "2967:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2980:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2967:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 236,
                            "name": "position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "2958:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
                              "typeString": "function (int24) pure returns (int16,uint8)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2958:24:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
                            "typeString": "tuple(int16,uint8)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2926:56:11"
                      },
                      {
                        "assignments": [
                          243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 243,
                            "mutability": "mutable",
                            "name": "mask",
                            "nodeType": "VariableDeclaration",
                            "scope": 306,
                            "src": "3054:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 242,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 252,
                        "initialValue": {
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "~",
                          "prefix": true,
                          "src": "3069:20:11",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 246,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "31",
                                        "id": 244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3072:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<<",
                                      "rightExpression": {
                                        "id": 245,
                                        "name": "bitPos",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 235,
                                        "src": "3077:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "3072:11:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 247,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3071:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3087:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3071:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 250,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3070:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3054:35:11"
                      },
                      {
                        "assignments": [
                          254
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 254,
                            "mutability": "mutable",
                            "name": "masked",
                            "nodeType": "VariableDeclaration",
                            "scope": 306,
                            "src": "3103:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 253,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3103:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 261,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 257,
                                "name": "wordPos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 233,
                                "src": "3136:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int16",
                                  "typeString": "int16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int16",
                                  "typeString": "int16"
                                }
                              ],
                              "expression": {
                                "id": 255,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "3120:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickBitmap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "3120:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
                                "typeString": "function (int16) view external returns (uint256)"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3120:24:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "id": 259,
                            "name": "mask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3147:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3120:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3103:48:11"
                      },
                      {
                        "expression": {
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 262,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "3276:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 263,
                              "name": "masked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 254,
                              "src": "3290:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3300:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3290:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3276:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "3276:25:11"
                      },
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 268,
                            "name": "next",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "3425:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "id": 269,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "3432:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      },
                                      "id": 288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 286,
                                        "name": "compressed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 147,
                                        "src": "3566:10:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 287,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3579:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3566:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 297,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 293,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "3594:5:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint8_$",
                                                    "typeString": "type(uint8)"
                                                  },
                                                  "typeName": {
                                                    "id": 292,
                                                    "name": "uint8",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3594:5:11",
                                                    "typeDescriptions": {}
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_type$_t_uint8_$",
                                                    "typeString": "type(uint8)"
                                                  }
                                                ],
                                                "id": 291,
                                                "name": "type",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -27,
                                                "src": "3589:4:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                  "typeString": "function () pure"
                                                }
                                              },
                                              "id": 294,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3589:11:11",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_meta_type_t_uint8",
                                                "typeString": "type(uint8)"
                                              }
                                            },
                                            "id": 295,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "max",
                                            "nodeType": "MemberAccess",
                                            "src": "3589:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 296,
                                            "name": "bitPos",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 235,
                                            "src": "3607:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "3589:24:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 290,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3583:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int24_$",
                                          "typeString": "type(int24)"
                                        },
                                        "typeName": {
                                          "id": 289,
                                          "name": "int24",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3583:5:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3583:31:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "src": "3566:48:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "id": 300,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3565:50:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 301,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3618:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "3565:64:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "3432:197:11",
                            "trueExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    "id": 282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      },
                                      "id": 272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 270,
                                        "name": "compressed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 147,
                                        "src": "3463:10:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int24",
                                          "typeString": "int24"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 271,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3476:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3463:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 280,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 277,
                                                "name": "masked",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 254,
                                                "src": "3514:6:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 275,
                                                "name": "BitMath",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1077,
                                                "src": "3486:7:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_BitMath_$1077_$",
                                                  "typeString": "type(library BitMath)"
                                                }
                                              },
                                              "id": 276,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "leastSignificantBit",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1076,
                                              "src": "3486:27:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
                                                "typeString": "function (uint256) pure returns (uint8)"
                                              }
                                            },
                                            "id": 278,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3486:35:11",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 279,
                                            "name": "bitPos",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 235,
                                            "src": "3524:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "3486:44:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 274,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3480:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int24_$",
                                          "typeString": "type(int24)"
                                        },
                                        "typeName": {
                                          "id": 273,
                                          "name": "int24",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3480:5:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 281,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3480:51:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "src": "3463:68:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "id": 283,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3462:70:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 284,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3535:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "3462:84:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3425:204:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3425:204:11"
                      }
                    ]
                  },
                  "id": 307,
                  "nodeType": "IfStatement",
                  "src": "2073:1567:11",
                  "trueBody": {
                    "id": 231,
                    "nodeType": "Block",
                    "src": "2082:727:11",
                    "statements": [
                      {
                        "assignments": [
                          167,
                          169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 167,
                            "mutability": "mutable",
                            "name": "wordPos",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2097:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int16",
                              "typeString": "int16"
                            },
                            "typeName": {
                              "id": 166,
                              "name": "int16",
                              "nodeType": "ElementaryTypeName",
                              "src": "2097:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int16",
                                "typeString": "int16"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 169,
                            "mutability": "mutable",
                            "name": "bitPos",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2112:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 168,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "2112:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 173,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "compressed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "2137:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            ],
                            "id": 170,
                            "name": "position",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "2128:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
                              "typeString": "function (int24) pure returns (int16,uint8)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2128:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
                            "typeString": "tuple(int16,uint8)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2096:52:11"
                      },
                      {
                        "assignments": [
                          175
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 175,
                            "mutability": "mutable",
                            "name": "mask",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2229:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 174,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2229:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 187,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2245:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "id": 177,
                                    "name": "bitPos",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 169,
                                    "src": "2250:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "2245:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 179,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2244:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2260:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2244:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31",
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2265:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "id": 183,
                                  "name": "bitPos",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "2270:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2265:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 185,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2264:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2244:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2229:48:11"
                      },
                      {
                        "assignments": [
                          189
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 189,
                            "mutability": "mutable",
                            "name": "masked",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2291:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 188,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2291:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 196,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 192,
                                "name": "wordPos",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2324:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int16",
                                  "typeString": "int16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int16",
                                  "typeString": "int16"
                                }
                              ],
                              "expression": {
                                "id": 190,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "2308:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickBitmap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "2308:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
                                "typeString": "function (int16) view external returns (uint256)"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2308:24:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "id": 194,
                            "name": "mask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "2335:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2308:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2291:48:11"
                      },
                      {
                        "expression": {
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 197,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "2472:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 198,
                              "name": "masked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "2486:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2496:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2486:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2472:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "2472:25:11"
                      },
                      {
                        "expression": {
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 203,
                            "name": "next",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2621:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "id": 204,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "2628:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    "id": 224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 219,
                                      "name": "compressed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 147,
                                      "src": "2757:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 222,
                                          "name": "bitPos",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 169,
                                          "src": "2776:6:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2770:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int24_$",
                                          "typeString": "type(int24)"
                                        },
                                        "typeName": {
                                          "id": 220,
                                          "name": "int24",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2770:5:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2770:13:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "src": "2757:26:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "id": 225,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2756:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 226,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "2787:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "2756:42:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "2628:170:11",
                            "trueExpression": {
                              "commonType": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 205,
                                      "name": "compressed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 147,
                                      "src": "2659:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 213,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 208,
                                            "name": "bitPos",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 169,
                                            "src": "2678:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "id": 211,
                                                "name": "masked",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 189,
                                                "src": "2714:6:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 209,
                                                "name": "BitMath",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1077,
                                                "src": "2687:7:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_BitMath_$1077_$",
                                                  "typeString": "type(library BitMath)"
                                                }
                                              },
                                              "id": 210,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mostSignificantBit",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 915,
                                              "src": "2687:26:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
                                                "typeString": "function (uint256) pure returns (uint8)"
                                              }
                                            },
                                            "id": 212,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2687:34:11",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "2678:43:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "id": 207,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2672:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int24_$",
                                          "typeString": "type(int24)"
                                        },
                                        "typeName": {
                                          "id": 206,
                                          "name": "int24",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2672:5:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2672:50:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "src": "2659:63:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  }
                                ],
                                "id": 216,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2658:65:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 217,
                                "name": "tickSpacing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "2726:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "src": "2658:79:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "2621:177:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 230,
                        "nodeType": "ExpressionStatement",
                        "src": "2621:177:11"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextInitializedTickWithinOneWord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1707:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1707:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1733:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "lte",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1756:8:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:83:11"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "next",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1800:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1812:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1799:30:11"
            },
            "scope": 798,
            "src": "1653:1993:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "3737:456:11",
              "statements": [
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "liquidityGross",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3740:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3740:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3740:22:11"
                },
                {
                  "assignments": [
                    322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "liquidityNet",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3765:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3765:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3765:19:11"
                },
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "feeGrowthOutside0X128",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3787:29:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3787:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3787:29:11"
                },
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "feeGrowthOutside1X128",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3819:29:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3819:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3819:29:11"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "tickCumulativeOutside",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3851:27:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "int56",
                        "nodeType": "ElementaryTypeName",
                        "src": "3851:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 332,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3851:27:11"
                },
                {
                  "assignments": [
                    334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 334,
                      "mutability": "mutable",
                      "name": "secondsPerLiquidityOutsideX128",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3881:38:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 333,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "3881:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 335,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3881:38:11"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "secondsOutside",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3922:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3922:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3922:21:11"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "initialized",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "3946:16:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3946:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3946:16:11"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 342,
                          "name": "liquidityGross",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "3980:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 343,
                          "name": "liquidityNet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "3996:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        {
                          "id": 344,
                          "name": "feeGrowthOutside0X128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "4010:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 345,
                          "name": "feeGrowthOutside1X128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 328,
                          "src": "4033:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 346,
                          "name": "tickCumulativeOutside",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "4056:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        {
                          "id": 347,
                          "name": "secondsPerLiquidityOutsideX128",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "4079:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "id": 348,
                          "name": "secondsOutside",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "4111:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 349,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "4127:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 350,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3979:160:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_int128_$_t_uint256_$_t_uint256_$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$",
                        "typeString": "tuple(uint128,int128,uint256,uint256,int56,uint160,uint32,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 353,
                          "name": "_tickNext",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "4154:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        ],
                        "expression": {
                          "id": 351,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "4143:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ticks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65,
                        "src": "4143:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_int24_$returns$_t_uint128_$_t_int128_$_t_uint256_$_t_uint256_$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$",
                          "typeString": "function (int24) view external returns (uint128,int128,uint256,uint256,int56,uint160,uint32,bool)"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4143:21:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_int128_$_t_uint256_$_t_uint256_$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$",
                        "typeString": "tuple(uint128,int128,uint256,uint256,int56,uint160,uint32,bool)"
                      }
                    },
                    "src": "3979:185:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:185:11"
                },
                {
                  "expression": {
                    "id": 357,
                    "name": "liquidityNet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 322,
                    "src": "4174:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "functionReturnParameters": 317,
                  "id": 358,
                  "nodeType": "Return",
                  "src": "4167:19:11"
                }
              ]
            },
            "id": 360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liqNet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "3669:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "IUniswapV3Pool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 93,
                    "src": "3669:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_tickNext",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "3690:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3690:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3668:38:11"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "3729:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3729:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3728:8:11"
            },
            "scope": 798,
            "src": "3652:541:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "canonicalName": "UniV3Calc.SwapState",
            "id": 373,
            "members": [
              {
                "constant": false,
                "id": 362,
                "mutability": "mutable",
                "name": "amountSpecifiedRemaining",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4402:31:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 361,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4402:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 364,
                "mutability": "mutable",
                "name": "amountCalculated",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4514:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 363,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4514:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 366,
                "mutability": "mutable",
                "name": "sqrtPriceX96",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4578:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 365,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "4578:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 368,
                "mutability": "mutable",
                "name": "tick",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4662:10:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 367,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "4662:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 370,
                "mutability": "mutable",
                "name": "protocolFee",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4788:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 369,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "4788:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 372,
                "mutability": "mutable",
                "name": "liquidity",
                "nodeType": "VariableDeclaration",
                "scope": 373,
                "src": "4859:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 371,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "4859:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapState",
            "nodeType": "StructDefinition",
            "scope": 798,
            "src": "4296:587:11",
            "visibility": "public"
          },
          {
            "canonicalName": "UniV3Calc.StepComputations",
            "id": 388,
            "members": [
              {
                "constant": false,
                "id": 375,
                "mutability": "mutable",
                "name": "sqrtPriceStartX96",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "4973:25:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 374,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "4973:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 377,
                "mutability": "mutable",
                "name": "tickNext",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5088:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 376,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "5088:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 379,
                "mutability": "mutable",
                "name": "initialized",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5162:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 378,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5162:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "sqrtPriceNextX96",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5235:24:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 380,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "5235:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 383,
                "mutability": "mutable",
                "name": "amountIn",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5322:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 382,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5322:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 385,
                "mutability": "mutable",
                "name": "amountOut",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5389:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 384,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5389:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 387,
                "mutability": "mutable",
                "name": "feeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 388,
                "src": "5457:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 386,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5457:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StepComputations",
            "nodeType": "StructDefinition",
            "scope": 798,
            "src": "4889:592:11",
            "visibility": "public"
          },
          {
            "id": 391,
            "libraryName": {
              "id": 389,
              "name": "LowGasSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1432,
              "src": "5492:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LowGasSafeMath_$1432",
                "typeString": "library LowGasSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "5486:33:11",
            "typeName": {
              "id": 390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5511:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 394,
            "libraryName": {
              "id": 392,
              "name": "LowGasSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1432,
              "src": "5530:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LowGasSafeMath_$1432",
                "typeString": "library LowGasSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "5524:32:11",
            "typeName": {
              "id": 393,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "5549:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 397,
            "libraryName": {
              "id": 395,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1502,
              "src": "5567:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$1502",
                "typeString": "library SafeCast"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "5561:27:11",
            "typeName": {
              "id": 396,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5580:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 400,
            "libraryName": {
              "id": 398,
              "name": "SafeCast",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1502,
              "src": "5599:8:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCast_$1502",
                "typeString": "library SafeCast"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "5593:26:11",
            "typeName": {
              "id": 399,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "5612:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "body": {
              "id": 796,
              "nodeType": "Block",
              "src": "5805:4335:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 416,
                          "name": "amountSpecified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "5823:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5842:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5823:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5815:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:29:11"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 796,
                      "src": "5848:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "5848:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5885:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 423,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "5870:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$93_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5870:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5848:43:11"
                },
                {
                  "assignments": [
                    428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 796,
                      "src": "5894:10:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5894:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 429,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "5907:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "5907:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
                        "typeString": "function () view external returns (uint24)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5894:23:11"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "mutability": "mutable",
                      "name": "slot0Start",
                      "nodeType": "VariableDeclaration",
                      "scope": 796,
                      "src": "5929:38:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                        "typeString": "struct IUniswapV3Pool.Slot0"
                      },
                      "typeName": {
                        "id": 435,
                        "name": "IUniswapV3Pool.Slot0",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 34,
                        "src": "5929:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Slot0_$34_storage_ptr",
                          "typeString": "struct IUniswapV3Pool.Slot0"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 437,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "5970:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "5970:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Slot0_$34_memory_ptr_$",
                        "typeString": "function () view external returns (struct IUniswapV3Pool.Slot0 memory)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5970:12:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                      "typeString": "struct IUniswapV3Pool.Slot0 memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5929:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 442,
                          "name": "slot0Start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "6002:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                            "typeString": "struct IUniswapV3Pool.Slot0 memory"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "unlocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "6002:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5994:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "5994:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "condition": {
                          "id": 447,
                          "name": "zeroForOne",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "6053:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 457,
                              "name": "sqrtPriceLimitX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "6191:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 458,
                                "name": "slot0Start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "6211:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                                  "typeString": "struct IUniswapV3Pool.Slot0 memory"
                                }
                              },
                              "id": 459,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrtPriceX96",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "6211:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "src": "6191:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 461,
                              "name": "sqrtPriceLimitX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "6238:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 462,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3070,
                                "src": "6258:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MAX_SQRT_RATIO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2556,
                              "src": "6258:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "src": "6238:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6191:90:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "6053:228:11",
                        "trueExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 448,
                              "name": "sqrtPriceLimitX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "6082:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 449,
                                "name": "slot0Start",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "6102:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                                  "typeString": "struct IUniswapV3Pool.Slot0 memory"
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrtPriceX96",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "6102:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "src": "6082:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 452,
                              "name": "sqrtPriceLimitX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "6129:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 453,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3070,
                                "src": "6149:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MIN_SQRT_RATIO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2552,
                              "src": "6149:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "src": "6129:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6082:90:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6032:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:259:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "6032:259:11"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "exactInput",
                      "nodeType": "VariableDeclaration",
                      "scope": 796,
                      "src": "6302:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 469,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6302:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 474,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 471,
                      "name": "amountSpecified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "6320:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6338:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6320:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6302:37:11"
                },
                {
                  "assignments": [
                    476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 476,
                      "mutability": "mutable",
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 796,
                      "src": "6350:22:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                        "typeString": "struct UniV3Calc.SwapState"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "SwapState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 373,
                        "src": "6350:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapState_$373_storage_ptr",
                          "typeString": "struct UniV3Calc.SwapState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 478,
                        "name": "amountSpecified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "6441:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6492:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 480,
                          "name": "slot0Start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "6525:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                            "typeString": "struct IUniswapV3Pool.Slot0 memory"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sqrtPriceX96",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "6525:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "expression": {
                          "id": 482,
                          "name": "slot0Start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "6572:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Slot0_$34_memory_ptr",
                            "typeString": "struct IUniswapV3Pool.Slot0 memory"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "6572:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6618:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 485,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "6648:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "liquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "6648:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
                            "typeString": "function () view external returns (uint128)"
                          }
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6648:16:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 477,
                      "name": "SwapState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "6387:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SwapState_$373_storage_ptr_$",
                        "typeString": "type(struct UniV3Calc.SwapState storage pointer)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "amountSpecifiedRemaining",
                      "amountCalculated",
                      "sqrtPriceX96",
                      "tick",
                      "protocolFee",
                      "liquidity"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6387:292:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                      "typeString": "struct UniV3Calc.SwapState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6350:329:11"
                },
                {
                  "body": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "6893:2797:11",
                    "statements": [
                      {
                        "assignments": [
                          500
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 500,
                            "mutability": "mutable",
                            "name": "step",
                            "nodeType": "VariableDeclaration",
                            "scope": 723,
                            "src": "6907:28:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                              "typeString": "struct UniV3Calc.StepComputations"
                            },
                            "typeName": {
                              "id": 499,
                              "name": "StepComputations",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 388,
                              "src": "6907:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StepComputations_$388_storage_ptr",
                                "typeString": "struct UniV3Calc.StepComputations"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 501,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6907:28:11"
                      },
                      {
                        "expression": {
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 502,
                              "name": "step",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "6950:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                "typeString": "struct UniV3Calc.StepComputations memory"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "sqrtPriceStartX96",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 375,
                            "src": "6950:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 505,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "6975:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                "typeString": "struct UniV3Calc.SwapState memory"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sqrtPriceX96",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 366,
                            "src": "6975:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "6950:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "6950:43:11"
                      },
                      {
                        "expression": {
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 509,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7049:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 511,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "tickNext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "7049:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "expression": {
                                  "id": 512,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7064:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "initialized",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 379,
                                "src": "7064:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 514,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7048:33:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_bool_$",
                              "typeString": "tuple(int24,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 516,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "7129:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 517,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "7147:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                    "typeString": "struct UniV3Calc.SwapState memory"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tick",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 368,
                                "src": "7147:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 519,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 404,
                                "src": "7170:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 515,
                              "name": "nextInitializedTickWithinOneWord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "7084:32:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_int24_$_t_bool_$returns$_t_int24_$_t_bool_$",
                                "typeString": "function (address,int24,bool) view returns (int24,bool)"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7084:110:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_bool_$",
                              "typeString": "tuple(int24,bool)"
                            }
                          },
                          "src": "7048:146:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "7048:146:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 523,
                              "name": "step",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "7326:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                "typeString": "struct UniV3Calc.StepComputations memory"
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tickNext",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 377,
                            "src": "7326:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 525,
                              "name": "TickMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3070,
                              "src": "7342:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                "typeString": "type(library TickMath)"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MIN_TICK",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2543,
                            "src": "7342:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "7326:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 536,
                                "name": "step",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "7437:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                  "typeString": "struct UniV3Calc.StepComputations memory"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tickNext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "7437:13:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 538,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3070,
                                "src": "7453:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MAX_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2548,
                              "src": "7453:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "7437:33:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 549,
                          "nodeType": "IfStatement",
                          "src": "7433:105:11",
                          "trueBody": {
                            "id": 548,
                            "nodeType": "Block",
                            "src": "7472:66:11",
                            "statements": [
                              {
                                "expression": {
                                  "id": 546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 541,
                                      "name": "step",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "7490:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                        "typeString": "struct UniV3Calc.StepComputations memory"
                                      }
                                    },
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "tickNext",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 377,
                                    "src": "7490:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 544,
                                      "name": "TickMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3070,
                                      "src": "7506:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                        "typeString": "type(library TickMath)"
                                      }
                                    },
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "MAX_TICK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2548,
                                    "src": "7506:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "7490:33:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "id": 547,
                                "nodeType": "ExpressionStatement",
                                "src": "7490:33:11"
                              }
                            ]
                          }
                        },
                        "id": 550,
                        "nodeType": "IfStatement",
                        "src": "7322:216:11",
                        "trueBody": {
                          "id": 535,
                          "nodeType": "Block",
                          "src": "7361:66:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 528,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 500,
                                    "src": "7379:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                      "typeString": "struct UniV3Calc.StepComputations memory"
                                    }
                                  },
                                  "id": 530,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "tickNext",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 377,
                                  "src": "7379:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 531,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3070,
                                    "src": "7395:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_TICK",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2543,
                                  "src": "7395:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "7379:33:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "id": 534,
                              "nodeType": "ExpressionStatement",
                              "src": "7379:33:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 551,
                              "name": "step",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "7599:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                "typeString": "struct UniV3Calc.StepComputations memory"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "sqrtPriceNextX96",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 381,
                            "src": "7599:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 556,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7651:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tickNext",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "7651:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              ],
                              "expression": {
                                "id": 554,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3070,
                                "src": "7623:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSqrtRatioAtTick",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2930,
                              "src": "7623:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                                "typeString": "function (int24) pure returns (uint160)"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7623:42:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "7599:66:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "7599:66:11"
                      },
                      {
                        "expression": {
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 561,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "7800:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                    "typeString": "struct UniV3Calc.SwapState memory"
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "sqrtPriceX96",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 366,
                                "src": "7800:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "expression": {
                                  "id": 564,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7820:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "amountIn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 383,
                                "src": "7820:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 566,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7835:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 567,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "amountOut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 385,
                                "src": "7835:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 568,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "7851:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 569,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "feeAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 387,
                                "src": "7851:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 570,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7799:67:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint160,uint256,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 573,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "7911:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                    "typeString": "struct UniV3Calc.SwapState memory"
                                  }
                                },
                                "id": 574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sqrtPriceX96",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 366,
                                "src": "7911:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "condition": {
                                  "components": [
                                    {
                                      "condition": {
                                        "id": 575,
                                        "name": "zeroForOne",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 404,
                                        "src": "7948:10:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        },
                                        "id": 583,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 580,
                                            "name": "step",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 500,
                                            "src": "8005:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                              "typeString": "struct UniV3Calc.StepComputations memory"
                                            }
                                          },
                                          "id": 581,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sqrtPriceNextX96",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 381,
                                          "src": "8005:21:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "id": 582,
                                          "name": "sqrtPriceLimitX96",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 408,
                                          "src": "8029:17:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        },
                                        "src": "8005:41:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 584,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "7948:98:11",
                                      "trueExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        },
                                        "id": 579,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 576,
                                            "name": "step",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 500,
                                            "src": "7961:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                              "typeString": "struct UniV3Calc.StepComputations memory"
                                            }
                                          },
                                          "id": 577,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sqrtPriceNextX96",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 381,
                                          "src": "7961:21:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 578,
                                          "name": "sqrtPriceLimitX96",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 408,
                                          "src": "7985:17:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint160",
                                            "typeString": "uint160"
                                          }
                                        },
                                        "src": "7961:41:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 585,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7947:100:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "id": 587,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 500,
                                    "src": "8110:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                      "typeString": "struct UniV3Calc.StepComputations memory"
                                    }
                                  },
                                  "id": 588,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sqrtPriceNextX96",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 381,
                                  "src": "8110:21:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7947:184:11",
                                "trueExpression": {
                                  "id": 586,
                                  "name": "sqrtPriceLimitX96",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "8070:17:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              {
                                "expression": {
                                  "id": 590,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "8149:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                    "typeString": "struct UniV3Calc.SwapState memory"
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "liquidity",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 372,
                                "src": "8149:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "expression": {
                                  "id": 592,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 476,
                                  "src": "8182:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                    "typeString": "struct UniV3Calc.SwapState memory"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountSpecifiedRemaining",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 362,
                                "src": "8182:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              {
                                "id": 594,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 428,
                                "src": "8230:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "expression": {
                                "id": 571,
                                "name": "SwapMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "7869:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SwapMath_$2279_$",
                                  "typeString": "type(library SwapMath)"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "computeSwapStep",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2278,
                              "src": "7869:24:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_int256_$_t_uint24_$returns$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint160,uint160,uint128,int256,uint24) pure returns (uint160,uint256,uint256,uint256)"
                              }
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7869:378:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint160,uint256,uint256,uint256)"
                            }
                          },
                          "src": "7799:448:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 597,
                        "nodeType": "ExpressionStatement",
                        "src": "7799:448:11"
                      },
                      {
                        "condition": {
                          "id": 598,
                          "name": "exactInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "8266:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 654,
                          "nodeType": "Block",
                          "src": "8482:198:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 627,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "8500:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                      "typeString": "struct UniV3Calc.SwapState memory"
                                    }
                                  },
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountSpecifiedRemaining",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 362,
                                  "src": "8500:30:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 632,
                                        "name": "step",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 500,
                                        "src": "8541:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                          "typeString": "struct UniV3Calc.StepComputations memory"
                                        }
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amountOut",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 385,
                                      "src": "8541:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8534:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 630,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8534:6:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8534:22:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8500:56:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 636,
                              "nodeType": "ExpressionStatement",
                              "src": "8500:56:11"
                            },
                            {
                              "expression": {
                                "id": 652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 637,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "8574:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                      "typeString": "struct UniV3Calc.SwapState memory"
                                    }
                                  },
                                  "id": 639,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountCalculated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 364,
                                  "src": "8574:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 649,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 645,
                                              "name": "step",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 500,
                                              "src": "8633:4:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                                "typeString": "struct UniV3Calc.StepComputations memory"
                                              }
                                            },
                                            "id": 646,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amountIn",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 383,
                                            "src": "8633:13:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 647,
                                              "name": "step",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 500,
                                              "src": "8649:4:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                                "typeString": "struct UniV3Calc.StepComputations memory"
                                              }
                                            },
                                            "id": 648,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "feeAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 387,
                                            "src": "8649:14:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8633:30:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8626:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int256_$",
                                          "typeString": "type(int256)"
                                        },
                                        "typeName": {
                                          "id": 643,
                                          "name": "int256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8626:6:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8626:38:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 640,
                                        "name": "state",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 476,
                                        "src": "8599:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                          "typeString": "struct UniV3Calc.SwapState memory"
                                        }
                                      },
                                      "id": 641,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amountCalculated",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 364,
                                      "src": "8599:22:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1404,
                                    "src": "8599:26:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                      "typeString": "function (int256,int256) pure returns (int256)"
                                    }
                                  },
                                  "id": 651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8599:66:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8574:91:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 653,
                              "nodeType": "ExpressionStatement",
                              "src": "8574:91:11"
                            }
                          ]
                        },
                        "id": 655,
                        "nodeType": "IfStatement",
                        "src": "8262:418:11",
                        "trueBody": {
                          "id": 626,
                          "nodeType": "Block",
                          "src": "8278:198:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 599,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "8296:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                      "typeString": "struct UniV3Calc.SwapState memory"
                                    }
                                  },
                                  "id": 601,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountSpecifiedRemaining",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 362,
                                  "src": "8296:30:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 608,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 604,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 500,
                                          "src": "8337:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                            "typeString": "struct UniV3Calc.StepComputations memory"
                                          }
                                        },
                                        "id": 605,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amountIn",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 383,
                                        "src": "8337:13:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 606,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 500,
                                          "src": "8353:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                            "typeString": "struct UniV3Calc.StepComputations memory"
                                          }
                                        },
                                        "id": 607,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "feeAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 387,
                                        "src": "8353:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8337:30:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8330:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 602,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8330:6:11",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8330:38:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8296:72:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 611,
                              "nodeType": "ExpressionStatement",
                              "src": "8296:72:11"
                            },
                            {
                              "expression": {
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 612,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "8386:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                      "typeString": "struct UniV3Calc.SwapState memory"
                                    }
                                  },
                                  "id": 614,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountCalculated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 364,
                                  "src": "8386:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 620,
                                            "name": "step",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 500,
                                            "src": "8445:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                              "typeString": "struct UniV3Calc.StepComputations memory"
                                            }
                                          },
                                          "id": 621,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amountOut",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 385,
                                          "src": "8445:14:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8438:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int256_$",
                                          "typeString": "type(int256)"
                                        },
                                        "typeName": {
                                          "id": 618,
                                          "name": "int256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8438:6:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8438:22:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 615,
                                        "name": "state",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 476,
                                        "src": "8411:5:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                          "typeString": "struct UniV3Calc.SwapState memory"
                                        }
                                      },
                                      "id": 616,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amountCalculated",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 364,
                                      "src": "8411:22:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "id": 617,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1431,
                                    "src": "8411:26:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                      "typeString": "function (int256,int256) pure returns (int256)"
                                    }
                                  },
                                  "id": 623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8411:50:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "8386:75:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 625,
                              "nodeType": "ExpressionStatement",
                              "src": "8386:75:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 656,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "8753:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                "typeString": "struct UniV3Calc.SwapState memory"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sqrtPriceX96",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 366,
                            "src": "8753:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 658,
                              "name": "step",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "8775:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                "typeString": "struct UniV3Calc.StepComputations memory"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sqrtPriceNextX96",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 381,
                            "src": "8775:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "src": "8753:43:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            },
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 705,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "9421:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                  "typeString": "struct UniV3Calc.SwapState memory"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrtPriceX96",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 366,
                              "src": "9421:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 707,
                                "name": "step",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "9443:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                  "typeString": "struct UniV3Calc.StepComputations memory"
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrtPriceStartX96",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 375,
                              "src": "9443:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            "src": "9421:44:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 721,
                          "nodeType": "IfStatement",
                          "src": "9417:263:11",
                          "trueBody": {
                            "id": 720,
                            "nodeType": "Block",
                            "src": "9467:213:11",
                            "statements": [
                              {
                                "expression": {
                                  "id": 718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 710,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 476,
                                      "src": "9605:5:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                        "typeString": "struct UniV3Calc.SwapState memory"
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "tick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 368,
                                    "src": "9605:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 715,
                                          "name": "state",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 476,
                                          "src": "9646:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                            "typeString": "struct UniV3Calc.SwapState memory"
                                          }
                                        },
                                        "id": 716,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sqrtPriceX96",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 366,
                                        "src": "9646:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint160",
                                          "typeString": "uint160"
                                        }
                                      ],
                                      "expression": {
                                        "id": 713,
                                        "name": "TickMath",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3070,
                                        "src": "9618:8:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_TickMath_$3070_$",
                                          "typeString": "type(library TickMath)"
                                        }
                                      },
                                      "id": 714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getTickAtSqrtRatio",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3069,
                                      "src": "9618:27:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$returns$_t_int24_$",
                                        "typeString": "function (uint160) pure returns (int24)"
                                      }
                                    },
                                    "id": 717,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9618:47:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "src": "9605:60:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "id": 719,
                                "nodeType": "ExpressionStatement",
                                "src": "9605:60:11"
                              }
                            ]
                          }
                        },
                        "id": 722,
                        "nodeType": "IfStatement",
                        "src": "8749:931:11",
                        "trueBody": {
                          "id": 704,
                          "nodeType": "Block",
                          "src": "8798:613:11",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "id": 661,
                                  "name": "step",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "8891:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                    "typeString": "struct UniV3Calc.StepComputations memory"
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initialized",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 379,
                                "src": "8891:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 690,
                              "nodeType": "IfStatement",
                              "src": "8887:432:11",
                              "trueBody": {
                                "id": 689,
                                "nodeType": "Block",
                                "src": "8909:410:11",
                                "statements": [
                                  {
                                    "assignments": [
                                      664
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 664,
                                        "mutability": "mutable",
                                        "name": "liquidityNet",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 689,
                                        "src": "8918:19:11",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int128",
                                          "typeString": "int128"
                                        },
                                        "typeName": {
                                          "id": 663,
                                          "name": "int128",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8918:6:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int128",
                                            "typeString": "int128"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 670,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 666,
                                          "name": "pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 422,
                                          "src": "8948:4:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                            "typeString": "contract IUniswapV3Pool"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 667,
                                            "name": "step",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 500,
                                            "src": "8954:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                              "typeString": "struct UniV3Calc.StepComputations memory"
                                            }
                                          },
                                          "id": 668,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tickNext",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 377,
                                          "src": "8954:13:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                            "typeString": "contract IUniswapV3Pool"
                                          },
                                          {
                                            "typeIdentifier": "t_int24",
                                            "typeString": "int24"
                                          }
                                        ],
                                        "id": 665,
                                        "name": "_liqNet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 360,
                                        "src": "8940:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_contract$_IUniswapV3Pool_$93_$_t_int24_$returns$_t_int128_$",
                                          "typeString": "function (contract IUniswapV3Pool,int24) view returns (int128)"
                                        }
                                      },
                                      "id": 669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8940:28:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int128",
                                        "typeString": "int128"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8918:50:11"
                                  },
                                  {
                                    "condition": {
                                      "id": 671,
                                      "name": "zeroForOne",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 404,
                                      "src": "9166:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 677,
                                    "nodeType": "IfStatement",
                                    "src": "9162:44:11",
                                    "trueBody": {
                                      "expression": {
                                        "id": 675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 672,
                                          "name": "liquidityNet",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 664,
                                          "src": "9178:12:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int128",
                                            "typeString": "int128"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 674,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "9193:13:11",
                                          "subExpression": {
                                            "id": 673,
                                            "name": "liquidityNet",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 664,
                                            "src": "9194:12:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int128",
                                              "typeString": "int128"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int128",
                                            "typeString": "int128"
                                          }
                                        },
                                        "src": "9178:28:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int128",
                                          "typeString": "int128"
                                        }
                                      },
                                      "id": 676,
                                      "nodeType": "ExpressionStatement",
                                      "src": "9178:28:11"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 687,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 678,
                                          "name": "state",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 476,
                                          "src": "9229:5:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                            "typeString": "struct UniV3Calc.SwapState memory"
                                          }
                                        },
                                        "id": 680,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "liquidity",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 372,
                                        "src": "9229:15:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 683,
                                              "name": "state",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 476,
                                              "src": "9270:5:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                                "typeString": "struct UniV3Calc.SwapState memory"
                                              }
                                            },
                                            "id": 684,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "liquidity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 372,
                                            "src": "9270:15:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            }
                                          },
                                          {
                                            "id": 685,
                                            "name": "liquidityNet",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 664,
                                            "src": "9287:12:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int128",
                                              "typeString": "int128"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint128",
                                              "typeString": "uint128"
                                            },
                                            {
                                              "typeIdentifier": "t_int128",
                                              "typeString": "int128"
                                            }
                                          ],
                                          "expression": {
                                            "id": 681,
                                            "name": "LiquidityMath",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1302,
                                            "src": "9247:13:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_LiquidityMath_$1302_$",
                                              "typeString": "type(library LiquidityMath)"
                                            }
                                          },
                                          "id": 682,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "addDelta",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1301,
                                          "src": "9247:22:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
                                            "typeString": "function (uint128,int128) pure returns (uint128)"
                                          }
                                        },
                                        "id": 686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9247:53:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "src": "9229:71:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "id": 688,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9229:71:11"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 691,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "9337:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                      "typeString": "struct UniV3Calc.SwapState memory"
                                    }
                                  },
                                  "id": 693,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "tick",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 368,
                                  "src": "9337:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "id": 694,
                                    "name": "zeroForOne",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 404,
                                    "src": "9350:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "expression": {
                                      "id": 699,
                                      "name": "step",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "9383:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                        "typeString": "struct UniV3Calc.StepComputations memory"
                                      }
                                    },
                                    "id": 700,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tickNext",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 377,
                                    "src": "9383:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "9350:46:11",
                                  "trueExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    "id": 698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 695,
                                        "name": "step",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 500,
                                        "src": "9363:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StepComputations_$388_memory_ptr",
                                          "typeString": "struct UniV3Calc.StepComputations memory"
                                        }
                                      },
                                      "id": 696,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tickNext",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "9363:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int24",
                                        "typeString": "int24"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9379:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "9363:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "9337:59:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              "id": 703,
                              "nodeType": "ExpressionStatement",
                              "src": "9337:59:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 490,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "6813:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                            "typeString": "struct UniV3Calc.SwapState memory"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountSpecifiedRemaining",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 362,
                        "src": "6813:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6847:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6813:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 494,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "6852:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                            "typeString": "struct UniV3Calc.SwapState memory"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sqrtPriceX96",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 366,
                        "src": "6852:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 496,
                        "name": "sqrtPriceLimitX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "6874:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "src": "6852:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6813:78:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 724,
                  "nodeType": "WhileStatement",
                  "src": "6806:2884:11"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 725,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "9703:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 726,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "9712:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "id": 727,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9702:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                        "typeString": "tuple(int256,int256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 728,
                          "name": "zeroForOne",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "9723:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 729,
                          "name": "exactInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "9737:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9723:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "expression": {
                              "id": 738,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "9852:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                "typeString": "struct UniV3Calc.SwapState memory"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountCalculated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 364,
                            "src": "9852:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 740,
                              "name": "amountSpecified",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "9876:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 741,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "9894:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                  "typeString": "struct UniV3Calc.SwapState memory"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountSpecifiedRemaining",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 362,
                              "src": "9894:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "9876:48:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "id": 744,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9851:74:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                          "typeString": "tuple(int256,int256)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "9723:202:11",
                      "trueExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 731,
                              "name": "amountSpecified",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "9763:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 732,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "9781:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                  "typeString": "struct UniV3Calc.SwapState memory"
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountSpecifiedRemaining",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 362,
                              "src": "9781:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "9763:48:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "expression": {
                              "id": 735,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "9813:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapState_$373_memory_ptr",
                                "typeString": "struct UniV3Calc.SwapState memory"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amountCalculated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 364,
                            "src": "9813:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9762:74:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                          "typeString": "tuple(int256,int256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                        "typeString": "tuple(int256,int256)"
                      }
                    },
                    "src": "9702:223:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "9702:223:11"
                },
                {
                  "condition": {
                    "id": 748,
                    "name": "zeroForOne",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 404,
                    "src": "9934:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "10042:90:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 775,
                                      "name": "amount0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 411,
                                      "src": "10065:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 777,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "-",
                                      "prefix": true,
                                      "src": "10075:2:11",
                                      "subExpression": {
                                        "hexValue": "31",
                                        "id": 776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10076:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    },
                                    "src": "10065:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10057:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 773,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10057:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10057:21:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 788,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10121:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniV3Calc_$798",
                                          "typeString": "contract UniV3Calc"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniV3Calc_$798",
                                          "typeString": "contract UniV3Calc"
                                        }
                                      ],
                                      "id": 787,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10113:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 786,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10113:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10113:13:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 781,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 422,
                                            "src": "10088:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                              "typeString": "contract IUniswapV3Pool"
                                            }
                                          },
                                          "id": 782,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token0",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 87,
                                          "src": "10088:11:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 783,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10088:13:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 780,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19,
                                      "src": "10081:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$19_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10081:21:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$19",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18,
                                  "src": "10081:31:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10081:46:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10057:70:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 772,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10049:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10049:79:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 793,
                        "nodeType": "ExpressionStatement",
                        "src": "10049:79:11"
                      }
                    ]
                  },
                  "id": 795,
                  "nodeType": "IfStatement",
                  "src": "9930:202:11",
                  "trueBody": {
                    "id": 771,
                    "nodeType": "Block",
                    "src": "9946:90:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 752,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 413,
                                      "src": "9969:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 754,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "-",
                                      "prefix": true,
                                      "src": "9979:2:11",
                                      "subExpression": {
                                        "hexValue": "31",
                                        "id": 753,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9980:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    },
                                    "src": "9969:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9961:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 750,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9961:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9961:21:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 765,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10025:4:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniV3Calc_$798",
                                          "typeString": "contract UniV3Calc"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniV3Calc_$798",
                                          "typeString": "contract UniV3Calc"
                                        }
                                      ],
                                      "id": 764,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10017:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 763,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10017:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10017:13:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 758,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 422,
                                            "src": "9992:4:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$93",
                                              "typeString": "contract IUniswapV3Pool"
                                            }
                                          },
                                          "id": 759,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token1",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 92,
                                          "src": "9992:11:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 760,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9992:13:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 757,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19,
                                      "src": "9985:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$19_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9985:21:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$19",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18,
                                  "src": "9985:31:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9985:46:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9961:70:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 749,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9953:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9953:79:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "9953:79:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9fe2228a",
            "id": 797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calc_v3_swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5652:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5652:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "zeroForOne",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5671:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5671:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "amountSpecified",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5692:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5720:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5720:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5646:105:11"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5773:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "5789:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5789:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5772:32:11"
            },
            "scope": 798,
            "src": "5625:4515:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 799,
        "src": "1461:8686:11"
      }
    ],
    "src": "0:10148:11"
  },
  "bytecode": "608060405234801561001057600080fd5b50611d56806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639fe2228a14610030575b600080fd5b61004361003e366004611aac565b61005a565b604051610051929190611cec565b60405180910390f35b6000808361006757600080fd5b60008690506000816001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a757600080fd5b505afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190611c81565b90506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561011c57600080fd5b505afa158015610130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101549190611b18565b90508060c0015161016457600080fd5b876101af5780600001516001600160a01b0316866001600160a01b03161180156101aa575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b6101e1565b80600001516001600160a01b0316866001600160a01b03161080156101e157506401000276a36001600160a01b038716115b6101ea57600080fd5b6000808813905060006040518060c001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b815260200160006001600160801b03168152602001866001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b15801561027457600080fd5b505afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611bc1565b6001600160801b0316905290505b8051158015906102e05750876001600160a01b031681604001516001600160a01b031614155b15610529576102ed6119f2565b60408201516001600160a01b03168152606082015161030e908d908d610763565b15156040830152600290810b810b60208301819052620d89e719910b121561033f57620d89e719602082015261035e565b6020810151620d89e860029190910b131561035e57620d89e860208201525b61036b81602001516109ea565b6001600160a01b0316606082015260408201516103dc908c6103a5578a6001600160a01b031683606001516001600160a01b0316116103bf565b8a6001600160a01b031683606001516001600160a01b0316105b6103cd5782606001516103cf565b8a5b60a0850151855189610d1c565b60c085015260a084015260808301526001600160a01b03166040830152821561042e5760c08101516080820151835191019003825260a0810151602083015161042491610f0e565b6020830152610459565b60a0810151825101825260c08101516080820151602084015161045392909101610f2a565b60208301525b80606001516001600160a01b031682604001516001600160a01b031614156104e8578060400151156104bf576000610495878360200151610f40565b90508b156104a1576000035b6104af8360a0015182610fe3565b6001600160801b031660a0840152505b8a6104ce5780602001516104d7565b60018160200151035b600290810b900b6060830152610523565b80600001516001600160a01b031682604001516001600160a01b031614610523576105168260400151611099565b600290810b900b60608301525b506102ba565b8115158a15151461054257602081015181518a0361054f565b8060000151890381602001515b9097509550891561065a57846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611a90565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105f69190611cbc565b60206040518083038186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611ca4565b86600019021061065557600080fd5b610755565b846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190611a90565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016106f69190611cbc565b60206040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611ca4565b87600019021061075557600080fd5b505050505094509492505050565b60008060008590506000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611afe565b905060008160020b8760020b816107f157fe5b05905060008760020b12801561081857508160020b8760020b8161081157fe5b0760020b15155b1561082257600019015b851561090057600080610834836113b8565b60405163299ce14b60e11b81529193509150600160ff83161b8001600019019060009082906001600160a01b03891690635339c29690610878908890600401611cd0565b60206040518083038186803b15801561089057600080fd5b505afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190611ca4565b1680151598509050876108e257858360ff168603026108f5565b856108ec826113ca565b840360ff168603025b9850505050506109df565b60008061090f836001016113b8565b60405163299ce14b60e11b81529193509150600019600160ff84161b01199060009082906001600160a01b03891690635339c29690610952908890600401611cd0565b60206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611ca4565b1680151598509050876109c257858360ff0360ff168660010101026109d8565b85836109cd8361146b565b0360ff168660010101025b9850505050505b505050935093915050565b60008060008360020b12610a01578260020b610a09565b8260020b6000035b9050620d89e8811115610a47576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216610a5b57600160801b610a6d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610aa1576ffff97272373d413259a46990580e213a0260801c5b6004821615610ac0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610adf576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610afe576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610b1d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610b3c576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610b5b576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610b7b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610b9b576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610bbb576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610bdb576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610bfb576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610c1b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610c3b576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610c5b576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610c7c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610c9c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610cbb576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610cd8576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610cf3578060001981610cef57fe5b0490505b640100000000810615610d07576001610d0a565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590610da1576000610d558989620f42400362ffffff16620f4240611555565b905082610d6e57610d698c8c8c6001611605565b610d7b565b610d7b8b8d8c6001611680565b9550858110610d8c578a9650610d9b565b610d988c8b838661172b565b96505b50610deb565b81610db857610db38b8b8b6000611680565b610dc5565b610dc58a8c8b6000611605565b9350838860000310610dd957899550610deb565b610de88b8a8a60000385611777565b95505b6001600160a01b038a8116908716148215610e4e57808015610e0a5750815b610e2057610e1b878d8c6001611680565b610e22565b855b9550808015610e2f575081155b610e4557610e40878d8c6000611605565b610e47565b845b9450610e98565b808015610e585750815b610e6e57610e698c888c6001611605565b610e70565b855b9550808015610e7d575081155b610e9357610e8e8c888c6000611680565b610e95565b845b94505b81158015610ea857508860000385115b15610eb4578860000394505b818015610ed357508a6001600160a01b0316876001600160a01b031614155b15610ee2578589039350610eff565b610efc868962ffffff168a620f42400362ffffff166117c3565b93505b50505095509550955095915050565b80820382811315600083121514610f2457600080fd5b92915050565b81810182811215600083121514610f2457600080fd5b60008060008060008060008060008a6001600160a01b031663f30dba938b6040518263ffffffff1660e01b8152600401610f7a9190611cde565b6101006040518083038186803b158015610f9357600080fd5b505afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb9190611bdb565b50949e50505050505050505050505050505092915050565b60008082600f0b121561104857826001600160801b03168260000384039150816001600160801b031610611043576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b610f24565b826001600160801b03168284019150816001600160801b03161015610f24576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b038316108015906110d5575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b61110a576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061119e57607f810383901c91506111a8565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146113a957886001600160a01b031661138d826109ea565b6001600160a01b031611156113a257816113a4565b805b6113ab565b815b9998505050505050505050565b60020b600881901d9161010090910790565b60008082116113d857600080fd5b600160801b82106113eb57608091821c91015b68010000000000000000821061140357604091821c91015b640100000000821061141757602091821c91015b62010000821061142957601091821c91015b610100821061143a57600891821c91015b6010821061144a57600491821c91015b6004821061145a57600291821c91015b60028210611466576001015b919050565b600080821161147957600080fd5b5060ff6001600160801b0382161561149457607f190161149c565b608082901c91505b67ffffffffffffffff8216156114b557603f19016114bd565b604082901c91505b63ffffffff8216156114d257601f19016114da565b602082901c91505b61ffff8216156114ed57600f19016114f5565b601082901c91505b60ff821615611507576007190161150f565b600882901c91505b600f8216156115215760031901611529565b600482901c91505b600382161561153b5760011901611543565b600282901c91505b60018216156114665760001901919050565b600080806000198587098686029250828110908390030390508061158b576000841161158057600080fd5b5082900490506115fe565b80841161159757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000836001600160a01b0316856001600160a01b03161115611625579293925b816116525761164d836001600160801b03168686036001600160a01b0316600160601b611555565b611675565b611675836001600160801b03168686036001600160a01b0316600160601b6117c3565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156116a0579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166116ca57600080fd5b836116fa57866001600160a01b03166116ed8383896001600160a01b0316611555565b816116f457fe5b04611720565b6117206117118383896001600160a01b03166117c3565b886001600160a01b03166117fd565b979650505050505050565b600080856001600160a01b03161161174257600080fd5b6000846001600160801b03161161175857600080fd5b8161176a5761164d8585856001611808565b61167585858560016118e9565b600080856001600160a01b03161161178e57600080fd5b6000846001600160801b0316116117a457600080fd5b816117b65761164d85858560006118e9565b6116758585856000611808565b60006117d0848484611555565b9050600082806117dc57fe5b84860911156115fe5760001981106117f357600080fd5b6001019392505050565b808204910615150190565b6000811561187b5760006001600160a01b0384111561183e5761183984600160601b876001600160801b0316611555565b611856565b6001600160801b038516606085901b8161185457fe5b045b905061187361186e6001600160a01b038816836119cc565b6119dc565b915050611678565b60006001600160a01b038411156118a9576118a484600160601b876001600160801b03166117c3565b6118c0565b6118c0606085901b6001600160801b0387166117fd565b905080866001600160a01b0316116118d757600080fd5b6001600160a01b038616039050611678565b6000826118f7575083611678565b600160601b600160e01b03606085901b168215611985576001600160a01b0386168481029085828161192557fe5b041415611956578181018281106119545761194a83896001600160a01b0316836117c3565b9350505050611678565b505b61197c82611977878a6001600160a01b0316868161197057fe5b04906119cc565b6117fd565b92505050611678565b6001600160a01b0386168481029085828161199c57fe5b041480156119a957508082115b6119b257600080fd5b80820361194a61186e846001600160a01b038b16846117c3565b80820182811015610f2457600080fd5b806001600160a01b038116811461146657600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805161146681611d12565b8051600281900b811461146657600080fd5b80516001600160801b038116811461146657600080fd5b805161146681611cfa565b805161ffff8116811461146657600080fd5b805160ff8116811461146657600080fd5b600060208284031215611aa1578081fd5b81516115fe81611cfa565b60008060008060808587031215611ac1578283fd5b8435611acc81611cfa565b93506020850135611adc81611d12565b9250604085013591506060850135611af381611cfa565b939692955090935050565b600060208284031215611b0f578081fd5b6115fe82611a39565b600060e08284031215611b29578081fd5b60405160e0810181811067ffffffffffffffff82111715611b4657fe5b604052611b5283611a62565b8152611b6060208401611a39565b6020820152611b7160408401611a6d565b6040820152611b8260608401611a6d565b6060820152611b9360808401611a6d565b6080820152611ba460a08401611a7f565b60a0820152611bb560c08401611a2e565b60c08201529392505050565b600060208284031215611bd2578081fd5b6115fe82611a4b565b600080600080600080600080610100898b031215611bf7578384fd5b611c0089611a4b565b9750602089015180600f0b8114611c15578485fd5b80975050604089015195506060890151945060808901518060060b8114611c3a578485fd5b60a08a0151909450611c4b81611cfa565b60c08a015190935063ffffffff81168114611c64578283fd5b9150611c7260e08a01611a2e565b90509295985092959890939650565b600060208284031215611c92578081fd5b815162ffffff811681146115fe578182fd5b600060208284031215611cb5578081fd5b5051919050565b6001600160a01b0391909116815260200190565b60019190910b815260200190565b60029190910b815260200190565b918252602082015260400190565b6001600160a01b0381168114611d0f57600080fd5b50565b8015158114611d0f57600080fdfea26469706673582212206892c23cc160b59038da3c8d2eab54ca5304aa659e0e1be74486559ad8c1c45164736f6c63430007060033",
  "bytecodeSha1": "51b189f027484efde020263c32e7c8a79dad64ef",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "UniV3Calc",
  "coverageMap": {
    "branches": {
      "0": {
        "BitMath.leastSignificantBit": {
          "169": [
            1981,
            1986,
            true
          ],
          "170": [
            2019,
            2044,
            false
          ],
          "171": [
            2132,
            2156,
            false
          ],
          "172": [
            2242,
            2266,
            false
          ],
          "173": [
            2352,
            2376,
            false
          ],
          "174": [
            2462,
            2485,
            false
          ],
          "175": [
            2569,
            2580,
            false
          ],
          "176": [
            2664,
            2675,
            false
          ],
          "177": [
            2759,
            2770,
            false
          ]
        },
        "BitMath.mostSignificantBit": {
          "160": [
            758,
            763,
            true
          ],
          "161": [
            779,
            819,
            false
          ],
          "162": [
            890,
            914,
            false
          ],
          "163": [
            983,
            999,
            false
          ],
          "164": [
            1068,
            1080,
            false
          ],
          "165": [
            1149,
            1159,
            false
          ],
          "166": [
            1226,
            1235,
            false
          ],
          "167": [
            1302,
            1310,
            false
          ],
          "168": [
            1377,
            1385,
            false
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "UniV3Calc.calc_v3_swap": {
          "139": [
            5823,
            5843,
            true
          ],
          "140": [
            6002,
            6021,
            true
          ],
          "141": [
            6053,
            6063,
            true
          ],
          "142": [
            6191,
            6234,
            false
          ],
          "143": [
            6238,
            6281,
            true
          ],
          "144": [
            6082,
            6125,
            false
          ],
          "145": [
            6129,
            6172,
            true
          ],
          "146": [
            7326,
            7359,
            false
          ],
          "147": [
            7437,
            7470,
            false
          ],
          "148": [
            7948,
            7958,
            true
          ],
          "149": [
            8753,
            8796,
            false
          ],
          "150": [
            8891,
            8907,
            false
          ],
          "151": [
            9166,
            9176,
            false
          ],
          "152": [
            9350,
            9360,
            true
          ],
          "153": [
            9421,
            9465,
            false
          ],
          "154": [
            9723,
            9747,
            true
          ],
          "155": [
            9961,
            10031,
            true
          ],
          "156": [
            10057,
            10127,
            true
          ]
        },
        "UniV3Calc.nextInitializedTickWithinOneWord": {
          "157": [
            1978,
            1986,
            false
          ],
          "158": [
            1990,
            2013,
            false
          ],
          "159": [
            2077,
            2080,
            false
          ]
        }
      },
      "2": {
        "FullMath.mulDiv": {
          "178": [
            1539,
            1549,
            false
          ],
          "179": [
            1573,
            1588,
            true
          ],
          "180": [
            1827,
            1846,
            true
          ]
        },
        "FullMath.mulDivRoundingUp": {
          "181": [
            4995,
            5024,
            false
          ],
          "182": [
            5048,
            5074,
            true
          ]
        }
      },
      "3": {
        "LiquidityMath.addDelta": {
          "183": [
            468,
            473,
            false
          ],
          "184": [
            497,
            522,
            true
          ],
          "185": [
            568,
            593,
            true
          ]
        }
      },
      "4": {
        "LowGasSafeMath.add": {
          "187": [
            1358,
            1386,
            true
          ],
          "188": [
            520,
            536,
            true
          ]
        },
        "LowGasSafeMath.sub": {
          "186": [
            1655,
            1683,
            true
          ]
        }
      },
      "5": {
        "SafeCast.toUint160": {
          "189": [
            438,
            459,
            true
          ]
        }
      },
      "6": {
        "SqrtPriceMath.getAmount0Delta": {
          "192": [
            7688,
            7717,
            false
          ],
          "193": [
            7938,
            7955,
            true
          ],
          "194": [
            7986,
            7993,
            true
          ]
        },
        "SqrtPriceMath.getAmount1Delta": {
          "190": [
            8922,
            8951,
            false
          ],
          "191": [
            9046,
            9053,
            true
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp": {
          "205": [
            1710,
            1721,
            false
          ],
          "206": [
            1881,
            1931,
            false
          ],
          "207": [
            2015,
            2040,
            false
          ],
          "208": [
            2529,
            2579,
            false
          ],
          "209": [
            2583,
            2603,
            true
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown": {
          "201": [
            3946,
            3949,
            false
          ],
          "202": [
            4022,
            4049,
            true
          ],
          "203": [
            4373,
            4400,
            true
          ],
          "204": [
            4627,
            4646,
            true
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromInput": {
          "195": [
            5502,
            5514,
            true
          ],
          "196": [
            5533,
            5546,
            true
          ],
          "197": [
            5643,
            5653,
            true
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromOutput": {
          "198": [
            6600,
            6612,
            true
          ],
          "199": [
            6631,
            6644,
            true
          ],
          "200": [
            6735,
            6745,
            true
          ]
        }
      },
      "7": {
        "SwapMath.computeSwapStep": {
          "210": [
            2038,
            2048,
            true
          ],
          "211": [
            2278,
            2312,
            false
          ],
          "212": [
            2653,
            2663,
            true
          ],
          "213": [
            2895,
            2933,
            false
          ],
          "214": [
            3397,
            3400,
            false
          ],
          "215": [
            3404,
            3411,
            true
          ],
          "216": [
            3568,
            3571,
            false
          ],
          "217": [
            3576,
            3583,
            true
          ],
          "218": [
            3758,
            3761,
            false
          ],
          "219": [
            3765,
            3772,
            true
          ],
          "220": [
            3929,
            3932,
            false
          ],
          "221": [
            3937,
            3944,
            true
          ],
          "222": [
            4178,
            4185,
            false
          ],
          "223": [
            4189,
            4226,
            false
          ],
          "224": [
            4304,
            4311,
            false
          ],
          "225": [
            4315,
            4353,
            false
          ]
        }
      },
      "9": {
        "TickMath.getSqrtRatioAtTick": {
          "226": [
            1466,
            1474,
            true
          ],
          "227": [
            1541,
            1569,
            true
          ],
          "228": [
            1709,
            1727,
            false
          ],
          "229": [
            1802,
            1820,
            false
          ],
          "230": [
            1895,
            1913,
            false
          ],
          "231": [
            1988,
            2007,
            false
          ],
          "232": [
            2082,
            2101,
            false
          ],
          "233": [
            2176,
            2195,
            false
          ],
          "234": [
            2270,
            2289,
            false
          ],
          "235": [
            2364,
            2384,
            false
          ],
          "236": [
            2459,
            2479,
            false
          ],
          "237": [
            2554,
            2574,
            false
          ],
          "238": [
            2649,
            2669,
            false
          ],
          "239": [
            2744,
            2765,
            false
          ],
          "240": [
            2840,
            2861,
            false
          ],
          "241": [
            2936,
            2957,
            false
          ],
          "242": [
            3032,
            3053,
            false
          ],
          "243": [
            3128,
            3150,
            false
          ],
          "244": [
            3224,
            3246,
            false
          ],
          "245": [
            3319,
            3341,
            false
          ],
          "246": [
            3412,
            3434,
            false
          ],
          "247": [
            3501,
            3509,
            false
          ],
          "248": [
            3894,
            3916,
            true
          ]
        },
        "TickMath.getTickAtSqrtRatio": {
          "249": [
            4554,
            4584,
            false
          ],
          "250": [
            4588,
            4617,
            true
          ],
          "251": [
            5775,
            5785,
            false
          ],
          "252": [
            8535,
            8552,
            true
          ],
          "253": [
            8565,
            8607,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BitMath.leastSignificantBit": {
          "87": [
            1973,
            1987
          ],
          "88": [
            1998,
            2005
          ],
          "89": [
            2060,
            2068
          ],
          "90": [
            2099,
            2108
          ],
          "91": [
            2172,
            2179
          ],
          "92": [
            2210,
            2218
          ],
          "93": [
            2282,
            2289
          ],
          "94": [
            2320,
            2328
          ],
          "95": [
            2392,
            2399
          ],
          "96": [
            2430,
            2438
          ],
          "97": [
            2501,
            2507
          ],
          "98": [
            2538,
            2545
          ],
          "99": [
            2596,
            2602
          ],
          "100": [
            2633,
            2640
          ],
          "101": [
            2691,
            2697
          ],
          "102": [
            2728,
            2735
          ],
          "103": [
            2772,
            2778
          ]
        },
        "BitMath.mostSignificantBit": {
          "71": [
            750,
            764
          ],
          "72": [
            835,
            844
          ],
          "73": [
            858,
            866
          ],
          "74": [
            930,
            938
          ],
          "75": [
            952,
            959
          ],
          "76": [
            1015,
            1023
          ],
          "77": [
            1037,
            1044
          ],
          "78": [
            1096,
            1104
          ],
          "79": [
            1118,
            1125
          ],
          "80": [
            1175,
            1182
          ],
          "81": [
            1196,
            1202
          ],
          "82": [
            1251,
            1258
          ],
          "83": [
            1272,
            1278
          ],
          "84": [
            1326,
            1333
          ],
          "85": [
            1347,
            1353
          ],
          "86": [
            1387,
            1393
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "UniV3Calc._liqNet": {
          "62": [
            3979,
            4164
          ]
        },
        "UniV3Calc.calc_v3_swap": {
          "0": [
            5815,
            5844
          ],
          "1": [
            5994,
            6022
          ],
          "2": [
            6032,
            6291
          ],
          "3": [
            6950,
            6993
          ],
          "4": [
            7048,
            7194
          ],
          "5": [
            7379,
            7412
          ],
          "6": [
            7490,
            7523
          ],
          "7": [
            7599,
            7665
          ],
          "8": [
            7799,
            8247
          ],
          "9": [
            8296,
            8368
          ],
          "10": [
            8386,
            8461
          ],
          "11": [
            8500,
            8556
          ],
          "12": [
            8574,
            8665
          ],
          "13": [
            9178,
            9206
          ],
          "14": [
            9229,
            9300
          ],
          "15": [
            9337,
            9396
          ],
          "16": [
            9605,
            9665
          ],
          "17": [
            9702,
            9925
          ],
          "18": [
            9953,
            10032
          ],
          "19": [
            10049,
            10128
          ]
        },
        "UniV3Calc.nextInitializedTickWithinOneWord": {
          "20": [
            2015,
            2027
          ],
          "21": [
            2472,
            2497
          ],
          "22": [
            2621,
            2798
          ],
          "23": [
            3276,
            3301
          ],
          "24": [
            3425,
            3629
          ]
        },
        "UniV3Calc.position": {
          "69": [
            1578,
            1604
          ],
          "70": [
            1614,
            1640
          ]
        }
      },
      "2": {
        "FullMath.mulDiv": {
          "104": [
            1565,
            1589
          ],
          "105": [
            1690,
            1703
          ],
          "106": [
            1819,
            1847
          ],
          "107": [
            3706,
            3734
          ],
          "108": [
            3764,
            3792
          ],
          "109": [
            3823,
            3851
          ],
          "110": [
            3882,
            3910
          ],
          "111": [
            3941,
            3969
          ],
          "112": [
            4001,
            4029
          ],
          "113": [
            3101,
            3122
          ],
          "114": [
            4467,
            4487
          ]
        },
        "FullMath.mulDivRoundingUp": {
          "126": [
            4947,
            4981
          ],
          "127": [
            5040,
            5075
          ],
          "128": [
            5089,
            5097
          ]
        }
      },
      "3": {
        "LiquidityMath.addDelta": {
          "63": [
            489,
            529
          ],
          "64": [
            560,
            600
          ]
        }
      },
      "4": {
        "LowGasSafeMath.add": {
          "61": [
            1350,
            1387
          ],
          "137": [
            512,
            537
          ]
        },
        "LowGasSafeMath.sub": {
          "60": [
            1647,
            1684
          ]
        }
      },
      "5": {
        "SafeCast.toUint160": {
          "138": [
            430,
            460
          ]
        }
      },
      "6": {
        "SqrtPriceMath.getAmount0Delta": {
          "117": [
            7719,
            7782
          ],
          "118": [
            7930,
            7956
          ],
          "119": [
            7967,
            8264
          ]
        },
        "SqrtPriceMath.getAmount1Delta": {
          "115": [
            8953,
            9016
          ],
          "116": [
            9027,
            9251
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp": {
          "132": [
            1723,
            1738
          ],
          "133": [
            2109,
            2185
          ],
          "134": [
            2214,
            2303
          ],
          "135": [
            2521,
            2604
          ],
          "136": [
            2674,
            2753
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown": {
          "129": [
            4235,
            4285
          ],
          "130": [
            4619,
            4647
          ],
          "131": [
            4697,
            4732
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromInput": {
          "120": [
            5494,
            5515
          ],
          "121": [
            5525,
            5547
          ],
          "122": [
            5624,
            5841
          ]
        },
        "SqrtPriceMath.getNextSqrtPriceFromOutput": {
          "123": [
            6592,
            6613
          ],
          "124": [
            6623,
            6645
          ],
          "125": [
            6716,
            6937
          ]
        }
      },
      "7": {
        "SwapMath.computeSwapStep": {
          "47": [
            2027,
            2260
          ],
          "48": [
            2314,
            2351
          ],
          "49": [
            2386,
            2610
          ],
          "50": [
            2641,
            2877
          ],
          "51": [
            2935,
            2972
          ],
          "52": [
            3007,
            3235
          ],
          "53": [
            3386,
            3542
          ],
          "54": [
            3556,
            3716
          ],
          "55": [
            3747,
            3903
          ],
          "56": [
            3917,
            4077
          ],
          "57": [
            4242,
            4279
          ],
          "58": [
            4462,
            4509
          ],
          "59": [
            4540,
            4611
          ]
        }
      },
      "9": {
        "TickMath.getSqrtRatioAtTick": {
          "25": [
            1533,
            1575
          ],
          "26": [
            1729,
            1788
          ],
          "27": [
            1822,
            1881
          ],
          "28": [
            1915,
            1974
          ],
          "29": [
            2009,
            2068
          ],
          "30": [
            2103,
            2162
          ],
          "31": [
            2197,
            2256
          ],
          "32": [
            2291,
            2350
          ],
          "33": [
            2386,
            2445
          ],
          "34": [
            2481,
            2540
          ],
          "35": [
            2576,
            2635
          ],
          "36": [
            2671,
            2730
          ],
          "37": [
            2767,
            2826
          ],
          "38": [
            2863,
            2922
          ],
          "39": [
            2959,
            3018
          ],
          "40": [
            3055,
            3114
          ],
          "41": [
            3152,
            3210
          ],
          "42": [
            3248,
            3305
          ],
          "43": [
            3343,
            3398
          ],
          "44": [
            3436,
            3486
          ],
          "45": [
            3511,
            3544
          ],
          "46": [
            3854,
            3926
          ]
        },
        "TickMath.getTickAtSqrtRatio": {
          "65": [
            4546,
            4623
          ],
          "66": [
            5787,
            5811
          ],
          "67": [
            5826,
            5850
          ],
          "68": [
            8528,
            8626
          ]
        }
      }
    }
  },
  "dependencies": [
    "BitMath",
    "FixedPoint96",
    "FullMath",
    "IERC20",
    "IUniswapV3Pool",
    "LiquidityMath",
    "LowGasSafeMath",
    "SafeCast",
    "SqrtPriceMath",
    "SwapMath",
    "TickMath",
    "UnsafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80639fe2228a14610030575b600080fd5b61004361003e366004611aac565b61005a565b604051610051929190611cec565b60405180910390f35b6000808361006757600080fd5b60008690506000816001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a757600080fd5b505afa1580156100bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100df9190611c81565b90506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561011c57600080fd5b505afa158015610130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101549190611b18565b90508060c0015161016457600080fd5b876101af5780600001516001600160a01b0316866001600160a01b03161180156101aa575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b6101e1565b80600001516001600160a01b0316866001600160a01b03161080156101e157506401000276a36001600160a01b038716115b6101ea57600080fd5b6000808813905060006040518060c001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b815260200160006001600160801b03168152602001866001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b15801561027457600080fd5b505afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611bc1565b6001600160801b0316905290505b8051158015906102e05750876001600160a01b031681604001516001600160a01b031614155b15610529576102ed6119f2565b60408201516001600160a01b03168152606082015161030e908d908d610763565b15156040830152600290810b810b60208301819052620d89e719910b121561033f57620d89e719602082015261035e565b6020810151620d89e860029190910b131561035e57620d89e860208201525b61036b81602001516109ea565b6001600160a01b0316606082015260408201516103dc908c6103a5578a6001600160a01b031683606001516001600160a01b0316116103bf565b8a6001600160a01b031683606001516001600160a01b0316105b6103cd5782606001516103cf565b8a5b60a0850151855189610d1c565b60c085015260a084015260808301526001600160a01b03166040830152821561042e5760c08101516080820151835191019003825260a0810151602083015161042491610f0e565b6020830152610459565b60a0810151825101825260c08101516080820151602084015161045392909101610f2a565b60208301525b80606001516001600160a01b031682604001516001600160a01b031614156104e8578060400151156104bf576000610495878360200151610f40565b90508b156104a1576000035b6104af8360a0015182610fe3565b6001600160801b031660a0840152505b8a6104ce5780602001516104d7565b60018160200151035b600290810b900b6060830152610523565b80600001516001600160a01b031682604001516001600160a01b031614610523576105168260400151611099565b600290810b900b60608301525b506102ba565b8115158a15151461054257602081015181518a0361054f565b8060000151890381602001515b9097509550891561065a57846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190611a90565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105f69190611cbc565b60206040518083038186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611ca4565b86600019021061065557600080fd5b610755565b846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190611a90565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016106f69190611cbc565b60206040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611ca4565b87600019021061075557600080fd5b505050505094509492505050565b60008060008590506000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a657600080fd5b505afa1580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611afe565b905060008160020b8760020b816107f157fe5b05905060008760020b12801561081857508160020b8760020b8161081157fe5b0760020b15155b1561082257600019015b851561090057600080610834836113b8565b60405163299ce14b60e11b81529193509150600160ff83161b8001600019019060009082906001600160a01b03891690635339c29690610878908890600401611cd0565b60206040518083038186803b15801561089057600080fd5b505afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190611ca4565b1680151598509050876108e257858360ff168603026108f5565b856108ec826113ca565b840360ff168603025b9850505050506109df565b60008061090f836001016113b8565b60405163299ce14b60e11b81529193509150600019600160ff84161b01199060009082906001600160a01b03891690635339c29690610952908890600401611cd0565b60206040518083038186803b15801561096a57600080fd5b505afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611ca4565b1680151598509050876109c257858360ff0360ff168660010101026109d8565b85836109cd8361146b565b0360ff168660010101025b9850505050505b505050935093915050565b60008060008360020b12610a01578260020b610a09565b8260020b6000035b9050620d89e8811115610a47576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b600060018216610a5b57600160801b610a6d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610aa1576ffff97272373d413259a46990580e213a0260801c5b6004821615610ac0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610adf576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610afe576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610b1d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610b3c576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610b5b576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610b7b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610b9b576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610bbb576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610bdb576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610bfb576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610c1b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610c3b576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610c5b576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610c7c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610c9c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610cbb576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610cd8576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610cf3578060001981610cef57fe5b0490505b640100000000810615610d07576001610d0a565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590610da1576000610d558989620f42400362ffffff16620f4240611555565b905082610d6e57610d698c8c8c6001611605565b610d7b565b610d7b8b8d8c6001611680565b9550858110610d8c578a9650610d9b565b610d988c8b838661172b565b96505b50610deb565b81610db857610db38b8b8b6000611680565b610dc5565b610dc58a8c8b6000611605565b9350838860000310610dd957899550610deb565b610de88b8a8a60000385611777565b95505b6001600160a01b038a8116908716148215610e4e57808015610e0a5750815b610e2057610e1b878d8c6001611680565b610e22565b855b9550808015610e2f575081155b610e4557610e40878d8c6000611605565b610e47565b845b9450610e98565b808015610e585750815b610e6e57610e698c888c6001611605565b610e70565b855b9550808015610e7d575081155b610e9357610e8e8c888c6000611680565b610e95565b845b94505b81158015610ea857508860000385115b15610eb4578860000394505b818015610ed357508a6001600160a01b0316876001600160a01b031614155b15610ee2578589039350610eff565b610efc868962ffffff168a620f42400362ffffff166117c3565b93505b50505095509550955095915050565b80820382811315600083121514610f2457600080fd5b92915050565b81810182811215600083121514610f2457600080fd5b60008060008060008060008060008a6001600160a01b031663f30dba938b6040518263ffffffff1660e01b8152600401610f7a9190611cde565b6101006040518083038186803b158015610f9357600080fd5b505afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb9190611bdb565b50949e50505050505050505050505050505092915050565b60008082600f0b121561104857826001600160801b03168260000384039150816001600160801b031610611043576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b610f24565b826001600160801b03168284019150816001600160801b03161015610f24576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b038316108015906110d5575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b61110a576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061119e57607f810383901c91506111a8565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146113a957886001600160a01b031661138d826109ea565b6001600160a01b031611156113a257816113a4565b805b6113ab565b815b9998505050505050505050565b60020b600881901d9161010090910790565b60008082116113d857600080fd5b600160801b82106113eb57608091821c91015b68010000000000000000821061140357604091821c91015b640100000000821061141757602091821c91015b62010000821061142957601091821c91015b610100821061143a57600891821c91015b6010821061144a57600491821c91015b6004821061145a57600291821c91015b60028210611466576001015b919050565b600080821161147957600080fd5b5060ff6001600160801b0382161561149457607f190161149c565b608082901c91505b67ffffffffffffffff8216156114b557603f19016114bd565b604082901c91505b63ffffffff8216156114d257601f19016114da565b602082901c91505b61ffff8216156114ed57600f19016114f5565b601082901c91505b60ff821615611507576007190161150f565b600882901c91505b600f8216156115215760031901611529565b600482901c91505b600382161561153b5760011901611543565b600282901c91505b60018216156114665760001901919050565b600080806000198587098686029250828110908390030390508061158b576000841161158057600080fd5b5082900490506115fe565b80841161159757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000836001600160a01b0316856001600160a01b03161115611625579293925b816116525761164d836001600160801b03168686036001600160a01b0316600160601b611555565b611675565b611675836001600160801b03168686036001600160a01b0316600160601b6117c3565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156116a0579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166116ca57600080fd5b836116fa57866001600160a01b03166116ed8383896001600160a01b0316611555565b816116f457fe5b04611720565b6117206117118383896001600160a01b03166117c3565b886001600160a01b03166117fd565b979650505050505050565b600080856001600160a01b03161161174257600080fd5b6000846001600160801b03161161175857600080fd5b8161176a5761164d8585856001611808565b61167585858560016118e9565b600080856001600160a01b03161161178e57600080fd5b6000846001600160801b0316116117a457600080fd5b816117b65761164d85858560006118e9565b6116758585856000611808565b60006117d0848484611555565b9050600082806117dc57fe5b84860911156115fe5760001981106117f357600080fd5b6001019392505050565b808204910615150190565b6000811561187b5760006001600160a01b0384111561183e5761183984600160601b876001600160801b0316611555565b611856565b6001600160801b038516606085901b8161185457fe5b045b905061187361186e6001600160a01b038816836119cc565b6119dc565b915050611678565b60006001600160a01b038411156118a9576118a484600160601b876001600160801b03166117c3565b6118c0565b6118c0606085901b6001600160801b0387166117fd565b905080866001600160a01b0316116118d757600080fd5b6001600160a01b038616039050611678565b6000826118f7575083611678565b600160601b600160e01b03606085901b168215611985576001600160a01b0386168481029085828161192557fe5b041415611956578181018281106119545761194a83896001600160a01b0316836117c3565b9350505050611678565b505b61197c82611977878a6001600160a01b0316868161197057fe5b04906119cc565b6117fd565b92505050611678565b6001600160a01b0386168481029085828161199c57fe5b041480156119a957508082115b6119b257600080fd5b80820361194a61186e846001600160a01b038b16846117c3565b80820182811015610f2457600080fd5b806001600160a01b038116811461146657600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b805161146681611d12565b8051600281900b811461146657600080fd5b80516001600160801b038116811461146657600080fd5b805161146681611cfa565b805161ffff8116811461146657600080fd5b805160ff8116811461146657600080fd5b600060208284031215611aa1578081fd5b81516115fe81611cfa565b60008060008060808587031215611ac1578283fd5b8435611acc81611cfa565b93506020850135611adc81611d12565b9250604085013591506060850135611af381611cfa565b939692955090935050565b600060208284031215611b0f578081fd5b6115fe82611a39565b600060e08284031215611b29578081fd5b60405160e0810181811067ffffffffffffffff82111715611b4657fe5b604052611b5283611a62565b8152611b6060208401611a39565b6020820152611b7160408401611a6d565b6040820152611b8260608401611a6d565b6060820152611b9360808401611a6d565b6080820152611ba460a08401611a7f565b60a0820152611bb560c08401611a2e565b60c08201529392505050565b600060208284031215611bd2578081fd5b6115fe82611a4b565b600080600080600080600080610100898b031215611bf7578384fd5b611c0089611a4b565b9750602089015180600f0b8114611c15578485fd5b80975050604089015195506060890151945060808901518060060b8114611c3a578485fd5b60a08a0151909450611c4b81611cfa565b60c08a015190935063ffffffff81168114611c64578283fd5b9150611c7260e08a01611a2e565b90509295985092959890939650565b600060208284031215611c92578081fd5b815162ffffff811681146115fe578182fd5b600060208284031215611cb5578081fd5b5051919050565b6001600160a01b0391909116815260200190565b60019190910b815260200190565b60029190910b815260200190565b918252602082015260400190565b6001600160a01b0381168114611d0f57600080fd5b50565b8015158114611d0f57600080fdfea26469706673582212206892c23cc160b59038da3c8d2eab54ca5304aa659e0e1be74486559ad8c1c45164736f6c63430007060033",
  "deployedSourceMap": "1461:8686:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5625:4515;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;5773:14;;5823:20;5815:29;;;;;;5848:19;5885:5;5848:43;;5894:10;5907:4;-1:-1:-1;;;;;5907:8:11;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5894:23;;5929:38;5970:4;-1:-1:-1;;;;;5970:10:11;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5929:53;;6002:10;:19;;;5994:28;;;;;;6053:10;:228;;6211:10;:23;;;-1:-1:-1;;;;;6191:43:11;:17;-1:-1:-1;;;;;6191:43:11;;:90;;;;-1:-1:-1;995:49:9;-1:-1:-1;;;;;6238:43:11;;;6191:90;6053:228;;;6102:10;:23;;;-1:-1:-1;;;;;6082:43:11;:17;-1:-1:-1;;;;;6082:43:11;;:90;;;;-1:-1:-1;815:10:9;-1:-1:-1;;;;;6129:43:11;;;6082:90;6032:259;;;;;;6302:15;6338:1;6320:15;:19;6302:37;;6350:22;6387:292;;;;;;;;6441:15;6387:292;;;;6492:1;6387:292;;;;6525:10;:23;;;-1:-1:-1;;;;;6387:292:11;;;;;6572:10;:15;;;6387:292;;;;;;6618:1;-1:-1:-1;;;;;6387:292:11;;;;;6648:4;-1:-1:-1;;;;;6648:14:11;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6387:292:11;;;6350:329;-1:-1:-1;6806:2884:11;6813:30;;:35;;;;:78;;;6874:17;-1:-1:-1;;;;;6852:39:11;:5;:18;;;-1:-1:-1;;;;;6852:39:11;;;6813:78;6806:2884;;;6907:28;;:::i;:::-;6975:18;;;;-1:-1:-1;;;;;6950:43:11;;;7147:10;;;;7084:110;;7129:5;;7170:10;7084:32;:110::i;:::-;7048:146;;7064:16;;;7048:146;;;;;;;7049:13;;;7048:146;;;-1:-1:-1;;7326:33:11;;;7322:216;;;-1:-1:-1;;7379:13:11;;;:33;7322:216;;;7437:13;;;;635:9:9;7437:33:11;;;;;;7433:105;;;635:9:9;7490:13:11;;;:33;7433:105;7623:42;7651:4;:13;;;7623:27;:42::i;:::-;-1:-1:-1;;;;;7599:66:11;:21;;;:66;7911:18;;;;7869:378;;7948:10;:98;;8029:17;-1:-1:-1;;;;;8005:41:11;:4;:21;;;-1:-1:-1;;;;;8005:41:11;;7948:98;;;7985:17;-1:-1:-1;;;;;7961:41:11;:4;:21;;;-1:-1:-1;;;;;7961:41:11;;7948:98;7947:184;;8110:4;:21;;;7947:184;;;8070:17;7947:184;8149:15;;;;8182:30;;8230:3;7869:24;:378::i;:::-;7851:14;;;7799:448;7835:14;;;7799:448;7820:13;;;7799:448;-1:-1:-1;;;;;7799:448:11;7800:18;;;7799:448;8262:418;;;;8353:14;;;;8337:13;;;;8296:72;;8337:30;;8296:72;;;;8445:14;;;;8411:22;;;;:50;;:26;:50::i;:::-;8386:22;;;:75;8262:418;;;8541:14;;;;8500:56;;;;;8649:14;;;;8633:13;;;;8599:22;;;;:66;;:22;;8633:30;8599:26;:66::i;:::-;8574:22;;;:91;8262:418;8775:4;:21;;;-1:-1:-1;;;;;8753:43:11;:5;:18;;;-1:-1:-1;;;;;8753:43:11;;8749:931;;;8891:4;:16;;;8887:432;;;8918:19;8940:28;8948:4;8954;:13;;;8940:7;:28::i;:::-;8918:50;;9166:10;9162:44;;;9193:13;;9162:44;9247:53;9270:5;:15;;;9287:12;9247:22;:53::i;:::-;-1:-1:-1;;;;;9229:71:11;:15;;;:71;-1:-1:-1;8887:432:11;9350:10;:46;;9383:4;:13;;;9350:46;;;9379:1;9363:4;:13;;;:17;9350:46;9337:59;;;;;;:10;;;:59;8749:931;;;9443:4;:22;;;-1:-1:-1;;;;;9421:44:11;:5;:18;;;-1:-1:-1;;;;;9421:44:11;;9417:263;;9618:47;9646:5;:18;;;9618:27;:47::i;:::-;9605:60;;;;;;:10;;;:60;9417:263;6806:2884;;;;9737:10;9723:24;;:10;:24;;;:202;;9852:22;;;;9894:30;;9876:48;;9723:202;;;9781:5;:30;;;9763:15;:48;9813:5;:22;;;9723:202;9702:223;;-1:-1:-1;9702:223:11;-1:-1:-1;9930:202:11;;;;9992:4;-1:-1:-1;;;;;9992:11:11;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9985:31:11;;10025:4;9985:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9969:7;-1:-1:-1;;9969:12:11;9961:70;9953:79;;;;;;9930:202;;;10088:4;-1:-1:-1;;;;;10088:11:11;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10081:31:11;;10121:4;10081:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10065:7;-1:-1:-1;;10065:12:11;10057:70;10049:79;;;;;;5625:4515;;;;;;;;;;;;:::o;1653:1993::-;1800:10;1812:16;1833:19;1870:5;1833:43;;1879:17;1899:4;-1:-1:-1;;;;;1899:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1879:38;;1927:16;1953:11;1946:18;;:4;:18;;;;;;;;1927:37;;1985:1;1978:4;:8;;;:35;;;;;1997:11;1990:18;;:4;:18;;;;;;;;:23;;;;1978:35;1974:53;;;-1:-1:-1;;2015:12:11;1974:53;2077:3;2073:1567;;;2097:13;2112:12;2128:20;2137:10;2128:8;:20::i;:::-;2308:24;;-1:-1:-1;;;2308:24:11;;2096:52;;-1:-1:-1;2096:52:11;-1:-1:-1;2265:1:11;:11;;;;2244:33;;-1:-1:-1;;2244:33:11;;2229:12;;2244:33;;-1:-1:-1;;;;;2308:15:11;;;;;:24;;2096:52;;2308:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;2486:11;;;;-1:-1:-1;2308:31:11;-1:-1:-1;2486:11:11;2628:170;;2787:11;2776:6;2770:13;;2757:10;:26;2756:42;2628:170;;;2726:11;2687:34;2714:6;2687:26;:34::i;:::-;2678:6;:43;2672:50;;2659:10;:63;2658:79;2628:170;2621:177;;2073:1567;;;;;;;2927:13;2942:12;2958:24;2967:10;2980:1;2967:14;2958:8;:24::i;:::-;3120;;-1:-1:-1;;;3120:24:11;;2926:56;;-1:-1:-1;2926:56:11;-1:-1:-1;;;3087:1:11;3072:11;;;;3071:17;3069:20;;3054:12;;3069:20;;-1:-1:-1;;;;;3120:15:11;;;;;:24;;2926:56;;3120:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;3290:11;;;;-1:-1:-1;3120:31:11;-1:-1:-1;3290:11:11;3432:197;;3618:11;3607:6;3589:15;:24;3583:31;;3566:10;3579:1;3566:14;:48;3565:64;3432:197;;;3535:11;3524:6;3486:35;3514:6;3486:27;:35::i;:::-;:44;3480:51;;3463:10;3476:1;3463:14;:68;3462:84;3432:197;3425:204;;2073:1567;;;;;1653:1993;;;;;;;;;:::o;1353:2580:9:-;1416:20;1448:15;1473:1;1466:4;:8;;;:57;;1517:4;1510:12;;1466:57;;;1493:4;1486:12;;1485:13;;1466:57;1448:75;-1:-1:-1;635:9:9;1541:28;;;1533:42;;;;;-1:-1:-1;;;1533:42:9;;;;;;;;;;;;-1:-1:-1;;;1533:42:9;;;;;;;;;;;;;;;1586:13;1612:3;1602:13;;:93;;-1:-1:-1;;;1602:93:9;;;1623:34;1602:93;1586:109;;;-1:-1:-1;1719:3:9;1709:13;;:18;1705:83;;1746:34;1738:42;1785:3;1737:51;1705:83;1812:3;1802:13;;:18;1798:83;;1839:34;1831:42;1878:3;1830:51;1798:83;1905:3;1895:13;;:18;1891:83;;1932:34;1924:42;1971:3;1923:51;1891:83;1998:4;1988:14;;:19;1984:84;;2026:34;2018:42;2065:3;2017:51;1984:84;2092:4;2082:14;;:19;2078:84;;2120:34;2112:42;2159:3;2111:51;2078:84;2186:4;2176:14;;:19;2172:84;;2214:34;2206:42;2253:3;2205:51;2172:84;2280:4;2270:14;;:19;2266:84;;2308:34;2300:42;2347:3;2299:51;2266:84;2374:5;2364:15;;:20;2360:85;;2403:34;2395:42;2442:3;2394:51;2360:85;2469:5;2459:15;;:20;2455:85;;2498:34;2490:42;2537:3;2489:51;2455:85;2564:5;2554:15;;:20;2550:85;;2593:34;2585:42;2632:3;2584:51;2550:85;2659:5;2649:15;;:20;2645:85;;2688:34;2680:42;2727:3;2679:51;2645:85;2754:6;2744:16;;:21;2740:86;;2784:34;2776:42;2823:3;2775:51;2740:86;2850:6;2840:16;;:21;2836:86;;2880:34;2872:42;2919:3;2871:51;2836:86;2946:6;2936:16;;:21;2932:86;;2976:34;2968:42;3015:3;2967:51;2932:86;3042:6;3032:16;;:21;3028:86;;3072:34;3064:42;3111:3;3063:51;3028:86;3138:7;3128:17;;:22;3124:86;;3169:33;3161:41;3207:3;3160:50;3124:86;3234:7;3224:17;;:22;3220:85;;3265:32;3257:40;3302:3;3256:49;3220:85;3329:7;3319:17;;:22;3315:83;;3360:30;3352:38;3395:3;3351:47;3315:83;3422:7;3412:17;;:22;3408:78;;3453:25;3445:33;3483:3;3444:42;3408:78;3508:1;3501:4;:8;;;3497:47;;;3539:5;-1:-1:-1;;3519:25:9;;;;;;3511:33;;3497:47;3903:7;3894:5;:17;:22;:30;;3923:1;3894:30;;;3919:1;3894:30;3877:48;;3887:2;3878:5;:11;;3877:48;3854:72;;1353:2580;;;;;:::o;1389:3239:7:-;1636:24;;;;-1:-1:-1;;;;;1795:41:7;;;;;;;;1861:20;;;;;;1892:1354;;1919:30;1952:61;1976:15;2000:7;1994:3;:13;1952:61;;2009:3;1952:15;:61::i;:::-;1919:94;;2038:10;:222;;2173:87;2203:19;2224:18;2244:9;2255:4;2173:29;:87::i;:::-;2038:222;;;2067:87;2097:18;2117:19;2138:9;2149:4;2067:29;:87::i;:::-;2027:233;;2304:8;2278:22;:34;2274:336;;2333:18;2314:37;;2274:336;;;2405:205;2466:19;2507:9;2538:22;2582:10;2405:39;:205::i;:::-;2386:224;;2274:336;1892:1354;;;;2653:10;:224;;2789:88;2819:19;2840:18;2860:9;2871:5;2789:29;:88::i;:::-;2653:224;;;2682:88;2712:18;2732:19;2753:9;2764:5;2682:29;:88::i;:::-;2641:236;;2924:9;2904:15;2903:16;;2895:38;2891:344;;2954:18;2935:37;;2891:344;;;3026:209;3088:19;3129:9;3169:15;3168:16;;3207:10;3026:40;:209::i;:::-;3007:228;;2891:344;-1:-1:-1;;;;;3267:38:7;;;;;;;3356:732;;;;3397:3;:14;;;;;3404:7;3397:14;:145;;3457:85;3487:16;3505:19;3526:9;3537:4;3457:29;:85::i;:::-;3397:145;;;3430:8;3397:145;3386:156;;3568:3;:15;;;;;3576:7;3575:8;3568:15;:148;;3630:86;3660:16;3678:19;3699:9;3710:5;3630:29;:86::i;:::-;3568:148;;;3602:9;3568:148;3556:160;;3356:732;;;3758:3;:14;;;;;3765:7;3758:14;:145;;3818:85;3848:19;3869:16;3887:9;3898:4;3818:29;:85::i;:::-;3758:145;;;3791:8;3758:145;3747:156;;3929:3;:15;;;;;3937:7;3936:8;3929:15;:148;;3991:86;4021:19;4042:16;4060:9;4071:5;3991:29;:86::i;:::-;3929:148;;;3963:9;3929:148;3917:160;;3356:732;4178:7;4177:8;:49;;;;;4210:15;4209:16;;4189:9;:37;4177:49;4173:117;;;4263:15;4262:16;;4242:37;;4173:117;4304:7;:49;;;;;4335:18;-1:-1:-1;;;;;4315:38:7;:16;-1:-1:-1;;;;;4315:38:7;;;4304:49;4300:322;;;4501:8;4482:15;4474:35;4462:47;;4300:322;;;4552:59;4578:8;4588:7;4552:59;;4603:7;4597:3;:13;4552:59;;:25;:59::i;:::-;4540:71;;4300:322;1389:3239;;;;;;;;;;;;;:::o;1571:120:4:-;1660:5;;;1655:16;;;;1627:8;1676:6;;;1655:28;1647:37;;;;;;1571:120;;;;:::o;1274:::-;1363:5;;;1358:16;;;;1330:8;1379:6;;;1358:28;1350:37;;;;;3652:541:11;3729:6;3740:22;3765:19;3787:29;3819;3851:27;3881:38;3922:21;3946:16;4143:4;-1:-1:-1;;;;;4143:10:11;;4154:9;4143:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3979:185:11;;-1:-1:-1;;;;;;;;;;;;;;;3652:541:11;;;;:::o;381:236:3:-;443:9;472:1;468;:5;;;464:147;;;521:1;-1:-1:-1;;;;;497:25:3;515:1;514:2;;502:1;:15;498:19;;;-1:-1:-1;;;;;497:25:3;;489:40;;;;;-1:-1:-1;;;489:40:3;;;;;;;;;;;;-1:-1:-1;;;489:40:3;;;;;;;;;;;;;;;464:147;;;592:1;-1:-1:-1;;;;;568:25:3;585:1;573;:14;569:18;;;-1:-1:-1;;;;;568:25:3;;;560:40;;;;;-1:-1:-1;;;560:40:3;;;;;;;;;;;;-1:-1:-1;;;560:40:3;;;;;;;;;;;;;;4352:4281:9;4425:10;815;-1:-1:-1;;;;;4554:30:9;;;;;;:63;;-1:-1:-1;995:49:9;-1:-1:-1;;;;;4588:29:9;;;4554:63;4546:77;;;;;-1:-1:-1;;;4546:77:9;;;;;;;;;;;;-1:-1:-1;;;4546:77:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;4674:2:9;4649:27;;;;-1:-1:-1;;;;;4779:41:9;;4776:1;4772:49;4869:9;;;4942:18;4936:25;;4933:1;4929:33;5010:9;;;5083:10;5077:17;;5074:1;5070:25;5143:9;;;5216:6;5210:13;;5207:1;5203:21;5272:9;;;5345:4;5339:11;;5336:1;5332:19;;;5399:9;;;5472:3;5466:10;;5463:1;5459:18;5525:9;;;5592:10;;;5589:1;5585:18;;;5651:9;;;;5711:10;;;4982;;5115;;;5244;;;5371;5497;;;5623;5741;5782:3;5775:10;;5771:79;;5807:3;5801;:9;5791:5;:20;;5787:24;;5771:79;;;5846:3;5840;:9;5830:5;:20;;5826:24;;5771:79;5949:9;;;5944:3;5940:19;;;5981:11;;;;6053:9;;;;6118;;6109:19;;;6150:11;;;6222:9;6287;;6278:19;;;6319:11;;;6391:9;6456;;6447:19;;;6488:11;;;6560:9;6625;;6616:19;;;6657:11;;;6729:9;6794;;6785:19;;;6826:11;;;6898:9;6963;;6954:19;;;6995:11;;;7067:9;7132;;7123:19;;;7164:11;;;7236:9;7301;;7292:19;;;7333:11;;;7405:9;7470;;7461:19;;;7502:11;;;7574:9;7639;;7630:19;;;7671:11;;;7743:9;7808;;7799:19;;;7840:11;;;7912:9;7977;;7968:19;;;8009:11;;;;8081:9;;;;8146;;8137:19;;;;;5949:9;-1:-1:-1;;5877:17:9;;5899:2;5876:25;6024:10;;;;;;;6014:21;6193:10;;;;;;;6183:21;;;;6362:10;;;;;;;6352:21;;;;6531:10;;;;;;;6521:21;;;;6700:10;;;;;;;6690:21;;;;6869:10;;;;;;;6859:21;;;;7038:10;;;;;;;7028:21;7207:10;;;;;;;7197:21;7376:10;;;;;;;7366:21;7545:10;;;;;;;7535:21;7714:10;;;;;;;7704:21;7883:10;;;;;;;7873:21;8052:10;;;;;;;8042:21;8221:10;;;;;;;8211:21;8283:24;8275:32;;-1:-1:-1;;8359:53:9;;5891:3;8358:62;;;;8469:39;8453:55;;8452:64;;8535:17;;;;;;;;;:91;;8595:12;-1:-1:-1;;;;;8565:42:9;:26;8584:6;8565:18;:26::i;:::-;-1:-1:-1;;;;;8565:42:9;;;:61;;8619:7;8565:61;;;8610:6;8565:61;8535:91;;;8555:7;8535:91;8528:98;4352:4281;-1:-1:-1;;;;;;;;;4352:4281:9:o;1487:160:11:-;1594:9;;1602:1;1594:9;;;;1636:3;1629:10;;;;1487:160::o;669:731:0:-;731:7;762:1;758;:5;750:14;;;;;;-1:-1:-1;;;779:1:0;:40;775:102;;841:3;835:9;;;;858:8;775:102;895:19;890:1;:24;886:84;;936:2;930:8;;;;952:7;886:84;988:11;983:1;:16;979:76;;1021:2;1015:8;;;;1037:7;979:76;1073:7;1068:1;:12;1064:72;;1102:2;1096:8;;;;1118:7;1064:72;1154:5;1149:1;:10;1145:68;;1181:1;1175:7;;;;1196:6;1145:68;1231:4;1226:1;:9;1222:67;;1257:1;1251:7;;;;1272:6;1222:67;1307:3;1302:1;:8;1298:66;;1332:1;1326:7;;;;1347:6;1298:66;1382:3;1377:1;:8;1373:20;;1392:1;1387:6;1373:20;669:731;;;:::o;1891:894::-;1954:7;1985:1;1981;:5;1973:14;;;;;;-1:-1:-1;2002:3:0;-1:-1:-1;;;;;2019:21:0;;:25;2015:104;;-1:-1:-1;;2060:8:0;2015:104;;;2105:3;2099:9;;;;;2015:104;2136:16;2132:20;;:24;2128:101;;-1:-1:-1;;2172:7:0;2128:101;;;2216:2;2210:8;;;;;2128:101;2246:16;2242:20;;:24;2238:101;;-1:-1:-1;;2282:7:0;2238:101;;;2326:2;2320:8;;;;;2238:101;2356:16;2352:20;;:24;2348:101;;-1:-1:-1;;2392:7:0;2348:101;;;2436:2;2430:8;;;;;2348:101;2466:15;2462:19;;:23;2458:98;;-1:-1:-1;;2501:6:0;2458:98;;;2544:1;2538:7;;;;;2458:98;2573:3;2569:7;;:11;2565:86;;-1:-1:-1;;2596:6:0;2565:86;;;2639:1;2633:7;;;;;2565:86;2668:3;2664:7;;:11;2660:86;;-1:-1:-1;;2691:6:0;2660:86;;;2734:1;2728:7;;;;;2660:86;2763:3;2759:7;;:11;2755:23;;-1:-1:-1;;2772:6:0;1891:894;;;:::o;741:3776:2:-;853:14;;;-1:-1:-1;;1360:1:2;1357;1350:20;1392:9;;;;-1:-1:-1;1443:13:2;;;1427:14;;;;1423:34;;-1:-1:-1;1539:10:2;1535:179;;1587:1;1573:11;:15;1565:24;;;;;;-1:-1:-1;1640:23:2;;;;-1:-1:-1;1690:13:2;;1535:179;1841:5;1827:11;:19;1819:28;;;;;;2124:17;2200:11;2197:1;2194;2187:25;2552:12;2567;;;:26;;2687:22;;;;;3490:1;3471;:15;;3470:21;;3717:17;;;3713:21;;3706:28;3775:17;;;3771:21;;3764:28;3834:17;;;3830:21;;3823:28;3893:17;;;3889:21;;3882:28;3952:17;;;3948:21;;3941:28;4012:17;;;4008:21;;;4001:28;3059:12;;;;3055:23;;;3080:1;3051:31;2329:20;;;2318:32;;;3110:12;;;;2372:21;;;;2815:16;;;;3101:21;;;;4476:11;;;;;-1:-1:-1;;741:3776:2;;;;;;:::o;8726:532:6:-;8891:15;8938:13;-1:-1:-1;;;;;8922:29:6;:13;-1:-1:-1;;;;;8922:29:6;;8918:98;;;8987:13;;9002;8918:98;9046:7;:205;;9176:75;9192:9;-1:-1:-1;;;;;9176:75:6;9219:13;9203;:29;-1:-1:-1;;;;;9176:75:6;-1:-1:-1;;;9176:15:6;:75::i;:::-;9046:205;;;9072:85;9098:9;-1:-1:-1;;;;;9072:85:6;9125:13;9109;:29;-1:-1:-1;;;;;9072:85:6;-1:-1:-1;;;9072:25:6;:85::i;:::-;9027:224;;8726:532;;;;;;;:::o;7492:779::-;7657:15;7704:13;-1:-1:-1;;;;;7688:29:6;:13;-1:-1:-1;;;;;7688:29:6;;7684:98;;;7753:13;;7768;7684:98;-1:-1:-1;;;;;;;307:2:1;7814:45:6;;;;-1:-1:-1;;;;;7890:29:6;;;7869:50;;;7938:17;;7930:26;;;;;;7986:7;:278;;8251:13;-1:-1:-1;;;;;8194:70:6;:54;8210:10;8222;8234:13;-1:-1:-1;;;;;8194:54:6;:15;:54::i;:::-;:70;;;;;;7986:278;;;8012:163;8058:64;8084:10;8096;8108:13;-1:-1:-1;;;;;8058:64:6;:25;:64::i;:::-;8144:13;-1:-1:-1;;;;;8012:163:6;:24;:163::i;:::-;7967:297;7492:779;-1:-1:-1;;;;;;;7492:779:6:o;5298:550::-;5466:16;5513:1;5502:8;-1:-1:-1;;;;;5502:12:6;;5494:21;;;;;;5545:1;5533:9;-1:-1:-1;;;;;5533:13:6;;5525:22;;;;;;5643:10;:198;;5765:76;5805:8;5815:9;5826:8;5836:4;5765:39;:76::i;5643:198::-;5672:74;5710:8;5720:9;5731:8;5741:4;5672:37;:74::i;6394:550::-;6564:16;6611:1;6600:8;-1:-1:-1;;;;;6600:12:6;;6592:21;;;;;;6643:1;6631:9;-1:-1:-1;;;;;6631:13:6;;6623:22;;;;;;6735:10;:202;;6861:76;6899:8;6909:9;6920;6931:5;6861:37;:76::i;6735:202::-;6764:78;6804:8;6814:9;6825;6836:5;6764:39;:78::i;4799:315:2:-;4921:14;4956:25;4963:1;4966;4969:11;4956:6;:25::i;:::-;4947:34;;5023:1;5008:11;4995:25;;;;;5005:1;5002;4995:25;:29;4991:117;;;-1:-1:-1;;5048:6:2;:26;5040:35;;;;;;5089:8;;4799:315;;;;;:::o;490:165:10:-;611:9;;;625;;622:16;;607:32;;588:61::o;3596:1153:6:-;3769:7;3946:3;3942:801;;;3965:16;-1:-1:-1;;;;;4022:27:6;;;:180;;4150:52;4166:6;-1:-1:-1;;;4192:9:6;-1:-1:-1;;;;;4150:52:6;:15;:52::i;:::-;4022:180;;;-1:-1:-1;;;;;4076:47:6;;307:2:1;4077:33:6;;;4076:47;;;;;;4022:180;3965:255;-1:-1:-1;4242:43:6;:31;-1:-1:-1;;;;;4242:17:6;;3965:255;4242:21;:31::i;:::-;:41;:43::i;:::-;4235:50;;;;;3942:801;4316:16;-1:-1:-1;;;;;4373:27:6;;;:213;;4524:62;4550:6;-1:-1:-1;;;4576:9:6;-1:-1:-1;;;;;4524:62:6;:25;:62::i;:::-;4373:213;;;4427:70;307:2:1;4452:33:6;;;-1:-1:-1;;;;;4427:70:6;;:24;:70::i;:::-;4316:288;;4638:8;4627;-1:-1:-1;;;;;4627:19:6;;4619:28;;;;;;-1:-1:-1;;;;;4712:19:6;;;;-1:-1:-1;4697:35:6;;1404:1366;1575:7;1710:11;1706:32;;-1:-1:-1;1730:8:6;1723:15;;1706:32;-1:-1:-1;;;;;;;307:2:1;1769:45:6;;;;1825:939;;;;-1:-1:-1;;;;;1881:50:6;;1892:17;;;;1913:6;1892:17;1913:6;1881:38;;;;;:50;1877:323;;;1973:20;;;2015:25;;;2011:174;;2124:60;2150:10;2162:8;-1:-1:-1;;;;;2124:60:6;2172:11;2124:25;:60::i;:::-;2109:76;;;;;;;2011:174;1877:323;;2229:73;2254:10;2266:35;2294:6;2280:8;-1:-1:-1;;;;;2267:21:6;:10;:21;;;;;;;2266:27;:35::i;:::-;2229:24;:73::i;:::-;2214:89;;;;;;1825:939;-1:-1:-1;;;;;2529:50:6;;2540:17;;;;2561:6;2540:17;2561:6;2529:38;;;;;:50;:74;;;;;2596:7;2583:10;:20;2529:74;2521:83;;;;;;2640:20;;;2681:72;:60;2640:10;-1:-1:-1;;;;;2681:60:6;;2640:20;2681:25;:60::i;433:111:4:-;525:5;;;520:16;;;;512:25;;;;;356:111:5;458:1;-1:-1:-1;;;;;438:21:5;;;;430:30;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:136:12:-;92:13;;114:30;92:13;114:30;:::i;155:166::-;234:13;;287:1;276:20;;;266:31;;256:2;;311:1;308;301:12;326:194;407:13;;-1:-1:-1;;;;;449:46:12;;439:57;;429:2;;510:1;507;500:12;525:142;606:13;;628:33;606:13;628:33;:::i;672:165::-;752:13;;805:6;794:18;;784:29;;774:2;;827:1;824;817:12;842:162;921:13;;974:4;963:16;;953:27;;943:2;;994:1;991;984:12;1009:263;;1132:2;1120:9;1111:7;1107:23;1103:32;1100:2;;;1153:6;1145;1138:22;1100:2;1190:9;1184:16;1209:33;1236:5;1209:33;:::i;1277:607::-;;;;;1436:3;1424:9;1415:7;1411:23;1407:33;1404:2;;;1458:6;1450;1443:22;1404:2;1502:9;1489:23;1521:33;1548:5;1521:33;:::i;:::-;1573:5;-1:-1:-1;1630:2:12;1615:18;;1602:32;1643;1602;1643;:::i;:::-;1694:7;-1:-1:-1;1748:2:12;1733:18;;1720:32;;-1:-1:-1;1804:2:12;1789:18;;1776:32;1817:35;1776:32;1817:35;:::i;:::-;1394:490;;;;-1:-1:-1;1394:490:12;;-1:-1:-1;;1394:490:12:o;1889:216::-;;2010:2;1998:9;1989:7;1985:23;1981:32;1978:2;;;2031:6;2023;2016:22;1978:2;2059:40;2089:9;2059:40;:::i;2110:973::-;;2254:3;2242:9;2233:7;2229:23;2225:33;2222:2;;;2276:6;2268;2261:22;2222:2;2314;2308:9;2356:3;2348:6;2344:16;2426:6;2414:10;2411:22;2390:18;2378:10;2375:34;2372:62;2369:2;;;2437:9;2369:2;2464;2457:22;2503:42;2535:9;2503:42;:::i;:::-;2495:6;2488:58;2579:49;2624:2;2613:9;2609:18;2579:49;:::i;:::-;2574:2;2566:6;2562:15;2555:74;2662:50;2708:2;2697:9;2693:18;2662:50;:::i;:::-;2657:2;2649:6;2645:15;2638:75;2746:50;2792:2;2781:9;2777:18;2746:50;:::i;:::-;2741:2;2733:6;2729:15;2722:75;2831:51;2877:3;2866:9;2862:19;2831:51;:::i;:::-;2825:3;2817:6;2813:16;2806:77;2917:50;2962:3;2951:9;2947:19;2917:50;:::i;:::-;2911:3;2903:6;2899:16;2892:76;3002:49;3046:3;3035:9;3031:19;3002:49;:::i;:::-;2996:3;2984:16;;2977:75;2988:6;2212:871;-1:-1:-1;;;2212:871:12:o;3088:220::-;;3211:2;3199:9;3190:7;3186:23;3182:32;3179:2;;;3232:6;3224;3217:22;3179:2;3260:42;3292:9;3260:42;:::i;3313:1077::-;;;;;;;;;3548:3;3536:9;3527:7;3523:23;3519:33;3516:2;;;3570:6;3562;3555:22;3516:2;3598:42;3630:9;3598:42;:::i;:::-;3588:52;;3683:2;3672:9;3668:18;3662:25;3731:5;3727:2;3716:21;3709:5;3706:32;3696:2;;3757:6;3749;3742:22;3696:2;3785:5;3775:15;;;3830:2;3819:9;3815:18;3809:25;3799:35;;3874:2;3863:9;3859:18;3853:25;3843:35;;3923:3;3912:9;3908:19;3902:26;3973:7;3970:1;3959:22;3950:7;3947:35;3937:2;;4001:6;3993;3986:22;3937:2;4081:3;4066:19;;4060:26;4029:7;;-1:-1:-1;4095:35:12;4060:26;4095:35;:::i;:::-;4201:3;4186:19;;4180:26;4149:7;;-1:-1:-1;4250:10:12;4237:24;;4225:37;;4215:2;;4281:6;4273;4266:22;4215:2;4309:7;-1:-1:-1;4335:49:12;4379:3;4364:19;;4335:49;:::i;:::-;4325:59;;3506:884;;;;;;;;;;;:::o;4395:298::-;;4517:2;4505:9;4496:7;4492:23;4488:32;4485:2;;;4538:6;4530;4523:22;4485:2;4575:9;4569:16;4625:8;4618:5;4614:20;4607:5;4604:31;4594:2;;4654:6;4646;4639:22;4698:194;;4821:2;4809:9;4800:7;4796:23;4792:32;4789:2;;;4842:6;4834;4827:22;4789:2;-1:-1:-1;4870:16:12;;4779:113;-1:-1:-1;4779:113:12:o;4897:203::-;-1:-1:-1;;;;;5061:32:12;;;;5043:51;;5031:2;5016:18;;4998:102::o;5105:188::-;5276:1;5265:21;;;;5247:40;;5235:2;5220:18;;5202:91::o;5298:188::-;5469:1;5458:21;;;;5440:40;;5428:2;5413:18;;5395:91::o;5491:244::-;5661:25;;;5717:2;5702:18;;5695:34;5649:2;5634:18;;5616:119::o;5740:133::-;-1:-1:-1;;;;;5817:31:12;;5807:42;;5797:2;;5863:1;5860;5853:12;5797:2;5787:86;:::o;5878:120::-;5966:5;5959:13;5952:21;5945:5;5942:32;5932:2;;5988:1;5985;5978:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    1461,
    10147
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FE2228A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH2 0x1AF JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND LT JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP1 ISZERO PUSH2 0x1E1 JUMPI POP PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GT JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP9 SGT SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1A686502 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x288 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE SWAP1 POP JUMPDEST DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2E0 JUMPI POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x529 JUMPI PUSH2 0x2ED PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x30E SWAP1 DUP14 SWAP1 DUP14 PUSH2 0x763 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH3 0xD89E7 NOT SWAP2 SIGNEXTEND SLT ISZERO PUSH2 0x33F JUMPI PUSH3 0xD89E7 NOT PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x35E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH3 0xD89E8 PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND SGT ISZERO PUSH2 0x35E JUMPI PUSH3 0xD89E8 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0x36B DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3DC SWAP1 DUP13 PUSH2 0x3A5 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x3BF JUMP JUMPDEST DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT JUMPDEST PUSH2 0x3CD JUMPI DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x3CF JUMP JUMPDEST DUP11 JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD DUP6 MLOAD DUP10 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE DUP3 ISZERO PUSH2 0x42E JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD DUP4 MLOAD SWAP2 ADD SWAP1 SUB DUP3 MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x424 SWAP2 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x459 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP3 MLOAD ADD DUP3 MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x453 SWAP3 SWAP1 SWAP2 ADD PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 PUSH2 0x495 DUP8 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xF40 JUMP JUMPDEST SWAP1 POP DUP12 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 SUB JUMPDEST PUSH2 0x4AF DUP4 PUSH1 0xA0 ADD MLOAD DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE POP JUMPDEST DUP11 PUSH2 0x4CE JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD SUB JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x523 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x523 JUMPI PUSH2 0x516 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE JUMPDEST POP PUSH2 0x2BA JUMP JUMPDEST DUP2 ISZERO ISZERO DUP11 ISZERO ISZERO EQ PUSH2 0x542 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD DUP11 SUB PUSH2 0x54F JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD DUP10 SUB DUP2 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP10 ISZERO PUSH2 0x65A JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST DUP7 PUSH1 0x0 NOT MUL LT PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST DUP8 PUSH1 0x0 NOT MUL LT PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x1AFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x7F1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x818 JUMPI POP DUP2 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x811 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 NOT ADD JUMPDEST DUP6 ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 PUSH2 0x834 DUP4 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x299CE14B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xFF DUP4 AND SHL DUP1 ADD PUSH1 0x0 NOT ADD SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x5339C296 SWAP1 PUSH2 0x878 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST AND DUP1 ISZERO ISZERO SWAP9 POP SWAP1 POP DUP8 PUSH2 0x8E2 JUMPI DUP6 DUP4 PUSH1 0xFF AND DUP7 SUB MUL PUSH2 0x8F5 JUMP JUMPDEST DUP6 PUSH2 0x8EC DUP3 PUSH2 0x13CA JUMP JUMPDEST DUP5 SUB PUSH1 0xFF AND DUP7 SUB MUL JUMPDEST SWAP9 POP POP POP POP POP PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x90F DUP4 PUSH1 0x1 ADD PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x299CE14B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 NOT PUSH1 0x1 PUSH1 0xFF DUP5 AND SHL ADD NOT SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x5339C296 SWAP1 PUSH2 0x952 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST AND DUP1 ISZERO ISZERO SWAP9 POP SWAP1 POP DUP8 PUSH2 0x9C2 JUMPI DUP6 DUP4 PUSH1 0xFF SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL PUSH2 0x9D8 JUMP JUMPDEST DUP6 DUP4 PUSH2 0x9CD DUP4 PUSH2 0x146B JUMP JUMPDEST SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL JUMPDEST SWAP9 POP POP POP POP POP JUMPDEST POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0xA01 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xA09 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0xA5B JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xA6D JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0xAA1 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0xAC0 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0xADF JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0xAFE JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0xB1D JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0xB3C JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0xB5B JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0xB7B JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0xB9B JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0xBBB JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0xBDB JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0xBFB JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0xC1B JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0xC3B JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0xC5B JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0xC7C JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0xC9C JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0xCBB JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0xCD8 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xCF3 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0xCEF JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0xD07 JUMPI PUSH1 0x1 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP1 DUP11 AND LT ISZERO DUP2 DUP8 SLT DUP1 ISZERO SWAP1 PUSH2 0xDA1 JUMPI PUSH1 0x0 PUSH2 0xD55 DUP10 DUP10 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xD6E JUMPI PUSH2 0xD69 DUP13 DUP13 DUP13 PUSH1 0x1 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xD7B DUP12 DUP14 DUP13 PUSH1 0x1 PUSH2 0x1680 JUMP JUMPDEST SWAP6 POP DUP6 DUP2 LT PUSH2 0xD8C JUMPI DUP11 SWAP7 POP PUSH2 0xD9B JUMP JUMPDEST PUSH2 0xD98 DUP13 DUP12 DUP4 DUP7 PUSH2 0x172B JUMP JUMPDEST SWAP7 POP JUMPDEST POP PUSH2 0xDEB JUMP JUMPDEST DUP2 PUSH2 0xDB8 JUMPI PUSH2 0xDB3 DUP12 DUP12 DUP12 PUSH1 0x0 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0xDC5 DUP11 DUP13 DUP12 PUSH1 0x0 PUSH2 0x1605 JUMP JUMPDEST SWAP4 POP DUP4 DUP9 PUSH1 0x0 SUB LT PUSH2 0xDD9 JUMPI DUP10 SWAP6 POP PUSH2 0xDEB JUMP JUMPDEST PUSH2 0xDE8 DUP12 DUP11 DUP11 PUSH1 0x0 SUB DUP6 PUSH2 0x1777 JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP1 DUP8 AND EQ DUP3 ISZERO PUSH2 0xE4E JUMPI DUP1 DUP1 ISZERO PUSH2 0xE0A JUMPI POP DUP2 JUMPDEST PUSH2 0xE20 JUMPI PUSH2 0xE1B DUP8 DUP14 DUP13 PUSH1 0x1 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0xE2F JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0xE45 JUMPI PUSH2 0xE40 DUP8 DUP14 DUP13 PUSH1 0x0 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP PUSH2 0xE98 JUMP JUMPDEST DUP1 DUP1 ISZERO PUSH2 0xE58 JUMPI POP DUP2 JUMPDEST PUSH2 0xE6E JUMPI PUSH2 0xE69 DUP13 DUP9 DUP13 PUSH1 0x1 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0xE70 JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0xE7D JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0xE93 JUMPI PUSH2 0xE8E DUP13 DUP9 DUP13 PUSH1 0x0 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0xEA8 JUMPI POP DUP9 PUSH1 0x0 SUB DUP6 GT JUMPDEST ISZERO PUSH2 0xEB4 JUMPI DUP9 PUSH1 0x0 SUB SWAP5 POP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xED3 JUMPI POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEE2 JUMPI DUP6 DUP10 SUB SWAP4 POP PUSH2 0xEFF JUMP JUMPDEST PUSH2 0xEFC DUP7 DUP10 PUSH3 0xFFFFFF AND DUP11 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH2 0x17C3 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF30DBA93 DUP12 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCB SWAP2 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST POP SWAP5 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x1048 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x0 SUB DUP5 SUB SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x1043 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF24 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 DUP5 ADD SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x10D5 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT JUMPDEST PUSH2 0x110A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH1 0x20 DUP4 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT PUSH1 0x7 SHL DUP2 DUP2 SHR PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH1 0x6 SHL SWAP1 DUP2 SHR PUSH4 0xFFFFFFFF DUP2 GT PUSH1 0x5 SHL SWAP1 DUP2 SHR PUSH2 0xFFFF DUP2 GT PUSH1 0x4 SHL SWAP1 DUP2 SHR PUSH1 0xFF DUP2 GT PUSH1 0x3 SWAP1 DUP2 SHL SWAP2 DUP3 SHR PUSH1 0xF DUP2 GT PUSH1 0x2 SHL SWAP1 DUP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP3 DUP4 SHR SWAP8 SWAP1 DUP9 GT SWAP7 OR SWAP1 SWAP5 OR SWAP1 SWAP3 OR OR SWAP1 SWAP2 OR OR OR PUSH1 0x80 DUP2 LT PUSH2 0x119E JUMPI PUSH1 0x7F DUP2 SUB DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x11A8 JUMP JUMPDEST DUP1 PUSH1 0x7F SUB DUP4 SWAP1 SHL SWAP2 POP JUMPDEST SWAP1 DUP1 MUL PUSH1 0x7F DUP2 DUP2 SHR PUSH1 0xFF DUP4 DUP2 SHR SWAP2 SWAP1 SWAP2 SHR DUP1 MUL DUP1 DUP4 SHR DUP2 DUP4 SHR SHR DUP1 MUL DUP1 DUP5 SHR DUP2 DUP5 SHR SHR DUP1 MUL DUP1 DUP6 SHR DUP2 DUP6 SHR SHR DUP1 MUL DUP1 DUP7 SHR DUP2 DUP7 SHR SHR DUP1 MUL DUP1 DUP8 SHR DUP2 DUP8 SHR SHR DUP1 MUL DUP1 DUP9 SHR DUP2 DUP9 SHR SHR DUP1 MUL DUP1 DUP10 SHR DUP2 DUP10 SHR SHR DUP1 MUL DUP1 DUP11 SHR DUP2 DUP11 SHR SHR DUP1 MUL DUP1 DUP12 SHR DUP2 DUP12 SHR SHR DUP1 MUL DUP1 DUP13 SHR DUP2 DUP13 SHR SHR DUP1 MUL DUP1 DUP14 SHR DUP2 DUP14 SHR SHR DUP1 MUL DUP1 DUP15 SHR SWAP13 DUP2 SWAP1 SHR SWAP13 SWAP1 SWAP13 SHR DUP1 MUL SWAP13 DUP14 SWAP1 SHR SWAP15 SWAP14 PUSH1 0x7F NOT DUP16 ADD PUSH1 0x40 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x8000000000000000 AND OR PUSH1 0xC1 SWAP12 SWAP1 SWAP12 SHR PUSH8 0x4000000000000000 AND SWAP11 SWAP1 SWAP11 OR PUSH1 0xC2 SWAP10 SWAP1 SWAP10 SHR PUSH8 0x2000000000000000 AND SWAP9 SWAP1 SWAP9 OR PUSH1 0xC3 SWAP8 SWAP1 SWAP8 SHR PUSH8 0x1000000000000000 AND SWAP7 SWAP1 SWAP7 OR PUSH1 0xC4 SWAP6 SWAP1 SWAP6 SHR PUSH8 0x800000000000000 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0xC5 SWAP4 SWAP1 SWAP4 SHR PUSH8 0x400000000000000 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0xC6 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x200000000000000 AND OR PUSH1 0xC7 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x100000000000000 AND OR PUSH1 0xC8 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x80000000000000 AND OR PUSH1 0xC9 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x40000000000000 AND OR PUSH1 0xCA SWAP2 SWAP1 SWAP2 SHR PUSH7 0x20000000000000 AND OR PUSH1 0xCB SWAP2 SWAP1 SWAP2 SHR PUSH7 0x10000000000000 AND OR PUSH1 0xCC SWAP2 SWAP1 SWAP2 SHR PUSH7 0x8000000000000 AND OR PUSH1 0xCD SWAP2 SWAP1 SWAP2 SHR PUSH7 0x4000000000000 AND OR PUSH10 0x3627A301D71055774C85 DUP2 MUL PUSH16 0x28F6481AB7F045A5AF012A19D003AA9 NOT DUP2 ADD PUSH1 0x80 SWAP1 DUP2 SAR SWAP1 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP4 ADD SWAP1 SAR PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND EQ PUSH2 0x13A9 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x138D DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x13A2 JUMPI DUP2 PUSH2 0x13A4 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x13AB JUMP JUMPDEST DUP2 JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND PUSH1 0x8 DUP2 SWAP1 SAR SWAP2 PUSH2 0x100 SWAP1 SWAP2 SMOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x13EB JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1403 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1417 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1429 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x143A JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x144A JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x145A JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x1466 JUMPI PUSH1 0x1 ADD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x1494 JUMPI PUSH1 0x7F NOT ADD PUSH2 0x149C JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x14B5 JUMPI PUSH1 0x3F NOT ADD PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x1F NOT ADD PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO PUSH2 0x14ED JUMPI PUSH1 0xF NOT ADD PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1507 JUMPI PUSH1 0x7 NOT ADD PUSH2 0x150F JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xF DUP3 AND ISZERO PUSH2 0x1521 JUMPI PUSH1 0x3 NOT ADD PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 AND ISZERO PUSH2 0x153B JUMPI PUSH1 0x1 NOT ADD PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x158B JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x15FE JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1625 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 PUSH2 0x1652 JUMPI PUSH2 0x164D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x1675 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x17C3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x16A0 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP7 SUB DUP2 AND SWAP1 DUP8 AND PUSH2 0x16CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x16FA JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16ED DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1555 JUMP JUMPDEST DUP2 PUSH2 0x16F4 JUMPI INVALID JUMPDEST DIV PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x1720 PUSH2 0x1711 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C3 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17FD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x1742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x1758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x176A JUMPI PUSH2 0x164D DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1675 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x17A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x17B6 JUMPI PUSH2 0x164D DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x1675 DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D0 DUP5 DUP5 DUP5 PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x17DC JUMPI INVALID JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 NOT DUP2 LT PUSH2 0x17F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 DIV SWAP2 MOD ISZERO ISZERO ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x187B JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x183E JUMPI PUSH2 0x1839 DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH1 0x60 DUP6 SWAP1 SHL DUP2 PUSH2 0x1854 JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP1 POP PUSH2 0x1873 PUSH2 0x186E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x18A9 JUMPI PUSH2 0x18A4 DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x17C3 JUMP JUMPDEST PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x18C0 PUSH1 0x60 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH2 0x17FD JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x18D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SUB SWAP1 POP PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18F7 JUMPI POP DUP4 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP6 SWAP1 SHL AND DUP3 ISZERO PUSH2 0x1985 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x1925 JUMPI INVALID JUMPDEST DIV EQ ISZERO PUSH2 0x1956 JUMPI DUP2 DUP2 ADD DUP3 DUP2 LT PUSH2 0x1954 JUMPI PUSH2 0x194A DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x17C3 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x1678 JUMP JUMPDEST POP JUMPDEST PUSH2 0x197C DUP3 PUSH2 0x1977 DUP8 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP2 PUSH2 0x1970 JUMPI INVALID JUMPDEST DIV SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x17FD JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x199C JUMPI INVALID JUMPDEST DIV EQ DUP1 ISZERO PUSH2 0x19A9 JUMPI POP DUP1 DUP3 GT JUMPDEST PUSH2 0x19B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB PUSH2 0x194A PUSH2 0x186E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 PUSH2 0x17C3 JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1466 DUP2 PUSH2 0x1D12 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1466 DUP2 PUSH2 0x1CFA JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15FE DUP2 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AC1 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1ACC DUP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1ADC DUP2 PUSH2 0x1D12 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1AF3 DUP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B0F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15FE DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B29 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B46 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x1B52 DUP4 PUSH2 0x1A62 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1B60 PUSH1 0x20 DUP5 ADD PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1B71 PUSH1 0x40 DUP5 ADD PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1B82 PUSH1 0x60 DUP5 ADD PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1B93 PUSH1 0x80 DUP5 ADD PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1BA4 PUSH1 0xA0 DUP5 ADD PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1BB5 PUSH1 0xC0 DUP5 ADD PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15FE DUP3 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1C00 DUP10 PUSH2 0x1A4B JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD DUP1 PUSH1 0xF SIGNEXTEND DUP2 EQ PUSH2 0x1C15 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD DUP1 PUSH1 0x6 SIGNEXTEND DUP2 EQ PUSH2 0x1C3A JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0xA0 DUP11 ADD MLOAD SWAP1 SWAP5 POP PUSH2 0x1C4B DUP2 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 SWAP4 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C64 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH2 0x1C72 PUSH1 0xE0 DUP11 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C92 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x15FE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB5 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x92C23CC160B59038DA EXTCODECOPY DUP14 0x2E 0xAB SLOAD 0xCA MSTORE8 DIV 0xAA PUSH6 0x9E0E1BE74486 SSTORE SWAP11 0xD8 0xC1 0xC4 MLOAD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9FE2228A"
    },
    "38": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "EQ",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "DUP1",
      "path": "11"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1461,
        10147
      ],
      "op": "REVERT",
      "path": "11"
    },
    "48": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "49": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43"
    },
    "52": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E"
    },
    "55": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "56": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "58": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AAC"
    },
    "61": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMP",
      "path": "11"
    },
    "62": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "63": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A"
    },
    "66": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMP",
      "path": "11"
    },
    "67": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "68": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "70": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "71": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x51"
    },
    "74": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "75": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "76": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "77": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CEC"
    },
    "80": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMP",
      "path": "11"
    },
    "81": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "82": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "84": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "85": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "DUP1",
      "path": "11"
    },
    "86": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "87": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SUB",
      "path": "11"
    },
    "88": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "89": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "RETURN",
      "path": "11"
    },
    "90": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "91": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5773,
        5787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "93": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "94": {
      "branch": 139,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5823,
        5843
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 0
    },
    "95": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x67"
    },
    "98": {
      "branch": 139,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "99": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "101": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "DUP1",
      "path": "11"
    },
    "102": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "REVERT",
      "path": "11"
    },
    "103": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5815,
        5844
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "104": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5848,
        5867
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "106": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5885,
        5890
      ],
      "op": "DUP7",
      "path": "11"
    },
    "107": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5848,
        5891
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "108": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5848,
        5891
      ],
      "op": "POP",
      "path": "11"
    },
    "109": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5894,
        5904
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "111": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5911
      ],
      "op": "DUP2",
      "path": "11"
    },
    "112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "118": {
      "op": "SHL"
    },
    "119": {
      "op": "SUB"
    },
    "120": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5915
      ],
      "op": "AND",
      "path": "11"
    },
    "121": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5915
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDDCA3F43"
    },
    "126": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "128": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "129": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "130": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "135": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "AND",
      "path": "11"
    },
    "136": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "138": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "SHL",
      "path": "11"
    },
    "139": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "140": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "141": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "143": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ADD",
      "path": "11"
    },
    "144": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "146": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "148": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "149": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "150": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP4",
      "path": "11"
    },
    "151": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "SUB",
      "path": "11"
    },
    "152": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "153": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP7",
      "path": "11"
    },
    "154": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "155": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "156": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "157": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "158": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "159": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA7"
    },
    "162": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "163": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "165": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "166": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "REVERT",
      "path": "11"
    },
    "167": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "168": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "169": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "GAS",
      "path": "11"
    },
    "170": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "171": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "172": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "173": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "174": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBB"
    },
    "177": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "178": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "179": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "181": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "182": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "183": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "184": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "186": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "REVERT",
      "path": "11"
    },
    "187": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "188": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "189": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "190": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "191": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "192": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "194": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "195": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "196": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "198": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "NOT",
      "path": "11"
    },
    "199": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "201": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP3",
      "path": "11"
    },
    "202": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ADD",
      "path": "11"
    },
    "203": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "AND",
      "path": "11"
    },
    "204": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP3",
      "path": "11"
    },
    "205": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ADD",
      "path": "11"
    },
    "206": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "207": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "209": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "210": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "211": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "212": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "ADD",
      "path": "11"
    },
    "213": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "214": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDF"
    },
    "217": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "218": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "219": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C81"
    },
    "222": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMP",
      "path": "11"
    },
    "223": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5907,
        5917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "224": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5894,
        5917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "225": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5894,
        5917
      ],
      "op": "POP",
      "path": "11"
    },
    "226": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5929,
        5967
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "228": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5974
      ],
      "op": "DUP3",
      "path": "11"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "235": {
      "op": "SHL"
    },
    "236": {
      "op": "SUB"
    },
    "237": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5980
      ],
      "op": "AND",
      "path": "11"
    },
    "238": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5980
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3850C7BD"
    },
    "243": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "245": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "246": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "11"
    },
    "247": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "252": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "AND",
      "path": "11"
    },
    "253": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "255": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "SHL",
      "path": "11"
    },
    "256": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "11"
    },
    "257": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "258": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "260": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ADD",
      "path": "11"
    },
    "261": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "263": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "265": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "266": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "267": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP4",
      "path": "11"
    },
    "268": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "SUB",
      "path": "11"
    },
    "269": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "11"
    },
    "270": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP7",
      "path": "11"
    },
    "271": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "272": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "273": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "274": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "275": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "276": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11C"
    },
    "279": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "280": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "282": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "283": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "REVERT",
      "path": "11"
    },
    "284": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "285": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "286": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "GAS",
      "path": "11"
    },
    "287": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "288": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "289": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "290": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "291": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x130"
    },
    "294": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "295": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "296": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "298": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "299": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "300": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "301": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "303": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "REVERT",
      "path": "11"
    },
    "304": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "305": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "306": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "307": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "308": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "309": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "311": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "312": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "313": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "315": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "NOT",
      "path": "11"
    },
    "316": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "318": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP3",
      "path": "11"
    },
    "319": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ADD",
      "path": "11"
    },
    "320": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "AND",
      "path": "11"
    },
    "321": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP3",
      "path": "11"
    },
    "322": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ADD",
      "path": "11"
    },
    "323": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP1",
      "path": "11"
    },
    "324": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "326": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "327": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "328": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "DUP2",
      "path": "11"
    },
    "329": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "ADD",
      "path": "11"
    },
    "330": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "331": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x154"
    },
    "334": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "335": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "336": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B18"
    },
    "339": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMP",
      "path": "11"
    },
    "340": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5970,
        5982
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "341": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5929,
        5982
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "342": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5929,
        5982
      ],
      "op": "POP",
      "path": "11"
    },
    "343": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6002,
        6012
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 1
    },
    "344": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6002,
        6021
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "346": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6002,
        6021
      ],
      "op": "ADD",
      "path": "11"
    },
    "347": {
      "branch": 140,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6002,
        6021
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "348": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x164"
    },
    "351": {
      "branch": 140,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "352": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "354": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "DUP1",
      "path": "11"
    },
    "355": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "REVERT",
      "path": "11"
    },
    "356": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5994,
        6022
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "357": {
      "branch": 141,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6063
      ],
      "op": "DUP8",
      "path": "11",
      "statement": 2
    },
    "358": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AF"
    },
    "361": {
      "branch": 141,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6281
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "362": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6211,
        6221
      ],
      "op": "DUP1",
      "path": "11"
    },
    "363": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6211,
        6234
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "365": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6211,
        6234
      ],
      "op": "ADD",
      "path": "11"
    },
    "366": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6211,
        6234
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "373": {
      "op": "SHL"
    },
    "374": {
      "op": "SUB"
    },
    "375": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6234
      ],
      "op": "AND",
      "path": "11"
    },
    "376": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6208
      ],
      "op": "DUP7",
      "path": "11"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "op": "SUB"
    },
    "385": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6234
      ],
      "op": "AND",
      "path": "11"
    },
    "386": {
      "branch": 142,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6234
      ],
      "op": "GT",
      "path": "11"
    },
    "387": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6281
      ],
      "op": "DUP1",
      "path": "11"
    },
    "388": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6281
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "389": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AA"
    },
    "392": {
      "branch": 142,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6281
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "offset": [
        995,
        1044
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0xFFFD8963EFD1FC6A506488495D951D5263988D26"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "421": {
      "op": "SHL"
    },
    "422": {
      "op": "SUB"
    },
    "423": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6238,
        6281
      ],
      "op": "DUP8",
      "path": "11"
    },
    "424": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6238,
        6281
      ],
      "op": "AND",
      "path": "11"
    },
    "425": {
      "branch": 143,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6238,
        6281
      ],
      "op": "LT",
      "path": "11"
    },
    "426": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6191,
        6281
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "427": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E1"
    },
    "430": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6281
      ],
      "op": "JUMP",
      "path": "11"
    },
    "431": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6053,
        6281
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "432": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6102,
        6112
      ],
      "op": "DUP1",
      "path": "11"
    },
    "433": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6102,
        6125
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "435": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6102,
        6125
      ],
      "op": "ADD",
      "path": "11"
    },
    "436": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6102,
        6125
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6125
      ],
      "op": "AND",
      "path": "11"
    },
    "446": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6099
      ],
      "op": "DUP7",
      "path": "11"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "op": "SUB"
    },
    "455": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6125
      ],
      "op": "AND",
      "path": "11"
    },
    "456": {
      "branch": 144,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6125
      ],
      "op": "LT",
      "path": "11"
    },
    "457": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6172
      ],
      "op": "DUP1",
      "path": "11"
    },
    "458": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6172
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "459": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6172
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E1"
    },
    "462": {
      "branch": 144,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6172
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "463": {
      "op": "POP"
    },
    "464": {
      "offset": [
        815,
        825
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x1000276A3"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6129,
        6172
      ],
      "op": "DUP8",
      "path": "11"
    },
    "479": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6129,
        6172
      ],
      "op": "AND",
      "path": "11"
    },
    "480": {
      "branch": 145,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6129,
        6172
      ],
      "op": "GT",
      "path": "11"
    },
    "481": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6082,
        6172
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "482": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "485": {
      "branch": 145,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "486": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "488": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "DUP1",
      "path": "11"
    },
    "489": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "REVERT",
      "path": "11"
    },
    "490": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6032,
        6291
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "491": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6302,
        6317
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "493": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6338,
        6339
      ],
      "op": "DUP1",
      "path": "11"
    },
    "494": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6320,
        6335
      ],
      "op": "DUP9",
      "path": "11"
    },
    "495": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6320,
        6339
      ],
      "op": "SGT",
      "path": "11"
    },
    "496": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6302,
        6339
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "497": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6302,
        6339
      ],
      "op": "POP",
      "path": "11"
    },
    "498": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6350,
        6372
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "500": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "502": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "503": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP1",
      "path": "11"
    },
    "504": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "506": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "507": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "509": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "510": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP1",
      "path": "11"
    },
    "511": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6441,
        6456
      ],
      "op": "DUP11",
      "path": "11"
    },
    "512": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "513": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "514": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "516": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "517": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6492,
        6493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "519": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "520": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "521": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "523": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "524": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6525,
        6535
      ],
      "op": "DUP5",
      "path": "11"
    },
    "525": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6525,
        6548
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "527": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6525,
        6548
      ],
      "op": "ADD",
      "path": "11"
    },
    "528": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6525,
        6548
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "AND",
      "path": "11"
    },
    "538": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "539": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "540": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "542": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "543": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6572,
        6582
      ],
      "op": "DUP5",
      "path": "11"
    },
    "544": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6572,
        6587
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "546": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6572,
        6587
      ],
      "op": "ADD",
      "path": "11"
    },
    "547": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6572,
        6587
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "548": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "550": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "551": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "552": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "553": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "555": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "556": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6618,
        6619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "564": {
      "op": "SHL"
    },
    "565": {
      "op": "SUB"
    },
    "566": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "AND",
      "path": "11"
    },
    "567": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "568": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "569": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "571": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "ADD",
      "path": "11"
    },
    "572": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6652
      ],
      "op": "DUP7",
      "path": "11"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6662
      ],
      "op": "AND",
      "path": "11"
    },
    "582": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6662
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1A686502"
    },
    "587": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "589": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "590": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP2",
      "path": "11"
    },
    "591": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "596": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "AND",
      "path": "11"
    },
    "597": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "599": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "SHL",
      "path": "11"
    },
    "600": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP2",
      "path": "11"
    },
    "601": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "602": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "604": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ADD",
      "path": "11"
    },
    "605": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "607": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "609": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "610": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "611": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP4",
      "path": "11"
    },
    "612": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "SUB",
      "path": "11"
    },
    "613": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP2",
      "path": "11"
    },
    "614": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP7",
      "path": "11"
    },
    "615": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "616": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "617": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "618": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "619": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "620": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x274"
    },
    "623": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "624": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "626": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "627": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "REVERT",
      "path": "11"
    },
    "628": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "629": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "630": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "GAS",
      "path": "11"
    },
    "631": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "632": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "633": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "634": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "635": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x288"
    },
    "638": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "639": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "640": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "642": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "643": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "644": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "645": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "647": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "REVERT",
      "path": "11"
    },
    "648": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "649": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "650": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "651": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "652": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "653": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "655": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "656": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "657": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "659": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "NOT",
      "path": "11"
    },
    "660": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "662": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP3",
      "path": "11"
    },
    "663": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ADD",
      "path": "11"
    },
    "664": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "AND",
      "path": "11"
    },
    "665": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP3",
      "path": "11"
    },
    "666": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ADD",
      "path": "11"
    },
    "667": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP1",
      "path": "11"
    },
    "668": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "670": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "671": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "POP",
      "path": "11"
    },
    "672": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "DUP2",
      "path": "11"
    },
    "673": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "ADD",
      "path": "11"
    },
    "674": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "675": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AC"
    },
    "678": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "679": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "680": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC1"
    },
    "683": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMP",
      "path": "11"
    },
    "684": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6648,
        6664
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "691": {
      "op": "SHL"
    },
    "692": {
      "op": "SUB"
    },
    "693": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "AND",
      "path": "11"
    },
    "694": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "695": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6387,
        6679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "696": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6350,
        6679
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "699": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6843
      ],
      "op": "DUP1",
      "path": "11"
    },
    "700": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6843
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "701": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6848
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "702": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6848
      ],
      "op": "DUP1",
      "path": "11"
    },
    "703": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6848
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "704": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "705": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6891
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E0"
    },
    "708": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6891
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "709": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6891
      ],
      "op": "POP",
      "path": "11"
    },
    "710": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6874,
        6891
      ],
      "op": "DUP8",
      "path": "11"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6891
      ],
      "op": "AND",
      "path": "11"
    },
    "720": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6857
      ],
      "op": "DUP2",
      "path": "11"
    },
    "721": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6870
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "723": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6870
      ],
      "op": "ADD",
      "path": "11"
    },
    "724": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6870
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6891
      ],
      "op": "AND",
      "path": "11"
    },
    "734": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6891
      ],
      "op": "EQ",
      "path": "11"
    },
    "735": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6852,
        6891
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "736": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6813,
        6891
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "737": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "738": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x529"
    },
    "741": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "742": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6907,
        6935
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2ED"
    },
    "745": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6907,
        6935
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19F2"
    },
    "748": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        6907,
        6935
      ],
      "op": "JUMP",
      "path": "11"
    },
    "749": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6907,
        6935
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "750": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6975,
        6993
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x40"
    },
    "752": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6975,
        6993
      ],
      "op": "DUP3",
      "path": "11"
    },
    "753": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6975,
        6993
      ],
      "op": "ADD",
      "path": "11"
    },
    "754": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6975,
        6993
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6950,
        6993
      ],
      "op": "AND",
      "path": "11"
    },
    "764": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6950,
        6993
      ],
      "op": "DUP2",
      "path": "11"
    },
    "765": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6950,
        6993
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "766": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7147,
        7157
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x60"
    },
    "768": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7147,
        7157
      ],
      "op": "DUP3",
      "path": "11"
    },
    "769": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7147,
        7157
      ],
      "op": "ADD",
      "path": "11"
    },
    "770": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7147,
        7157
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "771": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7084,
        7194
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30E"
    },
    "774": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7084,
        7194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "775": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7129,
        7134
      ],
      "op": "DUP14",
      "path": "11"
    },
    "776": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7129,
        7134
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "777": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7170,
        7180
      ],
      "op": "DUP14",
      "path": "11"
    },
    "778": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7084,
        7116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x763"
    },
    "781": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        7084,
        7194
      ],
      "op": "JUMP",
      "path": "11"
    },
    "782": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7084,
        7194
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "783": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "784": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "785": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7064,
        7080
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "787": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7064,
        7080
      ],
      "op": "DUP4",
      "path": "11"
    },
    "788": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7064,
        7080
      ],
      "op": "ADD",
      "path": "11"
    },
    "789": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "790": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "792": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "793": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "DUP2",
      "path": "11"
    },
    "794": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "795": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "DUP2",
      "path": "11"
    },
    "796": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "797": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7049,
        7062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "799": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7049,
        7062
      ],
      "op": "DUP4",
      "path": "11"
    },
    "800": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7049,
        7062
      ],
      "op": "ADD",
      "path": "11"
    },
    "801": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "DUP2",
      "path": "11"
    },
    "802": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "803": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7048,
        7194
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "804": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "808": {
      "op": "NOT"
    },
    "809": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7326,
        7359
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "810": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7326,
        7359
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "811": {
      "branch": 146,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7326,
        7359
      ],
      "op": "SLT",
      "path": "11"
    },
    "812": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "813": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x33F"
    },
    "816": {
      "branch": 146,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "817": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "821": {
      "op": "NOT"
    },
    "822": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7379,
        7392
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x20"
    },
    "824": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7379,
        7392
      ],
      "op": "DUP3",
      "path": "11"
    },
    "825": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7379,
        7392
      ],
      "op": "ADD",
      "path": "11"
    },
    "826": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7379,
        7412
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "827": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35E"
    },
    "830": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "JUMP",
      "path": "11"
    },
    "831": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7322,
        7538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "832": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "834": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "835": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7450
      ],
      "op": "ADD",
      "path": "11"
    },
    "836": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7450
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "837": {
      "offset": [
        635,
        644
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0xD89E8"
    },
    "841": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "843": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "844": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "845": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "846": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "847": {
      "branch": 147,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7437,
        7470
      ],
      "op": "SGT",
      "path": "11"
    },
    "848": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7433,
        7538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "849": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7433,
        7538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35E"
    },
    "852": {
      "branch": 147,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7433,
        7538
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "853": {
      "offset": [
        635,
        644
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0xD89E8"
    },
    "857": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7490,
        7503
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0x20"
    },
    "859": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7490,
        7503
      ],
      "op": "DUP3",
      "path": "11"
    },
    "860": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7490,
        7503
      ],
      "op": "ADD",
      "path": "11"
    },
    "861": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7490,
        7523
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "862": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7433,
        7538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "863": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7623,
        7665
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 7,
      "value": "0x36B"
    },
    "866": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7651,
        7655
      ],
      "op": "DUP2",
      "path": "11"
    },
    "867": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7651,
        7664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "869": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7651,
        7664
      ],
      "op": "ADD",
      "path": "11"
    },
    "870": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7651,
        7664
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "871": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7623,
        7650
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9EA"
    },
    "874": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        7623,
        7665
      ],
      "op": "JUMP",
      "path": "11"
    },
    "875": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7623,
        7665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7599,
        7665
      ],
      "op": "AND",
      "path": "11"
    },
    "885": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7599,
        7620
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "887": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7599,
        7620
      ],
      "op": "DUP3",
      "path": "11"
    },
    "888": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7599,
        7620
      ],
      "op": "ADD",
      "path": "11"
    },
    "889": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7599,
        7665
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "890": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7911,
        7929
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x40"
    },
    "892": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7911,
        7929
      ],
      "op": "DUP3",
      "path": "11"
    },
    "893": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7911,
        7929
      ],
      "op": "ADD",
      "path": "11"
    },
    "894": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7911,
        7929
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "895": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7869,
        8247
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3DC"
    },
    "898": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7869,
        8247
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "899": {
      "branch": 148,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        7958
      ],
      "op": "DUP13",
      "path": "11"
    },
    "900": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A5"
    },
    "903": {
      "branch": 148,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "904": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8029,
        8046
      ],
      "op": "DUP11",
      "path": "11"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8046
      ],
      "op": "AND",
      "path": "11"
    },
    "914": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8009
      ],
      "op": "DUP4",
      "path": "11"
    },
    "915": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "917": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8026
      ],
      "op": "ADD",
      "path": "11"
    },
    "918": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8026
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "op": "SUB"
    },
    "927": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8046
      ],
      "op": "AND",
      "path": "11"
    },
    "928": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8005,
        8046
      ],
      "op": "GT",
      "path": "11"
    },
    "929": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3BF"
    },
    "932": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "JUMP",
      "path": "11"
    },
    "933": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "934": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7985,
        8002
      ],
      "op": "DUP11",
      "path": "11"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "SUB"
    },
    "943": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        8002
      ],
      "op": "AND",
      "path": "11"
    },
    "944": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        7965
      ],
      "op": "DUP4",
      "path": "11"
    },
    "945": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        7982
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "947": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        7982
      ],
      "op": "ADD",
      "path": "11"
    },
    "948": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        7982
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        8002
      ],
      "op": "AND",
      "path": "11"
    },
    "958": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7961,
        8002
      ],
      "op": "LT",
      "path": "11"
    },
    "959": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7948,
        8046
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "960": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CD"
    },
    "963": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "964": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8110,
        8114
      ],
      "op": "DUP3",
      "path": "11"
    },
    "965": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8110,
        8131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "967": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8110,
        8131
      ],
      "op": "ADD",
      "path": "11"
    },
    "968": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8110,
        8131
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "969": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CF"
    },
    "972": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "JUMP",
      "path": "11"
    },
    "973": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "974": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8070,
        8087
      ],
      "op": "DUP11",
      "path": "11"
    },
    "975": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7947,
        8131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "976": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "978": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8149,
        8164
      ],
      "op": "DUP6",
      "path": "11"
    },
    "979": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8149,
        8164
      ],
      "op": "ADD",
      "path": "11"
    },
    "980": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8149,
        8164
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "981": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8182,
        8212
      ],
      "op": "DUP6",
      "path": "11"
    },
    "982": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8182,
        8212
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "983": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8230,
        8233
      ],
      "op": "DUP10",
      "path": "11"
    },
    "984": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7869,
        7893
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD1C"
    },
    "987": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        7869,
        8247
      ],
      "op": "JUMP",
      "path": "11"
    },
    "988": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7869,
        8247
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "989": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7851,
        7865
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "991": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7851,
        7865
      ],
      "op": "DUP6",
      "path": "11"
    },
    "992": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7851,
        7865
      ],
      "op": "ADD",
      "path": "11"
    },
    "993": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7799,
        8247
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "994": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7835,
        7849
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "996": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7835,
        7849
      ],
      "op": "DUP5",
      "path": "11"
    },
    "997": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7835,
        7849
      ],
      "op": "ADD",
      "path": "11"
    },
    "998": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7799,
        8247
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "999": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7820,
        7833
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "1001": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7820,
        7833
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1002": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7820,
        7833
      ],
      "op": "ADD",
      "path": "11"
    },
    "1003": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7799,
        8247
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "op": "SUB"
    },
    "1012": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7799,
        8247
      ],
      "op": "AND",
      "path": "11"
    },
    "1013": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7800,
        7818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1015": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7800,
        7818
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1016": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7800,
        7818
      ],
      "op": "ADD",
      "path": "11"
    },
    "1017": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        7799,
        8247
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1018": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1019": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1020": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x42E"
    },
    "1023": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1024": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8353,
        8367
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 9,
      "value": "0xC0"
    },
    "1026": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8353,
        8367
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1027": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8353,
        8367
      ],
      "op": "ADD",
      "path": "11"
    },
    "1028": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8353,
        8367
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1029": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8350
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "1031": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8350
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1032": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8350
      ],
      "op": "ADD",
      "path": "11"
    },
    "1033": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8350
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1034": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1035": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1036": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8367
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1037": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8337,
        8367
      ],
      "op": "ADD",
      "path": "11"
    },
    "1038": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1039": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "SUB",
      "path": "11"
    },
    "1040": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1041": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8296,
        8368
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1042": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8445,
        8459
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 10,
      "value": "0xA0"
    },
    "1044": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8445,
        8459
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1045": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8445,
        8459
      ],
      "op": "ADD",
      "path": "11"
    },
    "1046": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8445,
        8459
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1047": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8433
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1049": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8433
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1050": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8433
      ],
      "op": "ADD",
      "path": "11"
    },
    "1051": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8433
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1052": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8461
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x424"
    },
    "1055": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8461
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1056": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8437
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0E"
    },
    "1059": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        8411,
        8461
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1060": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8411,
        8461
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1061": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8386,
        8408
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1063": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8386,
        8408
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1064": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8386,
        8408
      ],
      "op": "ADD",
      "path": "11"
    },
    "1065": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8386,
        8461
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1066": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x459"
    },
    "1069": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1070": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1071": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8541,
        8555
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 11,
      "value": "0xA0"
    },
    "1073": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8541,
        8555
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1074": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8541,
        8555
      ],
      "op": "ADD",
      "path": "11"
    },
    "1075": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8541,
        8555
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1076": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8500,
        8556
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1077": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8500,
        8556
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1078": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8500,
        8556
      ],
      "op": "ADD",
      "path": "11"
    },
    "1079": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8500,
        8556
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1080": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8500,
        8556
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1081": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8649,
        8663
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0xC0"
    },
    "1083": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8649,
        8663
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1084": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8649,
        8663
      ],
      "op": "ADD",
      "path": "11"
    },
    "1085": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8649,
        8663
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1086": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8633,
        8646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "1088": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8633,
        8646
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1089": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8633,
        8646
      ],
      "op": "ADD",
      "path": "11"
    },
    "1090": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8633,
        8646
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1091": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1093": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1094": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "ADD",
      "path": "11"
    },
    "1095": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1096": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8665
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x453"
    },
    "1099": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8665
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1100": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1101": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8621
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1102": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8633,
        8663
      ],
      "op": "ADD",
      "path": "11"
    },
    "1103": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8625
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF2A"
    },
    "1106": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        8599,
        8665
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1107": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8599,
        8665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1108": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8574,
        8596
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1110": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8574,
        8596
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1111": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8574,
        8596
      ],
      "op": "ADD",
      "path": "11"
    },
    "1112": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8574,
        8665
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1113": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8262,
        8680
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1114": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8775,
        8779
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1115": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8775,
        8796
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1117": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8775,
        8796
      ],
      "op": "ADD",
      "path": "11"
    },
    "1118": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8775,
        8796
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "op": "SUB"
    },
    "1127": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8796
      ],
      "op": "AND",
      "path": "11"
    },
    "1128": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8758
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1129": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8771
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1131": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8771
      ],
      "op": "ADD",
      "path": "11"
    },
    "1132": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8771
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "SUB"
    },
    "1141": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8796
      ],
      "op": "AND",
      "path": "11"
    },
    "1142": {
      "branch": 149,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8753,
        8796
      ],
      "op": "EQ",
      "path": "11"
    },
    "1143": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1144": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E8"
    },
    "1147": {
      "branch": 149,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1148": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8891,
        8895
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1149": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8891,
        8907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1151": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8891,
        8907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1152": {
      "branch": 150,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8891,
        8907
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1153": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8887,
        9319
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1154": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8887,
        9319
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4BF"
    },
    "1157": {
      "branch": 150,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8887,
        9319
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1158": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8918,
        8937
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1160": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8940,
        8968
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x495"
    },
    "1163": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8948,
        8952
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1164": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8954,
        8958
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1165": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8954,
        8967
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1167": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8954,
        8967
      ],
      "op": "ADD",
      "path": "11"
    },
    "1168": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8954,
        8967
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1169": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8940,
        8947
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF40"
    },
    "1172": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        8940,
        8968
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1173": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8940,
        8968
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1174": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8918,
        8968
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1175": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8918,
        8968
      ],
      "op": "POP",
      "path": "11"
    },
    "1176": {
      "branch": 151,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9166,
        9176
      ],
      "op": "DUP12",
      "path": "11"
    },
    "1177": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9162,
        9206
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1178": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9162,
        9206
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A1"
    },
    "1181": {
      "branch": 151,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9162,
        9206
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1182": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9193,
        9206
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 13,
      "value": "0x0"
    },
    "1184": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9193,
        9206
      ],
      "op": "SUB",
      "path": "11"
    },
    "1185": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9162,
        9206
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1186": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 14,
      "value": "0x4AF"
    },
    "1189": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9270,
        9275
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1190": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9270,
        9285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "1192": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9270,
        9285
      ],
      "op": "ADD",
      "path": "11"
    },
    "1193": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9270,
        9285
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1194": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9287,
        9299
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1195": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9247,
        9269
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFE3"
    },
    "1198": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        9247,
        9300
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1199": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9247,
        9300
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9229,
        9300
      ],
      "op": "AND",
      "path": "11"
    },
    "1209": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9229,
        9244
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "1211": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9229,
        9244
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1212": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9229,
        9244
      ],
      "op": "ADD",
      "path": "11"
    },
    "1213": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9229,
        9300
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8887,
        9319
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1216": {
      "branch": 152,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9360
      ],
      "op": "DUP11",
      "path": "11",
      "statement": 15
    },
    "1217": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4CE"
    },
    "1220": {
      "branch": 152,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1221": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9383,
        9387
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1222": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9383,
        9396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1224": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9383,
        9396
      ],
      "op": "ADD",
      "path": "11"
    },
    "1225": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9383,
        9396
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1226": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4D7"
    },
    "1229": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1230": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1231": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9379,
        9380
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1233": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9363,
        9367
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1234": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9363,
        9376
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1236": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9363,
        9376
      ],
      "op": "ADD",
      "path": "11"
    },
    "1237": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9363,
        9376
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1238": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9363,
        9380
      ],
      "op": "SUB",
      "path": "11"
    },
    "1239": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9350,
        9396
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1240": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1242": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1243": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1244": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "1245": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1246": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "1247": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9347
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1249": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9347
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1250": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9347
      ],
      "op": "ADD",
      "path": "11"
    },
    "1251": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9337,
        9396
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1252": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x523"
    },
    "1255": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1256": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        8749,
        9680
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1257": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9443,
        9447
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1258": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9443,
        9465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1260": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9443,
        9465
      ],
      "op": "ADD",
      "path": "11"
    },
    "1261": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9443,
        9465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9465
      ],
      "op": "AND",
      "path": "11"
    },
    "1271": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9426
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1272": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1274": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9439
      ],
      "op": "ADD",
      "path": "11"
    },
    "1275": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9439
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9465
      ],
      "op": "AND",
      "path": "11"
    },
    "1285": {
      "branch": 153,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9421,
        9465
      ],
      "op": "EQ",
      "path": "11"
    },
    "1286": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9417,
        9680
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x523"
    },
    "1289": {
      "branch": 153,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9417,
        9680
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1290": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9618,
        9665
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 16,
      "value": "0x516"
    },
    "1293": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9646,
        9651
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1294": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9646,
        9664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1296": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9646,
        9664
      ],
      "op": "ADD",
      "path": "11"
    },
    "1297": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9646,
        9664
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1298": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9618,
        9645
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1099"
    },
    "1301": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        9618,
        9665
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1302": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9618,
        9665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1303": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1305": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1306": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1307": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "1308": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1309": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "1310": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9615
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1312": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9615
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1313": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9615
      ],
      "op": "ADD",
      "path": "11"
    },
    "1314": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9605,
        9665
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1315": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9417,
        9680
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1316": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "POP",
      "path": "11"
    },
    "1317": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "1320": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1321": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        6806,
        9690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1322": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9737,
        9747
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 17
    },
    "1323": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9747
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1324": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9747
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1325": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9733
      ],
      "op": "DUP11",
      "path": "11"
    },
    "1326": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9747
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1327": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9747
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1328": {
      "branch": 154,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9747
      ],
      "op": "EQ",
      "path": "11"
    },
    "1329": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x542"
    },
    "1332": {
      "branch": 154,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1333": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9852,
        9874
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1335": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9852,
        9874
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1336": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9852,
        9874
      ],
      "op": "ADD",
      "path": "11"
    },
    "1337": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9852,
        9874
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1338": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9894,
        9924
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1339": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9894,
        9924
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1340": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9876,
        9924
      ],
      "op": "DUP11",
      "path": "11"
    },
    "1341": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9876,
        9924
      ],
      "op": "SUB",
      "path": "11"
    },
    "1342": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54F"
    },
    "1345": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1346": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1347": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9781,
        9786
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1348": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9781,
        9811
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1350": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9781,
        9811
      ],
      "op": "ADD",
      "path": "11"
    },
    "1351": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9781,
        9811
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1352": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9763,
        9778
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1353": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9763,
        9811
      ],
      "op": "SUB",
      "path": "11"
    },
    "1354": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9813,
        9818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1355": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9813,
        9835
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1357": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9813,
        9835
      ],
      "op": "ADD",
      "path": "11"
    },
    "1358": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9813,
        9835
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1359": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9723,
        9925
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1360": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9702,
        9925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1361": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9702,
        9925
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9702,
        9925
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1366": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1367": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x65A"
    },
    "1370": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1371": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        9996
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 18
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10003
      ],
      "op": "AND",
      "path": "11"
    },
    "1381": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10003
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD21220A7"
    },
    "1386": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1388": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1389": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1390": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1395": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "AND",
      "path": "11"
    },
    "1396": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1398": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "SHL",
      "path": "11"
    },
    "1399": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1400": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1401": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1403": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ADD",
      "path": "11"
    },
    "1404": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1406": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1408": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1409": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1410": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1411": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "SUB",
      "path": "11"
    },
    "1412": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1413": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1414": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1415": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1416": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1417": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1418": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1419": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x593"
    },
    "1422": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1423": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1425": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1426": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1427": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1428": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1429": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "GAS",
      "path": "11"
    },
    "1430": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1431": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1432": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1433": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1434": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A7"
    },
    "1437": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1438": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1439": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1441": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1442": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1443": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1444": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1446": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1447": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1448": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1449": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1450": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1451": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1452": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1454": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1455": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1456": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1458": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "NOT",
      "path": "11"
    },
    "1459": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1461": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1462": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ADD",
      "path": "11"
    },
    "1463": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "AND",
      "path": "11"
    },
    "1464": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1465": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ADD",
      "path": "11"
    },
    "1466": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1467": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1469": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1470": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "POP",
      "path": "11"
    },
    "1471": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1472": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "ADD",
      "path": "11"
    },
    "1473": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1474": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5CB"
    },
    "1477": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1478": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1479": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A90"
    },
    "1482": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1483": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9992,
        10005
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10016
      ],
      "op": "AND",
      "path": "11"
    },
    "1493": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10016
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "1498": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10025,
        10029
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1499": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1501": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1502": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1503": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1508": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "AND",
      "path": "11"
    },
    "1509": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1511": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SHL",
      "path": "11"
    },
    "1512": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1513": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1514": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1516": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ADD",
      "path": "11"
    },
    "1517": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5F6"
    },
    "1520": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1521": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1522": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CBC"
    },
    "1525": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1526": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1527": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1529": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1531": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1532": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1533": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1534": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SUB",
      "path": "11"
    },
    "1535": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1536": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1537": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1538": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1539": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1540": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1541": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1542": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x60E"
    },
    "1545": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1546": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1548": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1549": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1550": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1551": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1552": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "GAS",
      "path": "11"
    },
    "1553": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1554": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1555": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1556": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1557": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x622"
    },
    "1560": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1561": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1562": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1564": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1565": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1566": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1567": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1569": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1570": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1571": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1572": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1573": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1574": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1575": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1577": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1578": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1579": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1581": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "NOT",
      "path": "11"
    },
    "1582": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1584": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1585": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ADD",
      "path": "11"
    },
    "1586": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "AND",
      "path": "11"
    },
    "1587": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1588": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ADD",
      "path": "11"
    },
    "1589": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1590": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1592": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1593": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "POP",
      "path": "11"
    },
    "1594": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1595": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "ADD",
      "path": "11"
    },
    "1596": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1597": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x646"
    },
    "1600": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1601": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1602": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA4"
    },
    "1605": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1606": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9985,
        10031
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1607": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9969,
        9976
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1610": {
      "op": "NOT"
    },
    "1611": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9969,
        9981
      ],
      "op": "MUL",
      "path": "11"
    },
    "1612": {
      "branch": 155,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9961,
        10031
      ],
      "op": "LT",
      "path": "11"
    },
    "1613": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x655"
    },
    "1616": {
      "branch": 155,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1617": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1619": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1620": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1621": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9953,
        10032
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1622": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x755"
    },
    "1625": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1626": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        9930,
        10132
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1627": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10092
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 19
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10099
      ],
      "op": "AND",
      "path": "11"
    },
    "1637": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10099
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDFE1681"
    },
    "1642": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1644": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1645": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1646": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1651": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "AND",
      "path": "11"
    },
    "1652": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1654": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "SHL",
      "path": "11"
    },
    "1655": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1656": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1657": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1659": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ADD",
      "path": "11"
    },
    "1660": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1662": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1664": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1665": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1666": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1667": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "SUB",
      "path": "11"
    },
    "1668": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1669": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1670": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1671": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1672": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1673": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1674": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1675": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x693"
    },
    "1678": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1679": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1681": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1682": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1683": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1684": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1685": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "GAS",
      "path": "11"
    },
    "1686": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1687": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1688": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1689": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1690": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6A7"
    },
    "1693": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1694": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1695": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1697": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1698": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1699": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1700": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1702": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1703": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1704": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1705": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1706": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1707": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1708": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1710": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1711": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1712": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1714": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "NOT",
      "path": "11"
    },
    "1715": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1717": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1718": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ADD",
      "path": "11"
    },
    "1719": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "AND",
      "path": "11"
    },
    "1720": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1721": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ADD",
      "path": "11"
    },
    "1722": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1723": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1725": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1726": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "POP",
      "path": "11"
    },
    "1727": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1728": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "ADD",
      "path": "11"
    },
    "1729": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1730": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6CB"
    },
    "1733": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1734": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1735": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A90"
    },
    "1738": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1739": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10088,
        10101
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10112
      ],
      "op": "AND",
      "path": "11"
    },
    "1749": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10112
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "1754": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10121,
        10125
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1755": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1757": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1758": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1759": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1764": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "AND",
      "path": "11"
    },
    "1765": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1767": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SHL",
      "path": "11"
    },
    "1768": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1769": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1770": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1772": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "1773": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6F6"
    },
    "1776": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1777": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1778": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CBC"
    },
    "1781": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1782": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1783": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1785": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1787": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1788": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1789": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1790": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SUB",
      "path": "11"
    },
    "1791": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1792": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1793": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1794": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1795": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1796": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1797": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1798": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x70E"
    },
    "1801": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1802": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1804": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1805": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1806": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1807": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1808": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "GAS",
      "path": "11"
    },
    "1809": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1810": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1811": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1812": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1813": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x722"
    },
    "1816": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1817": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1818": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1820": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1821": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1822": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1823": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1825": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1826": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1827": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1828": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1829": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1830": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1831": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1833": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1834": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1835": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1837": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "NOT",
      "path": "11"
    },
    "1838": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1840": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1841": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "1842": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "AND",
      "path": "11"
    },
    "1843": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1844": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "1845": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1846": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1848": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1849": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "POP",
      "path": "11"
    },
    "1850": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1851": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "ADD",
      "path": "11"
    },
    "1852": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1853": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x746"
    },
    "1856": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1857": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1858": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA4"
    },
    "1861": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "i",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1862": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10081,
        10127
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1863": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10065,
        10072
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1866": {
      "op": "NOT"
    },
    "1867": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10065,
        10077
      ],
      "op": "MUL",
      "path": "11"
    },
    "1868": {
      "branch": 156,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10057,
        10127
      ],
      "op": "LT",
      "path": "11"
    },
    "1869": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x755"
    },
    "1872": {
      "branch": 156,
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1873": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1875": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1876": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1877": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        10049,
        10128
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1878": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1879": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1880": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1881": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1882": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1883": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1884": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1885": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1886": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1887": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1888": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1889": {
      "fn": "UniV3Calc.calc_v3_swap",
      "offset": [
        5625,
        10140
      ],
      "op": "POP",
      "path": "11"
    },
    "1890": {
      "fn": "UniV3Calc.calc_v3_swap",
      "jump": "o",
      "offset": [
        5625,
        10140
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1891": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1892": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1800,
        1810
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1894": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1812,
        1828
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1895": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1833,
        1852
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1897": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1870,
        1875
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1898": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1833,
        1876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1899": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1833,
        1876
      ],
      "op": "POP",
      "path": "11"
    },
    "1900": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1879,
        1896
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1902": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1915
      ],
      "op": "AND",
      "path": "11"
    },
    "1912": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1915
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD0C93A7C"
    },
    "1917": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1919": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1920": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1921": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1926": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "AND",
      "path": "11"
    },
    "1927": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "1929": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "SHL",
      "path": "11"
    },
    "1930": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1931": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1932": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1934": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ADD",
      "path": "11"
    },
    "1935": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1937": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1939": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1940": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1941": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1942": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "SUB",
      "path": "11"
    },
    "1943": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1944": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1945": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1946": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "1947": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1948": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1949": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1950": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7A6"
    },
    "1953": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1954": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1956": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1957": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1958": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1959": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "1960": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "GAS",
      "path": "11"
    },
    "1961": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1962": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1963": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1964": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1965": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7BA"
    },
    "1968": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1969": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1970": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1972": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1973": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1974": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1975": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1977": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1978": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1979": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "1980": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "1981": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "1982": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "1983": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1985": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1986": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1987": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1989": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "NOT",
      "path": "11"
    },
    "1990": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1992": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1993": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ADD",
      "path": "11"
    },
    "1994": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "AND",
      "path": "11"
    },
    "1995": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1996": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ADD",
      "path": "11"
    },
    "1997": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1998": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2000": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2001": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "2002": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2003": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "ADD",
      "path": "11"
    },
    "2004": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2005": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7DE"
    },
    "2008": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2009": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2010": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AFE"
    },
    "2013": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2014": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1899,
        1917
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2015": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1879,
        1917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2016": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1879,
        1917
      ],
      "op": "POP",
      "path": "11"
    },
    "2017": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1927,
        1943
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2019": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1953,
        1964
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2020": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2022": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2023": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1950
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2024": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2026": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2027": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2028": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7F1"
    },
    "2031": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2032": {
      "dev": "Division by zero",
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2033": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2034": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1946,
        1964
      ],
      "op": "SDIV",
      "path": "11"
    },
    "2035": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1927,
        1964
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2036": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1927,
        1964
      ],
      "op": "POP",
      "path": "11"
    },
    "2037": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1985,
        1986
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2039": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        1982
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2040": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        1986
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2042": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        1986
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2043": {
      "branch": 157,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        1986
      ],
      "op": "SLT",
      "path": "11"
    },
    "2044": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2045": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2046": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x818"
    },
    "2049": {
      "branch": 157,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2050": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "POP",
      "path": "11"
    },
    "2051": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1997,
        2008
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2052": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2054": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2055": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        1994
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2056": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2058": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2059": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2060": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x811"
    },
    "2063": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2064": {
      "dev": "Modulus by zero",
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2065": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2066": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2008
      ],
      "op": "SMOD",
      "path": "11"
    },
    "2067": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2013
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2069": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2013
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "2070": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2013
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2071": {
      "branch": 158,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1990,
        2013
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2072": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1978,
        2013
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2073": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1974,
        2027
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2074": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1974,
        2027
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x822"
    },
    "2077": {
      "branch": 158,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1974,
        2027
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "NOT"
    },
    "2081": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2015,
        2027
      ],
      "op": "ADD",
      "path": "11",
      "statement": 20
    },
    "2082": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1974,
        2027
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2083": {
      "branch": 159,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2077,
        2080
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2084": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2085": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x900"
    },
    "2088": {
      "branch": 159,
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2089": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2097,
        2110
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2091": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2112,
        2124
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2092": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2128,
        2148
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x834"
    },
    "2095": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2137,
        2147
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2096": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2128,
        2136
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13B8"
    },
    "2099": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        2128,
        2148
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2100": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2128,
        2148
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2101": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2103": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2104": {
      "op": "PUSH4",
      "value": "0x299CE14B"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2113": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2114": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2096,
        2148
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2115": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2096,
        2148
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2116": {
      "op": "POP"
    },
    "2117": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2096,
        2148
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2118": {
      "op": "POP"
    },
    "2119": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2265,
        2266
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2121": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2265,
        2276
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2123": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2265,
        2276
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2124": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2265,
        2276
      ],
      "op": "AND",
      "path": "11"
    },
    "2125": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2265,
        2276
      ],
      "op": "SHL",
      "path": "11"
    },
    "2126": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2127": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "ADD",
      "path": "11"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2130": {
      "op": "NOT"
    },
    "2131": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "ADD",
      "path": "11"
    },
    "2132": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2133": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2229,
        2241
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2135": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2229,
        2241
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2136": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2137": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2244,
        2277
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2144": {
      "op": "SHL"
    },
    "2145": {
      "op": "SUB"
    },
    "2146": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2323
      ],
      "op": "DUP10",
      "path": "11"
    },
    "2147": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2323
      ],
      "op": "AND",
      "path": "11"
    },
    "2148": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2323
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2149": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2323
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5339C296"
    },
    "2154": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2323
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2155": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x878"
    },
    "2158": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2159": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2096,
        2148
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2160": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2096,
        2148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2161": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2163": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ADD",
      "path": "11"
    },
    "2164": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CD0"
    },
    "2167": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2168": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2169": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2171": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2173": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2174": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2175": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2176": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "SUB",
      "path": "11"
    },
    "2177": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2178": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2179": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2180": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2181": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2182": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2183": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2184": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x890"
    },
    "2187": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2188": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2190": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2191": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2192": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2193": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2194": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "GAS",
      "path": "11"
    },
    "2195": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2196": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2197": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2198": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2199": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8A4"
    },
    "2202": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2203": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2204": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2206": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2207": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2208": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2209": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2211": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2212": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2213": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2214": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2215": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2216": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2217": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2219": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2220": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2221": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2223": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "NOT",
      "path": "11"
    },
    "2224": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2226": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2227": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ADD",
      "path": "11"
    },
    "2228": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "AND",
      "path": "11"
    },
    "2229": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2230": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ADD",
      "path": "11"
    },
    "2231": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2232": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2234": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2235": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "POP",
      "path": "11"
    },
    "2236": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2237": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "ADD",
      "path": "11"
    },
    "2238": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2239": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C8"
    },
    "2242": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2243": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2244": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA4"
    },
    "2247": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2248": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2332
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2249": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2339
      ],
      "op": "AND",
      "path": "11"
    },
    "2250": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2486,
        2497
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 21
    },
    "2251": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2486,
        2497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2252": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2486,
        2497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2253": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2486,
        2497
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2308,
        2339
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2486,
        2497
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2258": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 22,
      "value": "0x8E2"
    },
    "2261": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2262": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2787,
        2798
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2263": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2776,
        2782
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2264": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2770,
        2783
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2266": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2770,
        2783
      ],
      "op": "AND",
      "path": "11"
    },
    "2267": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2757,
        2767
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2268": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2757,
        2783
      ],
      "op": "SUB",
      "path": "11"
    },
    "2269": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2756,
        2798
      ],
      "op": "MUL",
      "path": "11"
    },
    "2270": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8F5"
    },
    "2273": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2274": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2275": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2726,
        2737
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2276": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2687,
        2721
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8EC"
    },
    "2279": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2714,
        2720
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2280": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2687,
        2713
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13CA"
    },
    "2283": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        2687,
        2721
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2284": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2687,
        2721
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2285": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2678,
        2684
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2286": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2678,
        2721
      ],
      "op": "SUB",
      "path": "11"
    },
    "2287": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2672,
        2722
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2289": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2672,
        2722
      ],
      "op": "AND",
      "path": "11"
    },
    "2290": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2659,
        2669
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2291": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2659,
        2722
      ],
      "op": "SUB",
      "path": "11"
    },
    "2292": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2658,
        2737
      ],
      "op": "MUL",
      "path": "11"
    },
    "2293": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2628,
        2798
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2294": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2621,
        2798
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "2295": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2621,
        2798
      ],
      "op": "POP",
      "path": "11"
    },
    "2296": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2297": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2298": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2299": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2300": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9DF"
    },
    "2303": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2304": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2305": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2927,
        2940
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2307": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2942,
        2954
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2308": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2958,
        2982
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x90F"
    },
    "2311": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2967,
        2977
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2312": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2980,
        2981
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2314": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2967,
        2981
      ],
      "op": "ADD",
      "path": "11"
    },
    "2315": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2958,
        2966
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13B8"
    },
    "2318": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        2958,
        2982
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2319": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2958,
        2982
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2320": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2322": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2323": {
      "op": "PUSH4",
      "value": "0x299CE14B"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2332": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2333": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2926,
        2982
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2334": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2926,
        2982
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2335": {
      "op": "POP"
    },
    "2336": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2926,
        2982
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2340": {
      "op": "NOT"
    },
    "2341": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3087,
        3088
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2343": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3072,
        3083
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2345": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3072,
        3083
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2346": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3072,
        3083
      ],
      "op": "AND",
      "path": "11"
    },
    "2347": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3072,
        3083
      ],
      "op": "SHL",
      "path": "11"
    },
    "2348": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3071,
        3088
      ],
      "op": "ADD",
      "path": "11"
    },
    "2349": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3069,
        3089
      ],
      "op": "NOT",
      "path": "11"
    },
    "2350": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3069,
        3089
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2351": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3054,
        3066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2353": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3054,
        3066
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2354": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3069,
        3089
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2355": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3069,
        3089
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "op": "SUB"
    },
    "2364": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3135
      ],
      "op": "DUP10",
      "path": "11"
    },
    "2365": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3135
      ],
      "op": "AND",
      "path": "11"
    },
    "2366": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3135
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2367": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3135
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5339C296"
    },
    "2372": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3135
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2373": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x952"
    },
    "2376": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2377": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2926,
        2982
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2378": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2926,
        2982
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2379": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2381": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ADD",
      "path": "11"
    },
    "2382": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CD0"
    },
    "2385": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2386": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2387": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2389": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2391": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2392": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2393": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2394": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "SUB",
      "path": "11"
    },
    "2395": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2396": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2397": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2398": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2399": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2400": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2401": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2402": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x96A"
    },
    "2405": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2406": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2408": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2409": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2410": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2411": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2412": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "GAS",
      "path": "11"
    },
    "2413": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2414": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2415": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2416": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2417": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x97E"
    },
    "2420": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2421": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2422": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2424": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2425": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2426": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2427": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2429": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2430": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2431": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2432": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2433": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2434": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2435": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2437": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2438": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2439": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2441": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "NOT",
      "path": "11"
    },
    "2442": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2444": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2445": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ADD",
      "path": "11"
    },
    "2446": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "AND",
      "path": "11"
    },
    "2447": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2448": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ADD",
      "path": "11"
    },
    "2449": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2450": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2452": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2453": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "POP",
      "path": "11"
    },
    "2454": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2455": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "ADD",
      "path": "11"
    },
    "2456": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2457": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9A2"
    },
    "2460": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2461": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2462": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA4"
    },
    "2465": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2466": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3144
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2467": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3151
      ],
      "op": "AND",
      "path": "11"
    },
    "2468": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3290,
        3301
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 23
    },
    "2469": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3290,
        3301
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2470": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3290,
        3301
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2471": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3290,
        3301
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3120,
        3151
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3290,
        3301
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2476": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 24,
      "value": "0x9C2"
    },
    "2479": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2480": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3618,
        3629
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2481": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3607,
        3613
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2482": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3589,
        3604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2484": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3589,
        3613
      ],
      "op": "SUB",
      "path": "11"
    },
    "2485": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3583,
        3614
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2487": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3583,
        3614
      ],
      "op": "AND",
      "path": "11"
    },
    "2488": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2489": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3579,
        3580
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2491": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3566,
        3580
      ],
      "op": "ADD",
      "path": "11"
    },
    "2492": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3566,
        3614
      ],
      "op": "ADD",
      "path": "11"
    },
    "2493": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3565,
        3629
      ],
      "op": "MUL",
      "path": "11"
    },
    "2494": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9D8"
    },
    "2497": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2498": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2499": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3535,
        3546
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2500": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3524,
        3530
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2501": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3486,
        3521
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9CD"
    },
    "2504": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3514,
        3520
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2505": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3486,
        3513
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x146B"
    },
    "2508": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "i",
      "offset": [
        3486,
        3521
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2509": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3486,
        3521
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2510": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3486,
        3530
      ],
      "op": "SUB",
      "path": "11"
    },
    "2511": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3480,
        3531
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2513": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3480,
        3531
      ],
      "op": "AND",
      "path": "11"
    },
    "2514": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3463,
        3473
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2515": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3476,
        3477
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2517": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3463,
        3477
      ],
      "op": "ADD",
      "path": "11"
    },
    "2518": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3463,
        3531
      ],
      "op": "ADD",
      "path": "11"
    },
    "2519": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3462,
        3546
      ],
      "op": "MUL",
      "path": "11"
    },
    "2520": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3432,
        3629
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2521": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3425,
        3629
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "2522": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        3425,
        3629
      ],
      "op": "POP",
      "path": "11"
    },
    "2523": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2524": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2525": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2526": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "POP",
      "path": "11"
    },
    "2527": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        2073,
        3640
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2528": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2529": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2530": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2531": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2532": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2533": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2534": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2535": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2536": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "offset": [
        1653,
        3646
      ],
      "op": "POP",
      "path": "11"
    },
    "2537": {
      "fn": "UniV3Calc.nextInitializedTickWithinOneWord",
      "jump": "o",
      "offset": [
        1653,
        3646
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2538": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2539": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1416,
        1436
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2541": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1448,
        1463
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2542": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1473,
        1474
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2544": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1470
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2545": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1474
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2547": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1474
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "2548": {
      "branch": 226,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1474
      ],
      "op": "SLT",
      "path": "9"
    },
    "2549": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA01"
    },
    "2552": {
      "branch": 226,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2553": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1517,
        1521
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2554": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1510,
        1522
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2556": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1510,
        1522
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "2557": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA09"
    },
    "2560": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2561": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2562": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1493,
        1497
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2563": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1486,
        1498
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2565": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1486,
        1498
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "2566": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1485,
        1498
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2568": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1485,
        1498
      ],
      "op": "SUB",
      "path": "9"
    },
    "2569": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1466,
        1523
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2570": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1448,
        1523
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2571": {
      "op": "POP"
    },
    "2572": {
      "offset": [
        635,
        644
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0xD89E8"
    },
    "2576": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1541,
        1569
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 25
    },
    "2577": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1541,
        1569
      ],
      "op": "GT",
      "path": "9"
    },
    "2578": {
      "branch": 227,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1541,
        1569
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2579": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA47"
    },
    "2582": {
      "branch": 227,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2583": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2585": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2586": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2595": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2596": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2598": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2600": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2601": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "ADD",
      "path": "9"
    },
    "2602": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2603": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2605": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2607": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2608": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "ADD",
      "path": "9"
    },
    "2609": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "2614": {
      "op": "SHL"
    },
    "2615": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2617": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2618": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "ADD",
      "path": "9"
    },
    "2619": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2620": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2621": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2622": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2623": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2624": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2625": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "SUB",
      "path": "9"
    },
    "2626": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2628": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "ADD",
      "path": "9"
    },
    "2629": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2630": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2631": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1533,
        1575
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2632": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1586,
        1599
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2634": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1612,
        1615
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2636": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1615
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2637": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1615
      ],
      "op": "AND",
      "path": "9"
    },
    "2638": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA5B"
    },
    "2641": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA6D"
    },
    "2650": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2651": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2652": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1623,
        1657
      ],
      "op": "PUSH16",
      "path": "9",
      "value": "0xFFFCB933BD6FAD37AA2D162D1A594001"
    },
    "2669": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1602,
        1695
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2670": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1586,
        1695
      ],
      "op": "PUSH17",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2688": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1586,
        1695
      ],
      "op": "AND",
      "path": "9"
    },
    "2689": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1586,
        1695
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1719,
        1722
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2693": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1709,
        1722
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2694": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1709,
        1722
      ],
      "op": "AND",
      "path": "9"
    },
    "2695": {
      "branch": 228,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1709,
        1727
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2696": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1705,
        1788
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAA1"
    },
    "2699": {
      "branch": 228,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1705,
        1788
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2700": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1746,
        1780
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 26,
      "value": "0xFFF97272373D413259A46990580E213A"
    },
    "2717": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1738,
        1780
      ],
      "op": "MUL",
      "path": "9"
    },
    "2718": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1785,
        1788
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2720": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1737,
        1788
      ],
      "op": "SHR",
      "path": "9"
    },
    "2721": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1705,
        1788
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2722": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1812,
        1815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2724": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1802,
        1815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2725": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1802,
        1815
      ],
      "op": "AND",
      "path": "9"
    },
    "2726": {
      "branch": 229,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1802,
        1820
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2727": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1798,
        1881
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAC0"
    },
    "2730": {
      "branch": 229,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1798,
        1881
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2731": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1839,
        1873
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 27,
      "value": "0xFFF2E50F5F656932EF12357CF3C7FDCC"
    },
    "2748": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1831,
        1873
      ],
      "op": "MUL",
      "path": "9"
    },
    "2749": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1878,
        1881
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2751": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1830,
        1881
      ],
      "op": "SHR",
      "path": "9"
    },
    "2752": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1798,
        1881
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2753": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1905,
        1908
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "2755": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1895,
        1908
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2756": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1895,
        1908
      ],
      "op": "AND",
      "path": "9"
    },
    "2757": {
      "branch": 230,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1895,
        1913
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2758": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1891,
        1974
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xADF"
    },
    "2761": {
      "branch": 230,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1891,
        1974
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2762": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1932,
        1966
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 28,
      "value": "0xFFE5CACA7E10E4E61C3624EAA0941CD0"
    },
    "2779": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1924,
        1966
      ],
      "op": "MUL",
      "path": "9"
    },
    "2780": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1971,
        1974
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2782": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1923,
        1974
      ],
      "op": "SHR",
      "path": "9"
    },
    "2783": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1891,
        1974
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2784": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1998,
        2002
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x10"
    },
    "2786": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1988,
        2002
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2787": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1988,
        2002
      ],
      "op": "AND",
      "path": "9"
    },
    "2788": {
      "branch": 231,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1988,
        2007
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2789": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1984,
        2068
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAFE"
    },
    "2792": {
      "branch": 231,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1984,
        2068
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2793": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2026,
        2060
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 29,
      "value": "0xFFCB9843D60F6159C9DB58835C926644"
    },
    "2810": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2018,
        2060
      ],
      "op": "MUL",
      "path": "9"
    },
    "2811": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2065,
        2068
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2813": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2017,
        2068
      ],
      "op": "SHR",
      "path": "9"
    },
    "2814": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1984,
        2068
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2815": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2092,
        2096
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2817": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2082,
        2096
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2818": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2082,
        2096
      ],
      "op": "AND",
      "path": "9"
    },
    "2819": {
      "branch": 232,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2082,
        2101
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2820": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2078,
        2162
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB1D"
    },
    "2823": {
      "branch": 232,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2078,
        2162
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2824": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2120,
        2154
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 30,
      "value": "0xFF973B41FA98C081472E6896DFB254C0"
    },
    "2841": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2112,
        2154
      ],
      "op": "MUL",
      "path": "9"
    },
    "2842": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2159,
        2162
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2844": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2111,
        2162
      ],
      "op": "SHR",
      "path": "9"
    },
    "2845": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2078,
        2162
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2846": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2186,
        2190
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2848": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2176,
        2190
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2849": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2176,
        2190
      ],
      "op": "AND",
      "path": "9"
    },
    "2850": {
      "branch": 233,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2176,
        2195
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2851": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2172,
        2256
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB3C"
    },
    "2854": {
      "branch": 233,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2172,
        2256
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2855": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2214,
        2248
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 31,
      "value": "0xFF2EA16466C96A3843EC78B326B52861"
    },
    "2872": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2206,
        2248
      ],
      "op": "MUL",
      "path": "9"
    },
    "2873": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2253,
        2256
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2875": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2205,
        2256
      ],
      "op": "SHR",
      "path": "9"
    },
    "2876": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2172,
        2256
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2877": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2280,
        2284
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2879": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2270,
        2284
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2880": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2270,
        2284
      ],
      "op": "AND",
      "path": "9"
    },
    "2881": {
      "branch": 234,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2270,
        2289
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2882": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2266,
        2350
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB5B"
    },
    "2885": {
      "branch": 234,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2266,
        2350
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2886": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2308,
        2342
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 32,
      "value": "0xFE5DEE046A99A2A811C461F1969C3053"
    },
    "2903": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2300,
        2342
      ],
      "op": "MUL",
      "path": "9"
    },
    "2904": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2347,
        2350
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2906": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2299,
        2350
      ],
      "op": "SHR",
      "path": "9"
    },
    "2907": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2266,
        2350
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2908": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2374,
        2379
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "2911": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2364,
        2379
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2912": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2364,
        2379
      ],
      "op": "AND",
      "path": "9"
    },
    "2913": {
      "branch": 235,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2364,
        2384
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2914": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2360,
        2445
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB7B"
    },
    "2917": {
      "branch": 235,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2918": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2403,
        2437
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 33,
      "value": "0xFCBE86C7900A88AEDCFFC83B479AA3A4"
    },
    "2935": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2395,
        2437
      ],
      "op": "MUL",
      "path": "9"
    },
    "2936": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2442,
        2445
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2938": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2394,
        2445
      ],
      "op": "SHR",
      "path": "9"
    },
    "2939": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2940": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2469,
        2474
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x200"
    },
    "2943": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2459,
        2474
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2944": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2459,
        2474
      ],
      "op": "AND",
      "path": "9"
    },
    "2945": {
      "branch": 236,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2459,
        2479
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2946": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2455,
        2540
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB9B"
    },
    "2949": {
      "branch": 236,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2455,
        2540
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2950": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2498,
        2532
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 34,
      "value": "0xF987A7253AC413176F2B074CF7815E54"
    },
    "2967": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2490,
        2532
      ],
      "op": "MUL",
      "path": "9"
    },
    "2968": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2537,
        2540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2970": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2489,
        2540
      ],
      "op": "SHR",
      "path": "9"
    },
    "2971": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2455,
        2540
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2972": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2564,
        2569
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x400"
    },
    "2975": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2554,
        2569
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2976": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2554,
        2569
      ],
      "op": "AND",
      "path": "9"
    },
    "2977": {
      "branch": 237,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2554,
        2574
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2978": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2550,
        2635
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBBB"
    },
    "2981": {
      "branch": 237,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2550,
        2635
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2982": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2593,
        2627
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 35,
      "value": "0xF3392B0822B70005940C7A398E4B70F3"
    },
    "2999": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2585,
        2627
      ],
      "op": "MUL",
      "path": "9"
    },
    "3000": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2632,
        2635
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3002": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2584,
        2635
      ],
      "op": "SHR",
      "path": "9"
    },
    "3003": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2550,
        2635
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3004": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2659,
        2664
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x800"
    },
    "3007": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2649,
        2664
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3008": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2649,
        2664
      ],
      "op": "AND",
      "path": "9"
    },
    "3009": {
      "branch": 238,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2649,
        2669
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3010": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2645,
        2730
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBDB"
    },
    "3013": {
      "branch": 238,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2645,
        2730
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3014": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2688,
        2722
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 36,
      "value": "0xE7159475A2C29B7443B29C7FA6E889D9"
    },
    "3031": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2680,
        2722
      ],
      "op": "MUL",
      "path": "9"
    },
    "3032": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2727,
        2730
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3034": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2679,
        2730
      ],
      "op": "SHR",
      "path": "9"
    },
    "3035": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2645,
        2730
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3036": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2754,
        2760
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1000"
    },
    "3039": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2744,
        2760
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3040": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2744,
        2760
      ],
      "op": "AND",
      "path": "9"
    },
    "3041": {
      "branch": 239,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2744,
        2765
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3042": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2740,
        2826
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBFB"
    },
    "3045": {
      "branch": 239,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2740,
        2826
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3046": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2784,
        2818
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 37,
      "value": "0xD097F3BDFD2022B8845AD8F792AA5825"
    },
    "3063": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2776,
        2818
      ],
      "op": "MUL",
      "path": "9"
    },
    "3064": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2823,
        2826
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3066": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2775,
        2826
      ],
      "op": "SHR",
      "path": "9"
    },
    "3067": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2740,
        2826
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3068": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2850,
        2856
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2000"
    },
    "3071": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2840,
        2856
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3072": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2840,
        2856
      ],
      "op": "AND",
      "path": "9"
    },
    "3073": {
      "branch": 240,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2840,
        2861
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3074": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2836,
        2922
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC1B"
    },
    "3077": {
      "branch": 240,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2836,
        2922
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3078": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2880,
        2914
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 38,
      "value": "0xA9F746462D870FDF8A65DC1F90E061E5"
    },
    "3095": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2872,
        2914
      ],
      "op": "MUL",
      "path": "9"
    },
    "3096": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2919,
        2922
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3098": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2871,
        2922
      ],
      "op": "SHR",
      "path": "9"
    },
    "3099": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2836,
        2922
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3100": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2946,
        2952
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4000"
    },
    "3103": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2936,
        2952
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3104": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2936,
        2952
      ],
      "op": "AND",
      "path": "9"
    },
    "3105": {
      "branch": 241,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2936,
        2957
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3106": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2932,
        3018
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC3B"
    },
    "3109": {
      "branch": 241,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2932,
        3018
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3110": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2976,
        3010
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 39,
      "value": "0x70D869A156D2A1B890BB3DF62BAF32F7"
    },
    "3127": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2968,
        3010
      ],
      "op": "MUL",
      "path": "9"
    },
    "3128": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3015,
        3018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3130": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2967,
        3018
      ],
      "op": "SHR",
      "path": "9"
    },
    "3131": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2932,
        3018
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3132": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3042,
        3048
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8000"
    },
    "3135": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3032,
        3048
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3136": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3032,
        3048
      ],
      "op": "AND",
      "path": "9"
    },
    "3137": {
      "branch": 242,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3032,
        3053
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3138": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3028,
        3114
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC5B"
    },
    "3141": {
      "branch": 242,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3028,
        3114
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3142": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3072,
        3106
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 40,
      "value": "0x31BE135F97D08FD981231505542FCFA6"
    },
    "3159": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3064,
        3106
      ],
      "op": "MUL",
      "path": "9"
    },
    "3160": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3111,
        3114
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3162": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3063,
        3114
      ],
      "op": "SHR",
      "path": "9"
    },
    "3163": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3028,
        3114
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3164": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3138,
        3145
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x10000"
    },
    "3168": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3128,
        3145
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3169": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3128,
        3145
      ],
      "op": "AND",
      "path": "9"
    },
    "3170": {
      "branch": 243,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3128,
        3150
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3171": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3124,
        3210
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC7C"
    },
    "3174": {
      "branch": 243,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3124,
        3210
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3175": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3169,
        3202
      ],
      "op": "PUSH16",
      "path": "9",
      "statement": 41,
      "value": "0x9AA508B5B7A84E1C677DE54F3E99BC9"
    },
    "3192": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3161,
        3202
      ],
      "op": "MUL",
      "path": "9"
    },
    "3193": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3207,
        3210
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3195": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3160,
        3210
      ],
      "op": "SHR",
      "path": "9"
    },
    "3196": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3124,
        3210
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3197": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3234,
        3241
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x20000"
    },
    "3201": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3224,
        3241
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3202": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3224,
        3241
      ],
      "op": "AND",
      "path": "9"
    },
    "3203": {
      "branch": 244,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3224,
        3246
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3204": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3220,
        3305
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC9C"
    },
    "3207": {
      "branch": 244,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3220,
        3305
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3208": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3265,
        3297
      ],
      "op": "PUSH15",
      "path": "9",
      "statement": 42,
      "value": "0x5D6AF8DEDB81196699C329225EE604"
    },
    "3224": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3257,
        3297
      ],
      "op": "MUL",
      "path": "9"
    },
    "3225": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3302,
        3305
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3227": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3256,
        3305
      ],
      "op": "SHR",
      "path": "9"
    },
    "3228": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3220,
        3305
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3229": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3329,
        3336
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x40000"
    },
    "3233": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3319,
        3336
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3234": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3319,
        3336
      ],
      "op": "AND",
      "path": "9"
    },
    "3235": {
      "branch": 245,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3319,
        3341
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3236": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3315,
        3398
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCBB"
    },
    "3239": {
      "branch": 245,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3315,
        3398
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3240": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3360,
        3390
      ],
      "op": "PUSH14",
      "path": "9",
      "statement": 43,
      "value": "0x2216E584F5FA1EA926041BEDFE98"
    },
    "3255": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3352,
        3390
      ],
      "op": "MUL",
      "path": "9"
    },
    "3256": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3395,
        3398
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3258": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3351,
        3398
      ],
      "op": "SHR",
      "path": "9"
    },
    "3259": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3315,
        3398
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3260": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3422,
        3429
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x80000"
    },
    "3264": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3412,
        3429
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3265": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3412,
        3429
      ],
      "op": "AND",
      "path": "9"
    },
    "3266": {
      "branch": 246,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3412,
        3434
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3267": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3408,
        3486
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCD8"
    },
    "3270": {
      "branch": 246,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3408,
        3486
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3271": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3453,
        3478
      ],
      "op": "PUSH12",
      "path": "9",
      "statement": 44,
      "value": "0x48A170391F7DC42444E8FA2"
    },
    "3284": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3445,
        3478
      ],
      "op": "MUL",
      "path": "9"
    },
    "3285": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3483,
        3486
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "3287": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3444,
        3486
      ],
      "op": "SHR",
      "path": "9"
    },
    "3288": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3408,
        3486
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3289": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3508,
        3509
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3291": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3501,
        3505
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3292": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3501,
        3509
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3294": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3501,
        3509
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "3295": {
      "branch": 247,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3501,
        3509
      ],
      "op": "SGT",
      "path": "9"
    },
    "3296": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3497,
        3544
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3297": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3497,
        3544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF3"
    },
    "3300": {
      "branch": 247,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3497,
        3544
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3301": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3539,
        3544
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 45
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3304": {
      "op": "NOT"
    },
    "3305": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3306": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCEF"
    },
    "3309": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3310": {
      "dev": "Division by zero",
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "INVALID",
      "path": "9"
    },
    "3311": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3312": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3519,
        3544
      ],
      "op": "DIV",
      "path": "9"
    },
    "3313": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3511,
        3544
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3314": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3511,
        3544
      ],
      "op": "POP",
      "path": "9"
    },
    "3315": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3497,
        3544
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3316": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3903,
        3910
      ],
      "op": "PUSH5",
      "path": "9",
      "statement": 46,
      "value": "0x100000000"
    },
    "3322": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3899
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3323": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3911
      ],
      "op": "MOD",
      "path": "9"
    },
    "3324": {
      "branch": 248,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3916
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3325": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD07"
    },
    "3328": {
      "branch": 248,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3329": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3923,
        3924
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3331": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD0A"
    },
    "3334": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3335": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3336": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3919,
        3920
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3338": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3894,
        3924
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3339": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3877,
        3925
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "3341": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3877,
        3925
      ],
      "op": "AND",
      "path": "9"
    },
    "3342": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3887,
        3889
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3344": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3878,
        3883
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3345": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3878,
        3889
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3346": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3878,
        3889
      ],
      "op": "SHR",
      "path": "9"
    },
    "3347": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3877,
        3925
      ],
      "op": "ADD",
      "path": "9"
    },
    "3348": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3854,
        3926
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "3349": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3854,
        3926
      ],
      "op": "POP",
      "path": "9"
    },
    "3350": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "POP",
      "path": "9"
    },
    "3351": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "POP",
      "path": "9"
    },
    "3352": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3353": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3354": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1353,
        3933
      ],
      "op": "POP",
      "path": "9"
    },
    "3355": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "jump": "o",
      "offset": [
        1353,
        3933
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3356": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3357": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1636,
        1660
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3359": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1636,
        1660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3360": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1636,
        1660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3361": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1636,
        1660
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3371": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3372": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "AND",
      "path": "7"
    },
    "3373": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3374": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3375": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "AND",
      "path": "7"
    },
    "3376": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "LT",
      "path": "7"
    },
    "3377": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1795,
        1836
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3378": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3379": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3380": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "SLT",
      "path": "7"
    },
    "3381": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3382": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3383": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1861,
        1881
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3384": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA1"
    },
    "3387": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3388": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1919,
        1949
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3390": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1952,
        2013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD55"
    },
    "3393": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1976,
        1991
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3394": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2000,
        2007
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3395": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1994,
        1997
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "3399": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1994,
        2007
      ],
      "op": "SUB",
      "path": "7"
    },
    "3400": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1952,
        2013
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFFFFFF"
    },
    "3404": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1952,
        2013
      ],
      "op": "AND",
      "path": "7"
    },
    "3405": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2009,
        2012
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "3409": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1952,
        1967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1555"
    },
    "3412": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        1952,
        2013
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3413": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1952,
        2013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3414": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1919,
        2013
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3415": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1919,
        2013
      ],
      "op": "POP",
      "path": "7"
    },
    "3416": {
      "branch": 210,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2048
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 47
    },
    "3417": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD6E"
    },
    "3420": {
      "branch": 210,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2260
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3421": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2173,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD69"
    },
    "3424": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2203,
        2222
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3425": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2224,
        2242
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3426": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2244,
        2253
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3427": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2255,
        2259
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3429": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2173,
        2202
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1605"
    },
    "3432": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        2173,
        2260
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3433": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2173,
        2260
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3434": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD7B"
    },
    "3437": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2260
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3438": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2038,
        2260
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3439": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2067,
        2154
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD7B"
    },
    "3442": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2097,
        2115
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3443": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2117,
        2136
      ],
      "op": "DUP14",
      "path": "7"
    },
    "3444": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2138,
        2147
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3445": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2149,
        2153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3447": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2067,
        2096
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1680"
    },
    "3450": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        2067,
        2154
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3451": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2067,
        2154
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3452": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2027,
        2260
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3453": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2027,
        2260
      ],
      "op": "POP",
      "path": "7"
    },
    "3454": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2304,
        2312
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3455": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2278,
        2300
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3456": {
      "branch": 211,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2278,
        2312
      ],
      "op": "LT",
      "path": "7"
    },
    "3457": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD8C"
    },
    "3460": {
      "branch": 211,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3461": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2333,
        2351
      ],
      "op": "DUP11",
      "path": "7",
      "statement": 48
    },
    "3462": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2314,
        2351
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "3463": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2314,
        2351
      ],
      "op": "POP",
      "path": "7"
    },
    "3464": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD9B"
    },
    "3467": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3468": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3469": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2405,
        2610
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 49,
      "value": "0xD98"
    },
    "3472": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2466,
        2485
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3473": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2507,
        2516
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3474": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2538,
        2560
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3475": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2582,
        2592
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3476": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2405,
        2444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x172B"
    },
    "3479": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        2405,
        2610
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3480": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2405,
        2610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3481": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2386,
        2610
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "3482": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2386,
        2610
      ],
      "op": "POP",
      "path": "7"
    },
    "3483": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2274,
        2610
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3484": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "POP",
      "path": "7"
    },
    "3485": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDEB"
    },
    "3488": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3489": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1892,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3490": {
      "branch": 212,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2663
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 50
    },
    "3491": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2877
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDB8"
    },
    "3494": {
      "branch": 212,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2877
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3495": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2789,
        2877
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDB3"
    },
    "3498": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2819,
        2838
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3499": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2840,
        2858
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3500": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2860,
        2869
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3501": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2871,
        2876
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3503": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2789,
        2818
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1680"
    },
    "3506": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        2789,
        2877
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3507": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2789,
        2877
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3508": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2877
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC5"
    },
    "3511": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2877
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3512": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2653,
        2877
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3513": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2682,
        2770
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC5"
    },
    "3516": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2712,
        2730
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3517": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2732,
        2751
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3518": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2753,
        2762
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3519": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2764,
        2769
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3521": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2682,
        2711
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1605"
    },
    "3524": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        2682,
        2770
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3525": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2682,
        2770
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3526": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2641,
        2877
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3527": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2641,
        2877
      ],
      "op": "POP",
      "path": "7"
    },
    "3528": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2924,
        2933
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3529": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2904,
        2919
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3530": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2903,
        2919
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3532": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2903,
        2919
      ],
      "op": "SUB",
      "path": "7"
    },
    "3533": {
      "branch": 213,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2895,
        2933
      ],
      "op": "LT",
      "path": "7"
    },
    "3534": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD9"
    },
    "3537": {
      "branch": 213,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3538": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2954,
        2972
      ],
      "op": "DUP10",
      "path": "7",
      "statement": 51
    },
    "3539": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2935,
        2972
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3540": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2935,
        2972
      ],
      "op": "POP",
      "path": "7"
    },
    "3541": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDEB"
    },
    "3544": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3545": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3546": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3026,
        3235
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 52,
      "value": "0xDE8"
    },
    "3549": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3088,
        3107
      ],
      "op": "DUP12",
      "path": "7"
    },
    "3550": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3129,
        3138
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3551": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3169,
        3184
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3552": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3168,
        3184
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3554": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3168,
        3184
      ],
      "op": "SUB",
      "path": "7"
    },
    "3555": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3207,
        3217
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3556": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3026,
        3066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1777"
    },
    "3559": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        3026,
        3235
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3560": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3026,
        3235
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3561": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3007,
        3235
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3562": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3007,
        3235
      ],
      "op": "POP",
      "path": "7"
    },
    "3563": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        2891,
        3235
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3570": {
      "op": "SHL"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3573": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3574": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "AND",
      "path": "7"
    },
    "3575": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3576": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3577": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "AND",
      "path": "7"
    },
    "3578": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3267,
        3305
      ],
      "op": "EQ",
      "path": "7"
    },
    "3579": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3580": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3581": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4E"
    },
    "3584": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3585": {
      "branch": 214,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3400
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 53
    },
    "3586": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3587": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3588": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE0A"
    },
    "3591": {
      "branch": 214,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3592": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "POP",
      "path": "7"
    },
    "3593": {
      "branch": 215,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3404,
        3411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3594": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3411
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3595": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE20"
    },
    "3598": {
      "branch": 215,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3599": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3457,
        3542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE1B"
    },
    "3602": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3487,
        3503
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3603": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3505,
        3524
      ],
      "op": "DUP14",
      "path": "7"
    },
    "3604": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3526,
        3535
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3605": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3537,
        3541
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3607": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3457,
        3486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1680"
    },
    "3610": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        3457,
        3542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3611": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3457,
        3542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3612": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE22"
    },
    "3615": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3616": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3617": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3430,
        3438
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3618": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3397,
        3542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3619": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3386,
        3542
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3620": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3386,
        3542
      ],
      "op": "POP",
      "path": "7"
    },
    "3621": {
      "branch": 216,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3571
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 54
    },
    "3622": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3623": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3624": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2F"
    },
    "3627": {
      "branch": 216,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3628": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "POP",
      "path": "7"
    },
    "3629": {
      "branch": 217,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3576,
        3583
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3630": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3575,
        3583
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3631": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3583
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3632": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE45"
    },
    "3635": {
      "branch": 217,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3636": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3630,
        3716
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE40"
    },
    "3639": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3660,
        3676
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3640": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3678,
        3697
      ],
      "op": "DUP14",
      "path": "7"
    },
    "3641": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3699,
        3708
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3642": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3710,
        3715
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3644": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3630,
        3659
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1605"
    },
    "3647": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        3630,
        3716
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3648": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3630,
        3716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3649": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE47"
    },
    "3652": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3653": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3654": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3602,
        3611
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3655": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3568,
        3716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3656": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3556,
        3716
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3657": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3556,
        3716
      ],
      "op": "POP",
      "path": "7"
    },
    "3658": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE98"
    },
    "3661": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3662": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3663": {
      "branch": 218,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3761
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 55
    },
    "3664": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3665": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3666": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE58"
    },
    "3669": {
      "branch": 218,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3670": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "POP",
      "path": "7"
    },
    "3671": {
      "branch": 219,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3765,
        3772
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3672": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3772
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3673": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE6E"
    },
    "3676": {
      "branch": 219,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3677": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3818,
        3903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE69"
    },
    "3680": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3848,
        3867
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3681": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3869,
        3885
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3682": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3887,
        3896
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3683": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3898,
        3902
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3685": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3818,
        3847
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1605"
    },
    "3688": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        3818,
        3903
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3689": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3818,
        3903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3690": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE70"
    },
    "3693": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3694": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3695": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3791,
        3799
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3696": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3758,
        3903
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3697": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3747,
        3903
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3698": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3747,
        3903
      ],
      "op": "POP",
      "path": "7"
    },
    "3699": {
      "branch": 220,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3932
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 56
    },
    "3700": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3701": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3702": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "3705": {
      "branch": 220,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3706": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "POP",
      "path": "7"
    },
    "3707": {
      "branch": 221,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3937,
        3944
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3708": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3936,
        3944
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3709": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        3944
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3710": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE93"
    },
    "3713": {
      "branch": 221,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3714": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3991,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE8E"
    },
    "3717": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4021,
        4040
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3718": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4042,
        4058
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3719": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4060,
        4069
      ],
      "op": "DUP13",
      "path": "7"
    },
    "3720": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4071,
        4076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3722": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3991,
        4020
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1680"
    },
    "3725": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        3991,
        4077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3726": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3991,
        4077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3727": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE95"
    },
    "3730": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3731": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3732": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3963,
        3972
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3733": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3929,
        4077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3734": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3917,
        4077
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3735": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3917,
        4077
      ],
      "op": "POP",
      "path": "7"
    },
    "3736": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        3356,
        4088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3737": {
      "branch": 222,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4178,
        4185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3738": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4185
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3739": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3740": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3741": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA8"
    },
    "3744": {
      "branch": 222,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3745": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "POP",
      "path": "7"
    },
    "3746": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4210,
        4225
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3747": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4209,
        4225
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3749": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4209,
        4225
      ],
      "op": "SUB",
      "path": "7"
    },
    "3750": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4189,
        4198
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3751": {
      "branch": 223,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4189,
        4226
      ],
      "op": "GT",
      "path": "7"
    },
    "3752": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4177,
        4226
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3753": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4173,
        4290
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3754": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4173,
        4290
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB4"
    },
    "3757": {
      "branch": 223,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4173,
        4290
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3758": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4263,
        4278
      ],
      "op": "DUP9",
      "path": "7",
      "statement": 57
    },
    "3759": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4262,
        4278
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3761": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4262,
        4278
      ],
      "op": "SUB",
      "path": "7"
    },
    "3762": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4242,
        4279
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3763": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4242,
        4279
      ],
      "op": "POP",
      "path": "7"
    },
    "3764": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4173,
        4290
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3765": {
      "branch": 224,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4311
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3766": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3767": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3768": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xED3"
    },
    "3771": {
      "branch": 224,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3772": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "POP",
      "path": "7"
    },
    "3773": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4335,
        4353
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "op": "SUB"
    },
    "3782": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4315,
        4353
      ],
      "op": "AND",
      "path": "7"
    },
    "3783": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4315,
        4331
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3790": {
      "op": "SHL"
    },
    "3791": {
      "op": "SUB"
    },
    "3792": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4315,
        4353
      ],
      "op": "AND",
      "path": "7"
    },
    "3793": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4315,
        4353
      ],
      "op": "EQ",
      "path": "7"
    },
    "3794": {
      "branch": 225,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4315,
        4353
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3795": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4304,
        4353
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3796": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3797": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEE2"
    },
    "3800": {
      "branch": 225,
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3801": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4501,
        4509
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 58
    },
    "3802": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4482,
        4497
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3803": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4474,
        4509
      ],
      "op": "SUB",
      "path": "7"
    },
    "3804": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4462,
        4509
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3805": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4462,
        4509
      ],
      "op": "POP",
      "path": "7"
    },
    "3806": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEFF"
    },
    "3809": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3810": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3811": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 59,
      "value": "0xEFC"
    },
    "3814": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4578,
        4586
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3815": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4588,
        4595
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3816": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFFFFFF"
    },
    "3820": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "AND",
      "path": "7"
    },
    "3821": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4603,
        4610
      ],
      "op": "DUP11",
      "path": "7"
    },
    "3822": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4597,
        4600
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xF4240"
    },
    "3826": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4597,
        4610
      ],
      "op": "SUB",
      "path": "7"
    },
    "3827": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "PUSH3",
      "path": "7",
      "value": "0xFFFFFF"
    },
    "3831": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "AND",
      "path": "7"
    },
    "3832": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4577
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17C3"
    },
    "3835": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "i",
      "offset": [
        4552,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3836": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4552,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3837": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4540,
        4611
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3838": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4540,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "3839": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        4300,
        4622
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3840": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3841": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3842": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3843": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3844": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3845": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3846": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3847": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3848": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3849": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3850": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3851": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3852": {
      "fn": "SwapMath.computeSwapStep",
      "offset": [
        1389,
        4628
      ],
      "op": "POP",
      "path": "7"
    },
    "3853": {
      "fn": "SwapMath.computeSwapStep",
      "jump": "o",
      "offset": [
        1389,
        4628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3854": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1571,
        1691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3855": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1660,
        1665
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 60
    },
    "3856": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1660,
        1665
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3857": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1660,
        1665
      ],
      "op": "SUB",
      "path": "4"
    },
    "3858": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1655,
        1671
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3859": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1655,
        1671
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3860": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1655,
        1671
      ],
      "op": "SGT",
      "path": "4"
    },
    "3861": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1655,
        1671
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3862": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1627,
        1635
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3864": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1676,
        1682
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3865": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1676,
        1682
      ],
      "op": "SLT",
      "path": "4"
    },
    "3866": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1676,
        1682
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3867": {
      "branch": 186,
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1655,
        1683
      ],
      "op": "EQ",
      "path": "4"
    },
    "3868": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF24"
    },
    "3871": {
      "branch": 186,
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3872": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3874": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3875": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3876": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1647,
        1684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3877": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1571,
        1691
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3878": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1571,
        1691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3879": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1571,
        1691
      ],
      "op": "POP",
      "path": "4"
    },
    "3880": {
      "fn": "LowGasSafeMath.sub",
      "offset": [
        1571,
        1691
      ],
      "op": "POP",
      "path": "4"
    },
    "3881": {
      "fn": "LowGasSafeMath.sub",
      "jump": "o",
      "offset": [
        1571,
        1691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3882": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1274,
        1394
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3883": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1363,
        1368
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 61
    },
    "3884": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1363,
        1368
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3885": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1363,
        1368
      ],
      "op": "ADD",
      "path": "4"
    },
    "3886": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1358,
        1374
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3887": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1358,
        1374
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3888": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1358,
        1374
      ],
      "op": "SLT",
      "path": "4"
    },
    "3889": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1358,
        1374
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3890": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1330,
        1338
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3892": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1379,
        1385
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3893": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1379,
        1385
      ],
      "op": "SLT",
      "path": "4"
    },
    "3894": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1379,
        1385
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3895": {
      "branch": 187,
      "fn": "LowGasSafeMath.add",
      "offset": [
        1358,
        1386
      ],
      "op": "EQ",
      "path": "4"
    },
    "3896": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1350,
        1387
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF24"
    },
    "3899": {
      "branch": 187,
      "fn": "LowGasSafeMath.add",
      "offset": [
        1350,
        1387
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3900": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1350,
        1387
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3902": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1350,
        1387
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3903": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        1350,
        1387
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3904": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3652,
        4193
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3905": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3729,
        3735
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3907": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3740,
        3762
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3908": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3765,
        3784
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3910": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3787,
        3816
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3911": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3819,
        3848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3913": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3851,
        3878
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3914": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3881,
        3919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3916": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3922,
        3943
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3917": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3946,
        3962
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3919": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4147
      ],
      "op": "DUP11",
      "path": "11",
      "statement": 62
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3926": {
      "op": "SHL"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4153
      ],
      "op": "AND",
      "path": "11"
    },
    "3929": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4153
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF30DBA93"
    },
    "3934": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4154,
        4163
      ],
      "op": "DUP12",
      "path": "11"
    },
    "3935": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3937": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3938": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3939": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "3944": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "AND",
      "path": "11"
    },
    "3945": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "3947": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SHL",
      "path": "11"
    },
    "3948": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3949": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3950": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3952": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ADD",
      "path": "11"
    },
    "3953": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF7A"
    },
    "3956": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3957": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3958": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CDE"
    },
    "3961": {
      "fn": "UniV3Calc._liqNet",
      "jump": "i",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3962": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3963": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3966": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3968": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3969": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3970": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3971": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SUB",
      "path": "11"
    },
    "3972": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3973": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3974": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3975": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3976": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3977": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3978": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3979": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF93"
    },
    "3982": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3983": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3985": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3986": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3987": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3988": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "3989": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "GAS",
      "path": "11"
    },
    "3990": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "3991": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3992": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3993": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3994": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFA7"
    },
    "3997": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3998": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3999": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4001": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4002": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4003": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4004": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4006": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4007": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4008": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "4009": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "4010": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "4011": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "4012": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4014": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4015": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4016": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4018": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "NOT",
      "path": "11"
    },
    "4019": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4021": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4022": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ADD",
      "path": "11"
    },
    "4023": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "AND",
      "path": "11"
    },
    "4024": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4025": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ADD",
      "path": "11"
    },
    "4026": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4027": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4029": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4030": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "POP",
      "path": "11"
    },
    "4031": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4032": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "ADD",
      "path": "11"
    },
    "4033": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4034": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFCB"
    },
    "4037": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4038": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4039": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BDB"
    },
    "4042": {
      "fn": "UniV3Calc._liqNet",
      "jump": "i",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4043": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        4143,
        4164
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3979,
        4164
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "4046": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3979,
        4164
      ],
      "op": "SWAP15",
      "path": "11"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "POP"
    },
    "4049": {
      "op": "POP"
    },
    "4050": {
      "op": "POP"
    },
    "4051": {
      "op": "POP"
    },
    "4052": {
      "op": "POP"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "op": "POP"
    },
    "4060": {
      "op": "POP"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3652,
        4193
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4063": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3652,
        4193
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4064": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3652,
        4193
      ],
      "op": "POP",
      "path": "11"
    },
    "4065": {
      "fn": "UniV3Calc._liqNet",
      "offset": [
        3652,
        4193
      ],
      "op": "POP",
      "path": "11"
    },
    "4066": {
      "fn": "UniV3Calc._liqNet",
      "jump": "o",
      "offset": [
        3652,
        4193
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4067": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        381,
        617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4068": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        443,
        452
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4070": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        472,
        473
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4071": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        468,
        469
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4072": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        468,
        473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4074": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        468,
        473
      ],
      "op": "SIGNEXTEND",
      "path": "3"
    },
    "4075": {
      "branch": 183,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        468,
        473
      ],
      "op": "SLT",
      "path": "3"
    },
    "4076": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4077": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1048"
    },
    "4080": {
      "branch": 183,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4081": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        521,
        522
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 63
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "op": "SUB"
    },
    "4090": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        497,
        522
      ],
      "op": "AND",
      "path": "3"
    },
    "4091": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        515,
        516
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4092": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        514,
        516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4094": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        514,
        516
      ],
      "op": "SUB",
      "path": "3"
    },
    "4095": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        502,
        503
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4096": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        502,
        517
      ],
      "op": "SUB",
      "path": "3"
    },
    "4097": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        498,
        517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4098": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        498,
        517
      ],
      "op": "POP",
      "path": "3"
    },
    "4099": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        498,
        517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "op": "SUB"
    },
    "4108": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        497,
        522
      ],
      "op": "AND",
      "path": "3"
    },
    "4109": {
      "branch": 184,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        497,
        522
      ],
      "op": "LT",
      "path": "3"
    },
    "4110": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1043"
    },
    "4113": {
      "branch": 184,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4114": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4116": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4117": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4126": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4127": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4129": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4131": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4132": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "ADD",
      "path": "3"
    },
    "4133": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4134": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4136": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4138": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4139": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "ADD",
      "path": "3"
    },
    "4140": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4141": {
      "op": "PUSH2",
      "value": "0x4C53"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4149": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4150": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "ADD",
      "path": "3"
    },
    "4151": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4152": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4153": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4154": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4155": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4156": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4157": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "SUB",
      "path": "3"
    },
    "4158": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4160": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "ADD",
      "path": "3"
    },
    "4161": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4162": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4163": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        489,
        529
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4164": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF24"
    },
    "4167": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4168": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        464,
        611
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4169": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        592,
        593
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 64
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        568,
        593
      ],
      "op": "AND",
      "path": "3"
    },
    "4179": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        585,
        586
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4180": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        573,
        574
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4181": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        573,
        587
      ],
      "op": "ADD",
      "path": "3"
    },
    "4182": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        569,
        587
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4183": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        569,
        587
      ],
      "op": "POP",
      "path": "3"
    },
    "4184": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        569,
        587
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4191": {
      "op": "SHL"
    },
    "4192": {
      "op": "SUB"
    },
    "4193": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        568,
        593
      ],
      "op": "AND",
      "path": "3"
    },
    "4194": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        568,
        593
      ],
      "op": "LT",
      "path": "3"
    },
    "4195": {
      "branch": 185,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        568,
        593
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4196": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF24"
    },
    "4199": {
      "branch": 185,
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4200": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4202": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4203": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4210": {
      "op": "SHL"
    },
    "4211": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4212": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4213": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4215": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4217": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4218": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "ADD",
      "path": "3"
    },
    "4219": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4220": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4222": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4224": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4225": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "ADD",
      "path": "3"
    },
    "4226": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4227": {
      "op": "PUSH2",
      "value": "0x4C41"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4232": {
      "op": "SHL"
    },
    "4233": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4235": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4236": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "ADD",
      "path": "3"
    },
    "4237": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4238": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4239": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4240": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4241": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4242": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4243": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "SUB",
      "path": "3"
    },
    "4244": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4246": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "ADD",
      "path": "3"
    },
    "4247": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4248": {
      "fn": "LiquidityMath.addDelta",
      "offset": [
        560,
        600
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4249": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4352,
        8633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4250": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4425,
        4435
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4252": {
      "offset": [
        815,
        825
      ],
      "op": "PUSH5",
      "path": "9",
      "value": "0x1000276A3"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "SUB"
    },
    "4266": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 65
    },
    "4267": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "AND",
      "path": "9"
    },
    "4268": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "LT",
      "path": "9"
    },
    "4269": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4270": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4271": {
      "branch": 249,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4584
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4272": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4617
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10D5"
    },
    "4275": {
      "branch": 249,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4617
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "offset": [
        995,
        1044
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0xFFFD8963EFD1FC6A506488495D951D5263988D26"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "op": "SUB"
    },
    "4306": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4588,
        4617
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4307": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4588,
        4617
      ],
      "op": "AND",
      "path": "9"
    },
    "4308": {
      "branch": 250,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4588,
        4617
      ],
      "op": "LT",
      "path": "9"
    },
    "4309": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4554,
        4617
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4310": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x110A"
    },
    "4313": {
      "branch": 250,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4314": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4316": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4317": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4326": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4327": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4329": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4331": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4332": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "ADD",
      "path": "9"
    },
    "4333": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4334": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4336": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4338": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4339": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "ADD",
      "path": "9"
    },
    "4340": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4345": {
      "op": "SHL"
    },
    "4346": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4348": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4349": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "ADD",
      "path": "9"
    },
    "4350": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4351": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4352": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4353": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4354": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4355": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4356": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "SUB",
      "path": "9"
    },
    "4357": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "4359": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "ADD",
      "path": "9"
    },
    "4360": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4361": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4362": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4546,
        4623
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4363": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "SUB"
    },
    "4375": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4674,
        4676
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4377": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4649,
        4676
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4378": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4649,
        4676
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4379": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4649,
        4676
      ],
      "op": "SHL",
      "path": "9"
    },
    "4380": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4649,
        4676
      ],
      "op": "AND",
      "path": "9"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4387": {
      "op": "SHL"
    },
    "4388": {
      "op": "SUB"
    },
    "4389": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4779,
        4820
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4390": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4779,
        4820
      ],
      "op": "GT",
      "path": "9"
    },
    "4391": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4776,
        4777
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "4393": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4772,
        4821
      ],
      "op": "SHL",
      "path": "9"
    },
    "4394": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4869,
        4878
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4395": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4869,
        4878
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4396": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4869,
        4878
      ],
      "op": "SHR",
      "path": "9"
    },
    "4397": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4942,
        4960
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4406": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4936,
        4961
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4407": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4936,
        4961
      ],
      "op": "GT",
      "path": "9"
    },
    "4408": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4933,
        4934
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "4410": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4929,
        4962
      ],
      "op": "SHL",
      "path": "9"
    },
    "4411": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5010,
        5019
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4412": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5010,
        5019
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4413": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5010,
        5019
      ],
      "op": "SHR",
      "path": "9"
    },
    "4414": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5083,
        5093
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4419": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5077,
        5094
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4420": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5077,
        5094
      ],
      "op": "GT",
      "path": "9"
    },
    "4421": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5074,
        5075
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "4423": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5070,
        5095
      ],
      "op": "SHL",
      "path": "9"
    },
    "4424": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5143,
        5152
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4425": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5143,
        5152
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4426": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5143,
        5152
      ],
      "op": "SHR",
      "path": "9"
    },
    "4427": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5216,
        5222
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFFFF"
    },
    "4430": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5210,
        5223
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4431": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5210,
        5223
      ],
      "op": "GT",
      "path": "9"
    },
    "4432": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5207,
        5208
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4434": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5203,
        5224
      ],
      "op": "SHL",
      "path": "9"
    },
    "4435": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5272,
        5281
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4436": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5272,
        5281
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4437": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5272,
        5281
      ],
      "op": "SHR",
      "path": "9"
    },
    "4438": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5345,
        5349
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4440": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5339,
        5350
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4441": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5339,
        5350
      ],
      "op": "GT",
      "path": "9"
    },
    "4442": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5336,
        5337
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "4444": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5332,
        5351
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4445": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5332,
        5351
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4446": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5332,
        5351
      ],
      "op": "SHL",
      "path": "9"
    },
    "4447": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5399,
        5408
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4448": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5399,
        5408
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4449": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5399,
        5408
      ],
      "op": "SHR",
      "path": "9"
    },
    "4450": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5472,
        5475
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xF"
    },
    "4452": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5466,
        5476
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4453": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5466,
        5476
      ],
      "op": "GT",
      "path": "9"
    },
    "4454": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5463,
        5464
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "4456": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5459,
        5477
      ],
      "op": "SHL",
      "path": "9"
    },
    "4457": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5525,
        5534
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4458": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5525,
        5534
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4459": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5525,
        5534
      ],
      "op": "SHR",
      "path": "9"
    },
    "4460": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5592,
        5602
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4461": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5592,
        5602
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4462": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5592,
        5602
      ],
      "op": "GT",
      "path": "9"
    },
    "4463": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5589,
        5590
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4465": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5585,
        5603
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4466": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5585,
        5603
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4467": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5585,
        5603
      ],
      "op": "SHL",
      "path": "9"
    },
    "4468": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5651,
        5660
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4469": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5651,
        5660
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4470": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5651,
        5660
      ],
      "op": "SHR",
      "path": "9"
    },
    "4471": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5651,
        5660
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "4472": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5711,
        5721
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4473": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5711,
        5721
      ],
      "op": "DUP9",
      "path": "9"
    },
    "4474": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5711,
        5721
      ],
      "op": "GT",
      "path": "9"
    },
    "4475": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4982,
        4992
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4476": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4982,
        4992
      ],
      "op": "OR",
      "path": "9"
    },
    "4477": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5115,
        5125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4478": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5115,
        5125
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4479": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5115,
        5125
      ],
      "op": "OR",
      "path": "9"
    },
    "4480": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5244,
        5254
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4481": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5244,
        5254
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4482": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5244,
        5254
      ],
      "op": "OR",
      "path": "9"
    },
    "4483": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5371,
        5381
      ],
      "op": "OR",
      "path": "9"
    },
    "4484": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5497,
        5507
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4485": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5497,
        5507
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4486": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5497,
        5507
      ],
      "op": "OR",
      "path": "9"
    },
    "4487": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5623,
        5633
      ],
      "op": "OR",
      "path": "9"
    },
    "4488": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5741,
        5751
      ],
      "op": "OR",
      "path": "9"
    },
    "4489": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5782,
        5785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "4491": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5775,
        5785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4492": {
      "branch": 251,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5775,
        5785
      ],
      "op": "LT",
      "path": "9"
    },
    "4493": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x119E"
    },
    "4496": {
      "branch": 251,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4497": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5807,
        5810
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 66,
      "value": "0x7F"
    },
    "4499": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5801,
        5804
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4500": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5801,
        5810
      ],
      "op": "SUB",
      "path": "9"
    },
    "4501": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5791,
        5796
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4502": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5791,
        5811
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4503": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5791,
        5811
      ],
      "op": "SHR",
      "path": "9"
    },
    "4504": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5787,
        5811
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4505": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5787,
        5811
      ],
      "op": "POP",
      "path": "9"
    },
    "4506": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11A8"
    },
    "4509": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4510": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4511": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5846,
        5849
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 67
    },
    "4512": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5840,
        5843
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7F"
    },
    "4514": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5840,
        5849
      ],
      "op": "SUB",
      "path": "9"
    },
    "4515": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5830,
        5835
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4516": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5830,
        5850
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4517": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5830,
        5850
      ],
      "op": "SHL",
      "path": "9"
    },
    "4518": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5826,
        5850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4519": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5826,
        5850
      ],
      "op": "POP",
      "path": "9"
    },
    "4520": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5771,
        5850
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4521": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5949,
        5958
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4522": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5949,
        5958
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4523": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5949,
        5958
      ],
      "op": "MUL",
      "path": "9"
    },
    "4524": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5944,
        5947
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7F"
    },
    "4526": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5940,
        5959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4527": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5940,
        5959
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4528": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5940,
        5959
      ],
      "op": "SHR",
      "path": "9"
    },
    "4529": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5981,
        5992
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4531": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5981,
        5992
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4532": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5981,
        5992
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4533": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5981,
        5992
      ],
      "op": "SHR",
      "path": "9"
    },
    "4534": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6053,
        6062
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4535": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6053,
        6062
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4536": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6053,
        6062
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4537": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6053,
        6062
      ],
      "op": "SHR",
      "path": "9"
    },
    "4538": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6118,
        6127
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4539": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6118,
        6127
      ],
      "op": "MUL",
      "path": "9"
    },
    "4540": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6109,
        6128
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4541": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6109,
        6128
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4542": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6109,
        6128
      ],
      "op": "SHR",
      "path": "9"
    },
    "4543": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6150,
        6161
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4544": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6150,
        6161
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4545": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6150,
        6161
      ],
      "op": "SHR",
      "path": "9"
    },
    "4546": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6222,
        6231
      ],
      "op": "SHR",
      "path": "9"
    },
    "4547": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6287,
        6296
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4548": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6287,
        6296
      ],
      "op": "MUL",
      "path": "9"
    },
    "4549": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6278,
        6297
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4550": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6278,
        6297
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4551": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6278,
        6297
      ],
      "op": "SHR",
      "path": "9"
    },
    "4552": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6319,
        6330
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4553": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6319,
        6330
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4554": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6319,
        6330
      ],
      "op": "SHR",
      "path": "9"
    },
    "4555": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6391,
        6400
      ],
      "op": "SHR",
      "path": "9"
    },
    "4556": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6456,
        6465
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4557": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6456,
        6465
      ],
      "op": "MUL",
      "path": "9"
    },
    "4558": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6447,
        6466
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4559": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6447,
        6466
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4560": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6447,
        6466
      ],
      "op": "SHR",
      "path": "9"
    },
    "4561": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6488,
        6499
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4562": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6488,
        6499
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4563": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6488,
        6499
      ],
      "op": "SHR",
      "path": "9"
    },
    "4564": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6560,
        6569
      ],
      "op": "SHR",
      "path": "9"
    },
    "4565": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6625,
        6634
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4566": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6625,
        6634
      ],
      "op": "MUL",
      "path": "9"
    },
    "4567": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6616,
        6635
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4568": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6616,
        6635
      ],
      "op": "DUP7",
      "path": "9"
    },
    "4569": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6616,
        6635
      ],
      "op": "SHR",
      "path": "9"
    },
    "4570": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6657,
        6668
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4571": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6657,
        6668
      ],
      "op": "DUP7",
      "path": "9"
    },
    "4572": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6657,
        6668
      ],
      "op": "SHR",
      "path": "9"
    },
    "4573": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6729,
        6738
      ],
      "op": "SHR",
      "path": "9"
    },
    "4574": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6794,
        6803
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4575": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6794,
        6803
      ],
      "op": "MUL",
      "path": "9"
    },
    "4576": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6785,
        6804
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4577": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6785,
        6804
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4578": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6785,
        6804
      ],
      "op": "SHR",
      "path": "9"
    },
    "4579": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6826,
        6837
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4580": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6826,
        6837
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4581": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6826,
        6837
      ],
      "op": "SHR",
      "path": "9"
    },
    "4582": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6898,
        6907
      ],
      "op": "SHR",
      "path": "9"
    },
    "4583": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6963,
        6972
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4584": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6963,
        6972
      ],
      "op": "MUL",
      "path": "9"
    },
    "4585": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6954,
        6973
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4586": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6954,
        6973
      ],
      "op": "DUP9",
      "path": "9"
    },
    "4587": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6954,
        6973
      ],
      "op": "SHR",
      "path": "9"
    },
    "4588": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6995,
        7006
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4589": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6995,
        7006
      ],
      "op": "DUP9",
      "path": "9"
    },
    "4590": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6995,
        7006
      ],
      "op": "SHR",
      "path": "9"
    },
    "4591": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7067,
        7076
      ],
      "op": "SHR",
      "path": "9"
    },
    "4592": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7132,
        7141
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4593": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7132,
        7141
      ],
      "op": "MUL",
      "path": "9"
    },
    "4594": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7123,
        7142
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4595": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7123,
        7142
      ],
      "op": "DUP10",
      "path": "9"
    },
    "4596": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7123,
        7142
      ],
      "op": "SHR",
      "path": "9"
    },
    "4597": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7164,
        7175
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4598": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7164,
        7175
      ],
      "op": "DUP10",
      "path": "9"
    },
    "4599": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7164,
        7175
      ],
      "op": "SHR",
      "path": "9"
    },
    "4600": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7236,
        7245
      ],
      "op": "SHR",
      "path": "9"
    },
    "4601": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7301,
        7310
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4602": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7301,
        7310
      ],
      "op": "MUL",
      "path": "9"
    },
    "4603": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7292,
        7311
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4604": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7292,
        7311
      ],
      "op": "DUP11",
      "path": "9"
    },
    "4605": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7292,
        7311
      ],
      "op": "SHR",
      "path": "9"
    },
    "4606": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7333,
        7344
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4607": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7333,
        7344
      ],
      "op": "DUP11",
      "path": "9"
    },
    "4608": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7333,
        7344
      ],
      "op": "SHR",
      "path": "9"
    },
    "4609": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7405,
        7414
      ],
      "op": "SHR",
      "path": "9"
    },
    "4610": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7470,
        7479
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4611": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7470,
        7479
      ],
      "op": "MUL",
      "path": "9"
    },
    "4612": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7461,
        7480
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4613": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7461,
        7480
      ],
      "op": "DUP12",
      "path": "9"
    },
    "4614": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7461,
        7480
      ],
      "op": "SHR",
      "path": "9"
    },
    "4615": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7502,
        7513
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4616": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7502,
        7513
      ],
      "op": "DUP12",
      "path": "9"
    },
    "4617": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7502,
        7513
      ],
      "op": "SHR",
      "path": "9"
    },
    "4618": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7574,
        7583
      ],
      "op": "SHR",
      "path": "9"
    },
    "4619": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7639,
        7648
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4620": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7639,
        7648
      ],
      "op": "MUL",
      "path": "9"
    },
    "4621": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7630,
        7649
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4622": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7630,
        7649
      ],
      "op": "DUP13",
      "path": "9"
    },
    "4623": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7630,
        7649
      ],
      "op": "SHR",
      "path": "9"
    },
    "4624": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7671,
        7682
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4625": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7671,
        7682
      ],
      "op": "DUP13",
      "path": "9"
    },
    "4626": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7671,
        7682
      ],
      "op": "SHR",
      "path": "9"
    },
    "4627": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7743,
        7752
      ],
      "op": "SHR",
      "path": "9"
    },
    "4628": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7808,
        7817
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4629": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7808,
        7817
      ],
      "op": "MUL",
      "path": "9"
    },
    "4630": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7799,
        7818
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4631": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7799,
        7818
      ],
      "op": "DUP14",
      "path": "9"
    },
    "4632": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7799,
        7818
      ],
      "op": "SHR",
      "path": "9"
    },
    "4633": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7840,
        7851
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4634": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7840,
        7851
      ],
      "op": "DUP14",
      "path": "9"
    },
    "4635": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7840,
        7851
      ],
      "op": "SHR",
      "path": "9"
    },
    "4636": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7912,
        7921
      ],
      "op": "SHR",
      "path": "9"
    },
    "4637": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7977,
        7986
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4638": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7977,
        7986
      ],
      "op": "MUL",
      "path": "9"
    },
    "4639": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7968,
        7987
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4640": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7968,
        7987
      ],
      "op": "DUP15",
      "path": "9"
    },
    "4641": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7968,
        7987
      ],
      "op": "SHR",
      "path": "9"
    },
    "4642": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8009,
        8020
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "4643": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8009,
        8020
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4644": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8009,
        8020
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4645": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8009,
        8020
      ],
      "op": "SHR",
      "path": "9"
    },
    "4646": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8081,
        8090
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "4647": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8081,
        8090
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4648": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8081,
        8090
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "4649": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8081,
        8090
      ],
      "op": "SHR",
      "path": "9"
    },
    "4650": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8146,
        8155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4651": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8146,
        8155
      ],
      "op": "MUL",
      "path": "9"
    },
    "4652": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8137,
        8156
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "4653": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8137,
        8156
      ],
      "op": "DUP14",
      "path": "9"
    },
    "4654": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8137,
        8156
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4655": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8137,
        8156
      ],
      "op": "SHR",
      "path": "9"
    },
    "4656": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8137,
        8156
      ],
      "op": "SWAP15",
      "path": "9"
    },
    "4657": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5949,
        5958
      ],
      "op": "SWAP14",
      "path": "9"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4660": {
      "op": "NOT"
    },
    "4661": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5877,
        5894
      ],
      "op": "DUP16",
      "path": "9"
    },
    "4662": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5877,
        5894
      ],
      "op": "ADD",
      "path": "9"
    },
    "4663": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5899,
        5901
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4665": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5876,
        5901
      ],
      "op": "SHL",
      "path": "9"
    },
    "4666": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC0"
    },
    "4668": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4669": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4670": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4671": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "SHR",
      "path": "9"
    },
    "4672": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x8000000000000000"
    },
    "4681": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6024,
        6034
      ],
      "op": "AND",
      "path": "9"
    },
    "4682": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6014,
        6035
      ],
      "op": "OR",
      "path": "9"
    },
    "4683": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC1"
    },
    "4685": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "SWAP12",
      "path": "9"
    },
    "4686": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4687": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "SWAP12",
      "path": "9"
    },
    "4688": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "SHR",
      "path": "9"
    },
    "4689": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x4000000000000000"
    },
    "4698": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6193,
        6203
      ],
      "op": "AND",
      "path": "9"
    },
    "4699": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6183,
        6204
      ],
      "op": "SWAP11",
      "path": "9"
    },
    "4700": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6183,
        6204
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4701": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6183,
        6204
      ],
      "op": "SWAP11",
      "path": "9"
    },
    "4702": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6183,
        6204
      ],
      "op": "OR",
      "path": "9"
    },
    "4703": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC2"
    },
    "4705": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "SWAP10",
      "path": "9"
    },
    "4706": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4707": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "SWAP10",
      "path": "9"
    },
    "4708": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "SHR",
      "path": "9"
    },
    "4709": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x2000000000000000"
    },
    "4718": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6362,
        6372
      ],
      "op": "AND",
      "path": "9"
    },
    "4719": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6352,
        6373
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "4720": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6352,
        6373
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4721": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6352,
        6373
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "4722": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6352,
        6373
      ],
      "op": "OR",
      "path": "9"
    },
    "4723": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC3"
    },
    "4725": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "4726": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4727": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "4728": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "SHR",
      "path": "9"
    },
    "4729": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x1000000000000000"
    },
    "4738": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6531,
        6541
      ],
      "op": "AND",
      "path": "9"
    },
    "4739": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6521,
        6542
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4740": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6521,
        6542
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4741": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6521,
        6542
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "4742": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6521,
        6542
      ],
      "op": "OR",
      "path": "9"
    },
    "4743": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC4"
    },
    "4745": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "4746": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4747": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "SWAP6",
      "path": "9"
    },
    "4748": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "SHR",
      "path": "9"
    },
    "4749": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x800000000000000"
    },
    "4758": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6700,
        6710
      ],
      "op": "AND",
      "path": "9"
    },
    "4759": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6690,
        6711
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4760": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6690,
        6711
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4761": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6690,
        6711
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4762": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6690,
        6711
      ],
      "op": "OR",
      "path": "9"
    },
    "4763": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC5"
    },
    "4765": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4766": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4767": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4768": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "SHR",
      "path": "9"
    },
    "4769": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x400000000000000"
    },
    "4778": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6869,
        6879
      ],
      "op": "AND",
      "path": "9"
    },
    "4779": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6859,
        6880
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4780": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6859,
        6880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4781": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6859,
        6880
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4782": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        6859,
        6880
      ],
      "op": "OR",
      "path": "9"
    },
    "4783": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC6"
    },
    "4785": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4786": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4787": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4788": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "SHR",
      "path": "9"
    },
    "4789": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x200000000000000"
    },
    "4798": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7038,
        7048
      ],
      "op": "AND",
      "path": "9"
    },
    "4799": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7028,
        7049
      ],
      "op": "OR",
      "path": "9"
    },
    "4800": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC7"
    },
    "4802": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4803": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4804": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4805": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "SHR",
      "path": "9"
    },
    "4806": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "PUSH8",
      "path": "9",
      "value": "0x100000000000000"
    },
    "4815": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7207,
        7217
      ],
      "op": "AND",
      "path": "9"
    },
    "4816": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7197,
        7218
      ],
      "op": "OR",
      "path": "9"
    },
    "4817": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC8"
    },
    "4819": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4820": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4821": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4822": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "SHR",
      "path": "9"
    },
    "4823": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x80000000000000"
    },
    "4831": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7376,
        7386
      ],
      "op": "AND",
      "path": "9"
    },
    "4832": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7366,
        7387
      ],
      "op": "OR",
      "path": "9"
    },
    "4833": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC9"
    },
    "4835": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4836": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4837": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4838": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "SHR",
      "path": "9"
    },
    "4839": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x40000000000000"
    },
    "4847": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7545,
        7555
      ],
      "op": "AND",
      "path": "9"
    },
    "4848": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7535,
        7556
      ],
      "op": "OR",
      "path": "9"
    },
    "4849": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xCA"
    },
    "4851": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4852": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4853": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4854": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "SHR",
      "path": "9"
    },
    "4855": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x20000000000000"
    },
    "4863": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7714,
        7724
      ],
      "op": "AND",
      "path": "9"
    },
    "4864": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7704,
        7725
      ],
      "op": "OR",
      "path": "9"
    },
    "4865": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xCB"
    },
    "4867": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4868": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4869": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4870": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "SHR",
      "path": "9"
    },
    "4871": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x10000000000000"
    },
    "4879": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7883,
        7893
      ],
      "op": "AND",
      "path": "9"
    },
    "4880": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        7873,
        7894
      ],
      "op": "OR",
      "path": "9"
    },
    "4881": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xCC"
    },
    "4883": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4884": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4885": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4886": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "SHR",
      "path": "9"
    },
    "4887": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x8000000000000"
    },
    "4895": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8052,
        8062
      ],
      "op": "AND",
      "path": "9"
    },
    "4896": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8042,
        8063
      ],
      "op": "OR",
      "path": "9"
    },
    "4897": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xCD"
    },
    "4899": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4900": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4901": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4902": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "SHR",
      "path": "9"
    },
    "4903": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "PUSH7",
      "path": "9",
      "value": "0x4000000000000"
    },
    "4911": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8221,
        8231
      ],
      "op": "AND",
      "path": "9"
    },
    "4912": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8211,
        8232
      ],
      "op": "OR",
      "path": "9"
    },
    "4913": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8283,
        8307
      ],
      "op": "PUSH10",
      "path": "9",
      "value": "0x3627A301D71055774C85"
    },
    "4924": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8275,
        8307
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4925": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8275,
        8307
      ],
      "op": "MUL",
      "path": "9"
    },
    "4926": {
      "op": "PUSH16",
      "value": "0x28F6481AB7F045A5AF012A19D003AA9"
    },
    "4943": {
      "op": "NOT"
    },
    "4944": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8359,
        8412
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4945": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8359,
        8412
      ],
      "op": "ADD",
      "path": "9"
    },
    "4946": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        5891,
        5894
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "4948": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8358,
        8420
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4949": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8358,
        8420
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4950": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8358,
        8420
      ],
      "op": "SAR",
      "path": "9"
    },
    "4951": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8358,
        8420
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4952": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8469,
        8508
      ],
      "op": "PUSH16",
      "path": "9",
      "value": "0xDB2DF09E81959A81455E260799A0632F"
    },
    "4969": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8453,
        8508
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4970": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8453,
        8508
      ],
      "op": "ADD",
      "path": "9"
    },
    "4971": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8452,
        8516
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4972": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8452,
        8516
      ],
      "op": "SAR",
      "path": "9"
    },
    "4973": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 68,
      "value": "0x2"
    },
    "4975": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4976": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4977": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "4978": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4979": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4980": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4981": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "SIGNEXTEND",
      "path": "9"
    },
    "4982": {
      "branch": 252,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8552
      ],
      "op": "EQ",
      "path": "9"
    },
    "4983": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13A9"
    },
    "4986": {
      "branch": 252,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4987": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8595,
        8607
      ],
      "op": "DUP9",
      "path": "9"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4994": {
      "op": "SHL"
    },
    "4995": {
      "op": "SUB"
    },
    "4996": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8607
      ],
      "op": "AND",
      "path": "9"
    },
    "4997": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8591
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x138D"
    },
    "5000": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8584,
        8590
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5001": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8583
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9EA"
    },
    "5004": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "jump": "i",
      "offset": [
        8565,
        8591
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5005": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8591
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5012": {
      "op": "SHL"
    },
    "5013": {
      "op": "SUB"
    },
    "5014": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8607
      ],
      "op": "AND",
      "path": "9"
    },
    "5015": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8607
      ],
      "op": "GT",
      "path": "9"
    },
    "5016": {
      "branch": 253,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8607
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5017": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13A2"
    },
    "5020": {
      "branch": 253,
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5021": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8619,
        8626
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5022": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13A4"
    },
    "5025": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5026": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5027": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8610,
        8616
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5028": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8565,
        8626
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5029": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x13AB"
    },
    "5032": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5033": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5034": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8555,
        8562
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5035": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8535,
        8626
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5036": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        8528,
        8626
      ],
      "op": "SWAP10",
      "path": "9"
    },
    "5037": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "offset": [
        4352,
        8633
      ],
      "op": "SWAP9",
      "path": "9"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "op": "POP"
    },
    "5040": {
      "op": "POP"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "op": "POP"
    },
    "5045": {
      "op": "POP"
    },
    "5046": {
      "op": "POP"
    },
    "5047": {
      "fn": "TickMath.getTickAtSqrtRatio",
      "jump": "o",
      "offset": [
        4352,
        8633
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5048": {
      "fn": "UniV3Calc.position",
      "offset": [
        1487,
        1647
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5049": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 69,
      "value": "0x2"
    },
    "5051": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "SIGNEXTEND",
      "path": "11"
    },
    "5052": {
      "fn": "UniV3Calc.position",
      "offset": [
        1602,
        1603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "5054": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5055": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5056": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "SAR",
      "path": "11"
    },
    "5057": {
      "fn": "UniV3Calc.position",
      "offset": [
        1594,
        1603
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5058": {
      "fn": "UniV3Calc.position",
      "offset": [
        1636,
        1639
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 70,
      "value": "0x100"
    },
    "5061": {
      "fn": "UniV3Calc.position",
      "offset": [
        1629,
        1639
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5062": {
      "fn": "UniV3Calc.position",
      "offset": [
        1629,
        1639
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5063": {
      "fn": "UniV3Calc.position",
      "offset": [
        1629,
        1639
      ],
      "op": "SMOD",
      "path": "11"
    },
    "5064": {
      "fn": "UniV3Calc.position",
      "offset": [
        1629,
        1639
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5065": {
      "fn": "UniV3Calc.position",
      "jump": "o",
      "offset": [
        1487,
        1647
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5066": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        669,
        1400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5067": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        731,
        738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5069": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        762,
        763
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 71
    },
    "5070": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        758,
        759
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5071": {
      "branch": 160,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        758,
        763
      ],
      "op": "GT",
      "path": "0"
    },
    "5072": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D8"
    },
    "5075": {
      "branch": 160,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5076": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5078": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5079": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5080": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        750,
        764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5085": {
      "op": "SHL"
    },
    "5086": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        779,
        780
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5087": {
      "branch": 161,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        779,
        819
      ],
      "op": "LT",
      "path": "0"
    },
    "5088": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        775,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13EB"
    },
    "5091": {
      "branch": 161,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        775,
        877
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5092": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        841,
        844
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x80"
    },
    "5094": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        835,
        844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5095": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        835,
        844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5096": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        835,
        844
      ],
      "op": "SHR",
      "path": "0"
    },
    "5097": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        835,
        844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5098": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        858,
        866
      ],
      "op": "ADD",
      "path": "0",
      "statement": 73
    },
    "5099": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        775,
        877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5100": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        895,
        914
      ],
      "op": "PUSH9",
      "path": "0",
      "value": "0x10000000000000000"
    },
    "5110": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        890,
        891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5111": {
      "branch": 162,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        890,
        914
      ],
      "op": "LT",
      "path": "0"
    },
    "5112": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        886,
        970
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1403"
    },
    "5115": {
      "branch": 162,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        886,
        970
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5116": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        936,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 74,
      "value": "0x40"
    },
    "5118": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        930,
        938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5119": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        930,
        938
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5120": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        930,
        938
      ],
      "op": "SHR",
      "path": "0"
    },
    "5121": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        930,
        938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5122": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        952,
        959
      ],
      "op": "ADD",
      "path": "0",
      "statement": 75
    },
    "5123": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        886,
        970
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5124": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        988,
        999
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "5130": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        983,
        984
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5131": {
      "branch": 163,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        983,
        999
      ],
      "op": "LT",
      "path": "0"
    },
    "5132": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        979,
        1055
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1417"
    },
    "5135": {
      "branch": 163,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        979,
        1055
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5136": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1021,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x20"
    },
    "5138": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1015,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5139": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1015,
        1023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5140": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1015,
        1023
      ],
      "op": "SHR",
      "path": "0"
    },
    "5141": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1015,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5142": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1037,
        1044
      ],
      "op": "ADD",
      "path": "0",
      "statement": 77
    },
    "5143": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        979,
        1055
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5144": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1073,
        1080
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "5148": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1068,
        1069
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5149": {
      "branch": 164,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1068,
        1080
      ],
      "op": "LT",
      "path": "0"
    },
    "5150": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1064,
        1136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1429"
    },
    "5153": {
      "branch": 164,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1064,
        1136
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5154": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1102,
        1104
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0x10"
    },
    "5156": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1096,
        1104
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5157": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1096,
        1104
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5158": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1096,
        1104
      ],
      "op": "SHR",
      "path": "0"
    },
    "5159": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1096,
        1104
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5160": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1118,
        1125
      ],
      "op": "ADD",
      "path": "0",
      "statement": 79
    },
    "5161": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1064,
        1136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5162": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1154,
        1159
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "5165": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1149,
        1150
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5166": {
      "branch": 165,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1149,
        1159
      ],
      "op": "LT",
      "path": "0"
    },
    "5167": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1145,
        1213
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143A"
    },
    "5170": {
      "branch": 165,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1145,
        1213
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5171": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1181,
        1182
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x8"
    },
    "5173": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1175,
        1182
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5174": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1175,
        1182
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5175": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1175,
        1182
      ],
      "op": "SHR",
      "path": "0"
    },
    "5176": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1175,
        1182
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5177": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1196,
        1202
      ],
      "op": "ADD",
      "path": "0",
      "statement": 81
    },
    "5178": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1145,
        1213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5179": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1231,
        1235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "5181": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1226,
        1227
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5182": {
      "branch": 166,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1226,
        1235
      ],
      "op": "LT",
      "path": "0"
    },
    "5183": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1222,
        1289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144A"
    },
    "5186": {
      "branch": 166,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1222,
        1289
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5187": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1257,
        1258
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x4"
    },
    "5189": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1251,
        1258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5190": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1251,
        1258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5191": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1251,
        1258
      ],
      "op": "SHR",
      "path": "0"
    },
    "5192": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1251,
        1258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5193": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1272,
        1278
      ],
      "op": "ADD",
      "path": "0",
      "statement": 83
    },
    "5194": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1222,
        1289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5195": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1307,
        1310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5197": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1302,
        1303
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5198": {
      "branch": 167,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1302,
        1310
      ],
      "op": "LT",
      "path": "0"
    },
    "5199": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1298,
        1364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145A"
    },
    "5202": {
      "branch": 167,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1298,
        1364
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5203": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1332,
        1333
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 84,
      "value": "0x2"
    },
    "5205": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1326,
        1333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5206": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1326,
        1333
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5207": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1326,
        1333
      ],
      "op": "SHR",
      "path": "0"
    },
    "5208": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1326,
        1333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5209": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1347,
        1353
      ],
      "op": "ADD",
      "path": "0",
      "statement": 85
    },
    "5210": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1298,
        1364
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5211": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1382,
        1385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5213": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1377,
        1378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5214": {
      "branch": 168,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1377,
        1385
      ],
      "op": "LT",
      "path": "0"
    },
    "5215": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1373,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1466"
    },
    "5218": {
      "branch": 168,
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1373,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5219": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1392,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x1"
    },
    "5221": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1387,
        1393
      ],
      "op": "ADD",
      "path": "0"
    },
    "5222": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        1373,
        1393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5223": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        669,
        1400
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5224": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        669,
        1400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5225": {
      "fn": "BitMath.mostSignificantBit",
      "offset": [
        669,
        1400
      ],
      "op": "POP",
      "path": "0"
    },
    "5226": {
      "fn": "BitMath.mostSignificantBit",
      "jump": "o",
      "offset": [
        669,
        1400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5227": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1891,
        2785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5228": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1954,
        1961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5230": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1985,
        1986
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 87
    },
    "5231": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1981,
        1982
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5232": {
      "branch": 169,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1981,
        1986
      ],
      "op": "GT",
      "path": "0"
    },
    "5233": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1479"
    },
    "5236": {
      "branch": 169,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5237": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5239": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5240": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5241": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1973,
        1987
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2002,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 88,
      "value": "0xFF"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "op": "SUB"
    },
    "5253": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2019,
        2040
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5254": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2019,
        2040
      ],
      "op": "AND",
      "path": "0"
    },
    "5255": {
      "branch": 170,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2019,
        2044
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5256": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1494"
    },
    "5259": {
      "branch": 170,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5262": {
      "op": "NOT"
    },
    "5263": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2060,
        2068
      ],
      "op": "ADD",
      "path": "0",
      "statement": 89
    },
    "5264": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149C"
    },
    "5267": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5268": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5269": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2105,
        2108
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 90,
      "value": "0x80"
    },
    "5271": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2099,
        2108
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5272": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2099,
        2108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5273": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2099,
        2108
      ],
      "op": "SHR",
      "path": "0"
    },
    "5274": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2099,
        2108
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5275": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2099,
        2108
      ],
      "op": "POP",
      "path": "0"
    },
    "5276": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2015,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5277": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2136,
        2152
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5286": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2132,
        2152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5287": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2132,
        2152
      ],
      "op": "AND",
      "path": "0"
    },
    "5288": {
      "branch": 171,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2132,
        2156
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5289": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B5"
    },
    "5292": {
      "branch": 171,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5295": {
      "op": "NOT"
    },
    "5296": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2172,
        2179
      ],
      "op": "ADD",
      "path": "0",
      "statement": 91
    },
    "5297": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BD"
    },
    "5300": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5301": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5302": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2216,
        2218
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x40"
    },
    "5304": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2210,
        2218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5305": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2210,
        2218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5306": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2210,
        2218
      ],
      "op": "SHR",
      "path": "0"
    },
    "5307": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2210,
        2218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5308": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2210,
        2218
      ],
      "op": "POP",
      "path": "0"
    },
    "5309": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2128,
        2229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5310": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2246,
        2262
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5315": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2242,
        2262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5316": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2242,
        2262
      ],
      "op": "AND",
      "path": "0"
    },
    "5317": {
      "branch": 172,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2242,
        2266
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5318": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D2"
    },
    "5321": {
      "branch": 172,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5324": {
      "op": "NOT"
    },
    "5325": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2282,
        2289
      ],
      "op": "ADD",
      "path": "0",
      "statement": 93
    },
    "5326": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14DA"
    },
    "5329": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5330": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5331": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2326,
        2328
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x20"
    },
    "5333": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2320,
        2328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5334": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2320,
        2328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5335": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2320,
        2328
      ],
      "op": "SHR",
      "path": "0"
    },
    "5336": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2320,
        2328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5337": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2320,
        2328
      ],
      "op": "POP",
      "path": "0"
    },
    "5338": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2238,
        2339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5339": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2356,
        2372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "5342": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2352,
        2372
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5343": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2352,
        2372
      ],
      "op": "AND",
      "path": "0"
    },
    "5344": {
      "branch": 173,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2352,
        2376
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5345": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14ED"
    },
    "5348": {
      "branch": 173,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5351": {
      "op": "NOT"
    },
    "5352": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2392,
        2399
      ],
      "op": "ADD",
      "path": "0",
      "statement": 95
    },
    "5353": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F5"
    },
    "5356": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5357": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5358": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2436,
        2438
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 96,
      "value": "0x10"
    },
    "5360": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2430,
        2438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5361": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2430,
        2438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5362": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2430,
        2438
      ],
      "op": "SHR",
      "path": "0"
    },
    "5363": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2430,
        2438
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5364": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2430,
        2438
      ],
      "op": "POP",
      "path": "0"
    },
    "5365": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2348,
        2449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5366": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2466,
        2481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "5368": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2462,
        2481
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5369": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2462,
        2481
      ],
      "op": "AND",
      "path": "0"
    },
    "5370": {
      "branch": 174,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2462,
        2485
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5371": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1507"
    },
    "5374": {
      "branch": 174,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "5377": {
      "op": "NOT"
    },
    "5378": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2501,
        2507
      ],
      "op": "ADD",
      "path": "0",
      "statement": 97
    },
    "5379": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150F"
    },
    "5382": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5383": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5384": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2544,
        2545
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x8"
    },
    "5386": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2538,
        2545
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5387": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2538,
        2545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5388": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2538,
        2545
      ],
      "op": "SHR",
      "path": "0"
    },
    "5389": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2538,
        2545
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5390": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2538,
        2545
      ],
      "op": "POP",
      "path": "0"
    },
    "5391": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2458,
        2556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5392": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2573,
        2576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "5394": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2569,
        2576
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5395": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2569,
        2576
      ],
      "op": "AND",
      "path": "0"
    },
    "5396": {
      "branch": 175,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2569,
        2580
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5397": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1521"
    },
    "5400": {
      "branch": 175,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5403": {
      "op": "NOT"
    },
    "5404": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2596,
        2602
      ],
      "op": "ADD",
      "path": "0",
      "statement": 99
    },
    "5405": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1529"
    },
    "5408": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5409": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5410": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2639,
        2640
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 100,
      "value": "0x4"
    },
    "5412": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2633,
        2640
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5413": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2633,
        2640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5414": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2633,
        2640
      ],
      "op": "SHR",
      "path": "0"
    },
    "5415": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2633,
        2640
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5416": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2633,
        2640
      ],
      "op": "POP",
      "path": "0"
    },
    "5417": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2565,
        2651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5418": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2668,
        2671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5420": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2664,
        2671
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5421": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2664,
        2671
      ],
      "op": "AND",
      "path": "0"
    },
    "5422": {
      "branch": 176,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2664,
        2675
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5423": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153B"
    },
    "5426": {
      "branch": 176,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "NOT"
    },
    "5430": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2691,
        2697
      ],
      "op": "ADD",
      "path": "0",
      "statement": 101
    },
    "5431": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1543"
    },
    "5434": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5435": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5436": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2734,
        2735
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 102,
      "value": "0x2"
    },
    "5438": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2728,
        2735
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5439": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2728,
        2735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5440": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2728,
        2735
      ],
      "op": "SHR",
      "path": "0"
    },
    "5441": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2728,
        2735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5442": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2728,
        2735
      ],
      "op": "POP",
      "path": "0"
    },
    "5443": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2660,
        2746
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5444": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2763,
        2766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5446": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2759,
        2766
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5447": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2759,
        2766
      ],
      "op": "AND",
      "path": "0"
    },
    "5448": {
      "branch": 177,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2759,
        2770
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5449": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2755,
        2778
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1466"
    },
    "5452": {
      "branch": 177,
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2755,
        2778
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5455": {
      "op": "NOT"
    },
    "5456": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        2772,
        2778
      ],
      "op": "ADD",
      "path": "0",
      "statement": 103
    },
    "5457": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1891,
        2785
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5458": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1891,
        2785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5459": {
      "fn": "BitMath.leastSignificantBit",
      "offset": [
        1891,
        2785
      ],
      "op": "POP",
      "path": "0"
    },
    "5460": {
      "fn": "BitMath.leastSignificantBit",
      "jump": "o",
      "offset": [
        1891,
        2785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5461": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5462": {
      "fn": "FullMath.mulDiv",
      "offset": [
        853,
        867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5464": {
      "fn": "FullMath.mulDiv",
      "offset": [
        853,
        867
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5465": {
      "fn": "FullMath.mulDiv",
      "offset": [
        853,
        867
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5468": {
      "op": "NOT"
    },
    "5469": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1360,
        1361
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5470": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1357,
        1358
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5471": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1350,
        1370
      ],
      "op": "MULMOD",
      "path": "2"
    },
    "5472": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1392,
        1401
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5473": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1392,
        1401
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5474": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1392,
        1401
      ],
      "op": "MUL",
      "path": "2"
    },
    "5475": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1392,
        1401
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5476": {
      "op": "POP"
    },
    "5477": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1443,
        1456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5478": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1443,
        1456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5479": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1443,
        1456
      ],
      "op": "LT",
      "path": "2"
    },
    "5480": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1427,
        1441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5481": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1427,
        1441
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5482": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1427,
        1441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5483": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1427,
        1441
      ],
      "op": "SUB",
      "path": "2"
    },
    "5484": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1423,
        1457
      ],
      "op": "SUB",
      "path": "2"
    },
    "5485": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1423,
        1457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5486": {
      "op": "POP"
    },
    "5487": {
      "branch": 178,
      "fn": "FullMath.mulDiv",
      "offset": [
        1539,
        1549
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5488": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1535,
        1714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158B"
    },
    "5491": {
      "branch": 178,
      "fn": "FullMath.mulDiv",
      "offset": [
        1535,
        1714
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5492": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1587,
        1588
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 104,
      "value": "0x0"
    },
    "5494": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1573,
        1584
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5495": {
      "branch": 179,
      "fn": "FullMath.mulDiv",
      "offset": [
        1573,
        1588
      ],
      "op": "GT",
      "path": "2"
    },
    "5496": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1580"
    },
    "5499": {
      "branch": 179,
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5500": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5502": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5503": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5504": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1565,
        1589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5505": {
      "op": "POP"
    },
    "5506": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1640,
        1663
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5507": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1640,
        1663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5508": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1640,
        1663
      ],
      "op": "DIV",
      "path": "2"
    },
    "5509": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1640,
        1663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1690,
        1703
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 105,
      "value": "0x15FE"
    },
    "5514": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1690,
        1703
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5515": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1535,
        1714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5516": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1841,
        1846
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 106
    },
    "5517": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1827,
        1838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5518": {
      "branch": 180,
      "fn": "FullMath.mulDiv",
      "offset": [
        1827,
        1846
      ],
      "op": "GT",
      "path": "2"
    },
    "5519": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1597"
    },
    "5522": {
      "branch": 180,
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5523": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5525": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5526": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5527": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1819,
        1847
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5528": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2124,
        2141
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5530": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2200,
        2211
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5531": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2197,
        2198
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5532": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2194,
        2195
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5533": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2187,
        2212
      ],
      "op": "MULMOD",
      "path": "2"
    },
    "5534": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5536": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5537": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5538": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "2"
    },
    "5539": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2567,
        2593
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5540": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2567,
        2593
      ],
      "op": "AND",
      "path": "2"
    },
    "5541": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2687,
        2709
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5542": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2687,
        2709
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5543": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2687,
        2709
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5544": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2687,
        2709
      ],
      "op": "DIV",
      "path": "2"
    },
    "5545": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2687,
        2709
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5546": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3490,
        3491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5548": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5550": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3486
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5551": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3486
      ],
      "op": "MUL",
      "path": "2"
    },
    "5552": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3470,
        3491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5553": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3470,
        3491
      ],
      "op": "XOR",
      "path": "2"
    },
    "5554": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3717,
        3734
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 107
    },
    "5555": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3717,
        3734
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5556": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3717,
        3734
      ],
      "op": "MUL",
      "path": "2"
    },
    "5557": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3713,
        3734
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5558": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3713,
        3734
      ],
      "op": "SUB",
      "path": "2"
    },
    "5559": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3706,
        3734
      ],
      "op": "MUL",
      "path": "2"
    },
    "5560": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3775,
        3792
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 108
    },
    "5561": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3775,
        3792
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5562": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3775,
        3792
      ],
      "op": "MUL",
      "path": "2"
    },
    "5563": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3771,
        3792
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5564": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3771,
        3792
      ],
      "op": "SUB",
      "path": "2"
    },
    "5565": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3764,
        3792
      ],
      "op": "MUL",
      "path": "2"
    },
    "5566": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3834,
        3851
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 109
    },
    "5567": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3834,
        3851
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5568": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3834,
        3851
      ],
      "op": "MUL",
      "path": "2"
    },
    "5569": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5570": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3830,
        3851
      ],
      "op": "SUB",
      "path": "2"
    },
    "5571": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3823,
        3851
      ],
      "op": "MUL",
      "path": "2"
    },
    "5572": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3893,
        3910
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 110
    },
    "5573": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3893,
        3910
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5574": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3893,
        3910
      ],
      "op": "MUL",
      "path": "2"
    },
    "5575": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3889,
        3910
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5576": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3889,
        3910
      ],
      "op": "SUB",
      "path": "2"
    },
    "5577": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3882,
        3910
      ],
      "op": "MUL",
      "path": "2"
    },
    "5578": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3952,
        3969
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 111
    },
    "5579": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3952,
        3969
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5580": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3952,
        3969
      ],
      "op": "MUL",
      "path": "2"
    },
    "5581": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3948,
        3969
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5582": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3948,
        3969
      ],
      "op": "SUB",
      "path": "2"
    },
    "5583": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3941,
        3969
      ],
      "op": "MUL",
      "path": "2"
    },
    "5584": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4012,
        4029
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 112
    },
    "5585": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4012,
        4029
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5586": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4012,
        4029
      ],
      "op": "MUL",
      "path": "2"
    },
    "5587": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4008,
        4029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5588": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4008,
        4029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5589": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4008,
        4029
      ],
      "op": "SUB",
      "path": "2"
    },
    "5590": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4001,
        4029
      ],
      "op": "MUL",
      "path": "2"
    },
    "5591": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3059,
        3071
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5592": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3059,
        3071
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5593": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3059,
        3071
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5594": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3059,
        3071
      ],
      "op": "SUB",
      "path": "2"
    },
    "5595": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3055,
        3078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5596": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3055,
        3078
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5597": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3055,
        3078
      ],
      "op": "DIV",
      "path": "2"
    },
    "5598": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3080,
        3081
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5600": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3051,
        3082
      ],
      "op": "ADD",
      "path": "2"
    },
    "5601": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2329,
        2349
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5602": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2329,
        2349
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5603": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2329,
        2349
      ],
      "op": "GT",
      "path": "2"
    },
    "5604": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2318,
        2350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5605": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2318,
        2350
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5606": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2318,
        2350
      ],
      "op": "SUB",
      "path": "2"
    },
    "5607": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3110,
        3122
      ],
      "op": "SWAP5",
      "path": "2",
      "statement": 113
    },
    "5608": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3110,
        3122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5609": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3110,
        3122
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5610": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3110,
        3122
      ],
      "op": "MUL",
      "path": "2"
    },
    "5611": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2372,
        2393
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5612": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2372,
        2393
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5613": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2372,
        2393
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5614": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2372,
        2393
      ],
      "op": "SUB",
      "path": "2"
    },
    "5615": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2815,
        2831
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5616": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2815,
        2831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5617": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2815,
        2831
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5618": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2815,
        2831
      ],
      "op": "DIV",
      "path": "2"
    },
    "5619": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3101,
        3122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5620": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3101,
        3122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5621": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3101,
        3122
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5622": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3101,
        3122
      ],
      "op": "OR",
      "path": "2"
    },
    "5623": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4476,
        4487
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 114
    },
    "5624": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4476,
        4487
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5625": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4476,
        4487
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5626": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4476,
        4487
      ],
      "op": "MUL",
      "path": "2"
    },
    "5627": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4476,
        4487
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "POP"
    },
    "5630": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5631": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5632": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5633": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "POP",
      "path": "2"
    },
    "5634": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "POP",
      "path": "2"
    },
    "5635": {
      "fn": "FullMath.mulDiv",
      "offset": [
        741,
        4517
      ],
      "op": "POP",
      "path": "2"
    },
    "5636": {
      "fn": "FullMath.mulDiv",
      "jump": "o",
      "offset": [
        741,
        4517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5637": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5638": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8891,
        8906
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5640": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8938,
        8951
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "op": "SUB"
    },
    "5649": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8922,
        8951
      ],
      "op": "AND",
      "path": "6"
    },
    "5650": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8922,
        8935
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5657": {
      "op": "SHL"
    },
    "5658": {
      "op": "SUB"
    },
    "5659": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8922,
        8951
      ],
      "op": "AND",
      "path": "6"
    },
    "5660": {
      "branch": 190,
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8922,
        8951
      ],
      "op": "GT",
      "path": "6"
    },
    "5661": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8918,
        9016
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5662": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8918,
        9016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1625"
    },
    "5665": {
      "branch": 190,
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8918,
        9016
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5666": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8987,
        9000
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 115
    },
    "5667": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8987,
        9000
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5668": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9002,
        9015
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5669": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8918,
        9016
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5670": {
      "branch": 191,
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9053
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 116
    },
    "5671": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1652"
    },
    "5674": {
      "branch": 191,
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9251
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5675": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9176,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164D"
    },
    "5678": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9192,
        9201
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5685": {
      "op": "SHL"
    },
    "5686": {
      "op": "SUB"
    },
    "5687": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9176,
        9251
      ],
      "op": "AND",
      "path": "6"
    },
    "5688": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9219,
        9232
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5689": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9203,
        9216
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5690": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9203,
        9232
      ],
      "op": "SUB",
      "path": "6"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5697": {
      "op": "SHL"
    },
    "5698": {
      "op": "SUB"
    },
    "5699": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9176,
        9251
      ],
      "op": "AND",
      "path": "6"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5704": {
      "op": "SHL"
    },
    "5705": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9176,
        9191
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1555"
    },
    "5708": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "jump": "i",
      "offset": [
        9176,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5709": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9176,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5710": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1675"
    },
    "5713": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5714": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9046,
        9251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5715": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9072,
        9157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1675"
    },
    "5718": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9098,
        9107
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5725": {
      "op": "SHL"
    },
    "5726": {
      "op": "SUB"
    },
    "5727": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9072,
        9157
      ],
      "op": "AND",
      "path": "6"
    },
    "5728": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9125,
        9138
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5729": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9109,
        9122
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5730": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9109,
        9138
      ],
      "op": "SUB",
      "path": "6"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5737": {
      "op": "SHL"
    },
    "5738": {
      "op": "SUB"
    },
    "5739": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9072,
        9157
      ],
      "op": "AND",
      "path": "6"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5744": {
      "op": "SHL"
    },
    "5745": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9072,
        9097
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "5748": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "jump": "i",
      "offset": [
        9072,
        9157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5749": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9072,
        9157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5750": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9027,
        9251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5751": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        9027,
        9251
      ],
      "op": "POP",
      "path": "6"
    },
    "5752": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5753": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5754": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5755": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "POP",
      "path": "6"
    },
    "5756": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "POP",
      "path": "6"
    },
    "5757": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "POP",
      "path": "6"
    },
    "5758": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "offset": [
        8726,
        9258
      ],
      "op": "POP",
      "path": "6"
    },
    "5759": {
      "fn": "SqrtPriceMath.getAmount1Delta",
      "jump": "o",
      "offset": [
        8726,
        9258
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5760": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7492,
        8271
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5761": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7657,
        7672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5763": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7704,
        7717
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5770": {
      "op": "SHL"
    },
    "5771": {
      "op": "SUB"
    },
    "5772": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7688,
        7717
      ],
      "op": "AND",
      "path": "6"
    },
    "5773": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7688,
        7701
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5780": {
      "op": "SHL"
    },
    "5781": {
      "op": "SUB"
    },
    "5782": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7688,
        7717
      ],
      "op": "AND",
      "path": "6"
    },
    "5783": {
      "branch": 192,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7688,
        7717
      ],
      "op": "GT",
      "path": "6"
    },
    "5784": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7684,
        7782
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5785": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7684,
        7782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A0"
    },
    "5788": {
      "branch": 192,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7684,
        7782
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5789": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7753,
        7766
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 117
    },
    "5790": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7753,
        7766
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5791": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7768,
        7781
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5792": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7684,
        7782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "op": "SUB"
    },
    "5804": {
      "offset": [
        307,
        309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "5806": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7814,
        7859
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5807": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7814,
        7859
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5808": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7814,
        7859
      ],
      "op": "SHL",
      "path": "6"
    },
    "5809": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7814,
        7859
      ],
      "op": "AND",
      "path": "6"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5816": {
      "op": "SHL"
    },
    "5817": {
      "op": "SUB"
    },
    "5818": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7890,
        7919
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5819": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7890,
        7919
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5820": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7890,
        7919
      ],
      "op": "SUB",
      "path": "6"
    },
    "5821": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7869,
        7919
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5822": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7869,
        7919
      ],
      "op": "AND",
      "path": "6"
    },
    "5823": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7869,
        7919
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5824": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7938,
        7955
      ],
      "op": "DUP8",
      "path": "6",
      "statement": 118
    },
    "5825": {
      "branch": 193,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7938,
        7955
      ],
      "op": "AND",
      "path": "6"
    },
    "5826": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16CA"
    },
    "5829": {
      "branch": 193,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5830": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5832": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5833": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5834": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7930,
        7956
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5835": {
      "branch": 194,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        7993
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 119
    },
    "5836": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        8264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16FA"
    },
    "5839": {
      "branch": 194,
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        8264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5840": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8251,
        8264
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5847": {
      "op": "SHL"
    },
    "5848": {
      "op": "SUB"
    },
    "5849": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "AND",
      "path": "6"
    },
    "5850": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8248
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16ED"
    },
    "5853": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8210,
        8220
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5854": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8222,
        8232
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5855": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8234,
        8247
      ],
      "op": "DUP10",
      "path": "6"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5862": {
      "op": "SHL"
    },
    "5863": {
      "op": "SUB"
    },
    "5864": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8248
      ],
      "op": "AND",
      "path": "6"
    },
    "5865": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8209
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1555"
    },
    "5868": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "jump": "i",
      "offset": [
        8194,
        8248
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5869": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8248
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5870": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5871": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F4"
    },
    "5874": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5875": {
      "dev": "Division by zero",
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "INVALID",
      "path": "6"
    },
    "5876": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5877": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8194,
        8264
      ],
      "op": "DIV",
      "path": "6"
    },
    "5878": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        8264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1720"
    },
    "5881": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        8264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5882": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7986,
        8264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5883": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8012,
        8175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1720"
    },
    "5886": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8058,
        8122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1711"
    },
    "5889": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8084,
        8094
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5890": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8096,
        8106
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5891": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8108,
        8121
      ],
      "op": "DUP10",
      "path": "6"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5898": {
      "op": "SHL"
    },
    "5899": {
      "op": "SUB"
    },
    "5900": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8058,
        8122
      ],
      "op": "AND",
      "path": "6"
    },
    "5901": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8058,
        8083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "5904": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "jump": "i",
      "offset": [
        8058,
        8122
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5905": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8058,
        8122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5906": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8144,
        8157
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5913": {
      "op": "SHL"
    },
    "5914": {
      "op": "SUB"
    },
    "5915": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8012,
        8175
      ],
      "op": "AND",
      "path": "6"
    },
    "5916": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8012,
        8036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FD"
    },
    "5919": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "jump": "i",
      "offset": [
        8012,
        8175
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5920": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        8012,
        8175
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5921": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7967,
        8264
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "5922": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "offset": [
        7492,
        8271
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "op": "POP"
    },
    "5927": {
      "op": "POP"
    },
    "5928": {
      "op": "POP"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "fn": "SqrtPriceMath.getAmount0Delta",
      "jump": "o",
      "offset": [
        7492,
        8271
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5931": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5298,
        5848
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5932": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5466,
        5482
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5934": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5513,
        5514
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 120
    },
    "5935": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5502,
        5510
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5502,
        5514
      ],
      "op": "AND",
      "path": "6"
    },
    "5945": {
      "branch": 195,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5502,
        5514
      ],
      "op": "GT",
      "path": "6"
    },
    "5946": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1742"
    },
    "5949": {
      "branch": 195,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5950": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5952": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5953": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5954": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5494,
        5515
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5955": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5545,
        5546
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 121,
      "value": "0x0"
    },
    "5957": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5533,
        5542
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5533,
        5546
      ],
      "op": "AND",
      "path": "6"
    },
    "5967": {
      "branch": 196,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5533,
        5546
      ],
      "op": "GT",
      "path": "6"
    },
    "5968": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1758"
    },
    "5971": {
      "branch": 196,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5972": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5974": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5975": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "REVERT",
      "path": "6"
    },
    "5976": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5525,
        5547
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5977": {
      "branch": 197,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5643,
        5653
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 122
    },
    "5978": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5643,
        5841
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176A"
    },
    "5981": {
      "branch": 197,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5643,
        5841
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5982": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5765,
        5841
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164D"
    },
    "5985": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5805,
        5813
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5986": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5815,
        5824
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5987": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5826,
        5834
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5988": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5836,
        5840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5990": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5765,
        5804
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1808"
    },
    "5993": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "jump": "i",
      "offset": [
        5765,
        5841
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5994": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5643,
        5841
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5995": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5672,
        5746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1675"
    },
    "5998": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5710,
        5718
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5999": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5720,
        5729
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6000": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5731,
        5739
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6001": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5741,
        5745
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6003": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "offset": [
        5672,
        5709
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E9"
    },
    "6006": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromInput",
      "jump": "i",
      "offset": [
        5672,
        5746
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6007": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6394,
        6944
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6008": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6564,
        6580
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6010": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6611,
        6612
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 123
    },
    "6011": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6600,
        6608
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6018": {
      "op": "SHL"
    },
    "6019": {
      "op": "SUB"
    },
    "6020": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6600,
        6612
      ],
      "op": "AND",
      "path": "6"
    },
    "6021": {
      "branch": 198,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6600,
        6612
      ],
      "op": "GT",
      "path": "6"
    },
    "6022": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x178E"
    },
    "6025": {
      "branch": 198,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6026": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6028": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6029": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6030": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6592,
        6613
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6031": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6643,
        6644
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 124,
      "value": "0x0"
    },
    "6033": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6631,
        6640
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6040": {
      "op": "SHL"
    },
    "6041": {
      "op": "SUB"
    },
    "6042": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6631,
        6644
      ],
      "op": "AND",
      "path": "6"
    },
    "6043": {
      "branch": 199,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6631,
        6644
      ],
      "op": "GT",
      "path": "6"
    },
    "6044": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17A4"
    },
    "6047": {
      "branch": 199,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6048": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6050": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6051": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6052": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6623,
        6645
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6053": {
      "branch": 200,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6735,
        6745
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 125
    },
    "6054": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6735,
        6937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17B6"
    },
    "6057": {
      "branch": 200,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6735,
        6937
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6058": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6861,
        6937
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164D"
    },
    "6061": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6899,
        6907
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6062": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6909,
        6918
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6063": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6920,
        6929
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6064": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6931,
        6936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6066": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6861,
        6898
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E9"
    },
    "6069": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "jump": "i",
      "offset": [
        6861,
        6937
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6070": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6735,
        6937
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6071": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6764,
        6842
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1675"
    },
    "6074": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6804,
        6812
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6075": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6814,
        6823
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6076": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6825,
        6834
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6077": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6836,
        6841
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6079": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "offset": [
        6764,
        6803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1808"
    },
    "6082": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromOutput",
      "jump": "i",
      "offset": [
        6764,
        6842
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6083": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6084": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4921,
        4935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6086": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4956,
        4981
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 126,
      "value": "0x17D0"
    },
    "6089": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4963,
        4964
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6090": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4966,
        4967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6091": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4969,
        4980
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6092": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4956,
        4962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1555"
    },
    "6095": {
      "fn": "FullMath.mulDivRoundingUp",
      "jump": "i",
      "offset": [
        4956,
        4981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6096": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4956,
        4981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6097": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4947,
        4981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6098": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4947,
        4981
      ],
      "op": "POP",
      "path": "2"
    },
    "6099": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5023,
        5024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6101": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5008,
        5019
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6102": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6103": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17DC"
    },
    "6106": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6107": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "INVALID",
      "path": "2"
    },
    "6108": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6109": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5005,
        5006
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6110": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5002,
        5003
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6111": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5020
      ],
      "op": "MULMOD",
      "path": "2"
    },
    "6112": {
      "branch": 181,
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4995,
        5024
      ],
      "op": "GT",
      "path": "2"
    },
    "6113": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4991,
        5108
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6114": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4991,
        5108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FE"
    },
    "6117": {
      "branch": 181,
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4991,
        5108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6120": {
      "op": "NOT"
    },
    "6121": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5048,
        5054
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 127
    },
    "6122": {
      "branch": 182,
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5048,
        5074
      ],
      "op": "LT",
      "path": "2"
    },
    "6123": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F3"
    },
    "6126": {
      "branch": 182,
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6127": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6129": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6130": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6131": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5040,
        5075
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6132": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5089,
        5097
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 128,
      "value": "0x1"
    },
    "6134": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        5089,
        5097
      ],
      "op": "ADD",
      "path": "2"
    },
    "6135": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6136": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6137": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "POP",
      "path": "2"
    },
    "6138": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "POP",
      "path": "2"
    },
    "6139": {
      "fn": "FullMath.mulDivRoundingUp",
      "offset": [
        4799,
        5114
      ],
      "op": "POP",
      "path": "2"
    },
    "6140": {
      "fn": "FullMath.mulDivRoundingUp",
      "jump": "o",
      "offset": [
        4799,
        5114
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6141": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        490,
        655
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6142": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        611,
        620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6143": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        611,
        620
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6144": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        611,
        620
      ],
      "op": "DIV",
      "path": "10"
    },
    "6145": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        625,
        634
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6146": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        625,
        634
      ],
      "op": "MOD",
      "path": "10"
    },
    "6147": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        622,
        638
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6148": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        622,
        638
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6149": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        607,
        639
      ],
      "op": "ADD",
      "path": "10"
    },
    "6150": {
      "fn": "UnsafeMath.divRoundingUp",
      "offset": [
        607,
        639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6151": {
      "fn": "UnsafeMath.divRoundingUp",
      "jump": "o",
      "offset": [
        588,
        649
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6152": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3596,
        4749
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6153": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3769,
        3776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6155": {
      "branch": 201,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3946,
        3949
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6156": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3942,
        4743
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6157": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3942,
        4743
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x187B"
    },
    "6160": {
      "branch": 201,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3942,
        4743
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6161": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3965,
        3981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6169": {
      "op": "SHL"
    },
    "6170": {
      "op": "SUB"
    },
    "6171": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4049
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6172": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4049
      ],
      "op": "GT",
      "path": "6"
    },
    "6173": {
      "branch": 202,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4049
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6174": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183E"
    },
    "6177": {
      "branch": 202,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6178": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4150,
        4202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1839"
    },
    "6181": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4166,
        4172
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6186": {
      "op": "SHL"
    },
    "6187": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4192,
        4201
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6194": {
      "op": "SHL"
    },
    "6195": {
      "op": "SUB"
    },
    "6196": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4150,
        4202
      ],
      "op": "AND",
      "path": "6"
    },
    "6197": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4150,
        4165
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1555"
    },
    "6200": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "jump": "i",
      "offset": [
        4150,
        4202
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6201": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4150,
        4202
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6202": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1856"
    },
    "6205": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6206": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6213": {
      "op": "SHL"
    },
    "6214": {
      "op": "SUB"
    },
    "6215": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6216": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "AND",
      "path": "6"
    },
    "6217": {
      "offset": [
        307,
        309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "6219": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4077,
        4110
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6220": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4077,
        4110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6221": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4077,
        4110
      ],
      "op": "SHL",
      "path": "6"
    },
    "6222": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6223": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1854"
    },
    "6226": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6227": {
      "dev": "Division by zero",
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "INVALID",
      "path": "6"
    },
    "6228": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6229": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4076,
        4123
      ],
      "op": "DIV",
      "path": "6"
    },
    "6230": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4022,
        4202
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6231": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3965,
        4220
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6232": {
      "op": "POP"
    },
    "6233": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4285
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 129,
      "value": "0x1873"
    },
    "6236": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4273
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186E"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6245": {
      "op": "SHL"
    },
    "6246": {
      "op": "SUB"
    },
    "6247": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4259
      ],
      "op": "DUP9",
      "path": "6"
    },
    "6248": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4259
      ],
      "op": "AND",
      "path": "6"
    },
    "6249": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3965,
        4220
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6250": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4263
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19CC"
    },
    "6253": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "jump": "i",
      "offset": [
        4242,
        4273
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6254": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4273
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6255": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DC"
    },
    "6258": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "jump": "i",
      "offset": [
        4242,
        4285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6259": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4242,
        4285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6260": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4235,
        4285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6261": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4235,
        4285
      ],
      "op": "POP",
      "path": "6"
    },
    "6262": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4235,
        4285
      ],
      "op": "POP",
      "path": "6"
    },
    "6263": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4235,
        4285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1678"
    },
    "6266": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4235,
        4285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6267": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        3942,
        4743
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6268": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4316,
        4332
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6276": {
      "op": "SHL"
    },
    "6277": {
      "op": "SUB"
    },
    "6278": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4400
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6279": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4400
      ],
      "op": "GT",
      "path": "6"
    },
    "6280": {
      "branch": 203,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4400
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6281": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18A9"
    },
    "6284": {
      "branch": 203,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4586
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6285": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4524,
        4586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18A4"
    },
    "6288": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4550,
        4556
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6293": {
      "op": "SHL"
    },
    "6294": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4576,
        4585
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "op": "SUB"
    },
    "6303": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4524,
        4586
      ],
      "op": "AND",
      "path": "6"
    },
    "6304": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4524,
        4549
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "6307": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "jump": "i",
      "offset": [
        4524,
        4586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6308": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4524,
        4586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6309": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C0"
    },
    "6312": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6313": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4373,
        4586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6314": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4427,
        4497
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C0"
    },
    "6317": {
      "offset": [
        307,
        309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "6319": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4452,
        4485
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6320": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4452,
        4485
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6321": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4452,
        4485
      ],
      "op": "SHL",
      "path": "6"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6328": {
      "op": "SHL"
    },
    "6329": {
      "op": "SUB"
    },
    "6330": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4427,
        4497
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6331": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4427,
        4497
      ],
      "op": "AND",
      "path": "6"
    },
    "6332": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4427,
        4451
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FD"
    },
    "6335": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "jump": "i",
      "offset": [
        4427,
        4497
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6336": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4427,
        4497
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6337": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4316,
        4604
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6338": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4316,
        4604
      ],
      "op": "POP",
      "path": "6"
    },
    "6339": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4638,
        4646
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 130
    },
    "6340": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4627,
        4635
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "op": "SUB"
    },
    "6349": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4627,
        4646
      ],
      "op": "AND",
      "path": "6"
    },
    "6350": {
      "branch": 204,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4627,
        4646
      ],
      "op": "GT",
      "path": "6"
    },
    "6351": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D7"
    },
    "6354": {
      "branch": 204,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6355": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6357": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6358": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6359": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4619,
        4647
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6366": {
      "op": "SHL"
    },
    "6367": {
      "op": "SUB"
    },
    "6368": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4712,
        4731
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 131
    },
    "6369": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4712,
        4731
      ],
      "op": "AND",
      "path": "6"
    },
    "6370": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4712,
        4731
      ],
      "op": "SUB",
      "path": "6"
    },
    "6371": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4712,
        4731
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6372": {
      "op": "POP"
    },
    "6373": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4697,
        4732
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1678"
    },
    "6376": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown",
      "offset": [
        4697,
        4732
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6377": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1404,
        2770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6378": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1575,
        1582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6380": {
      "branch": 205,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1710,
        1721
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6381": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1706,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18F7"
    },
    "6384": {
      "branch": 205,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1706,
        1738
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6385": {
      "op": "POP"
    },
    "6386": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1730,
        1738
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 132
    },
    "6387": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1723,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1678"
    },
    "6390": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1723,
        1738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6391": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1706,
        1738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6401": {
      "op": "SHL"
    },
    "6402": {
      "op": "SUB"
    },
    "6403": {
      "offset": [
        307,
        309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "6405": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1769,
        1814
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6406": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1769,
        1814
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6407": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1769,
        1814
      ],
      "op": "SHL",
      "path": "6"
    },
    "6408": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1769,
        1814
      ],
      "op": "AND",
      "path": "6"
    },
    "6409": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1825,
        2764
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6410": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1825,
        2764
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6411": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1825,
        2764
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1985"
    },
    "6414": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1825,
        2764
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6421": {
      "op": "SHL"
    },
    "6422": {
      "op": "SUB"
    },
    "6423": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1931
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6424": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1931
      ],
      "op": "AND",
      "path": "6"
    },
    "6425": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1892,
        1909
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6426": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1892,
        1909
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6427": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1892,
        1909
      ],
      "op": "MUL",
      "path": "6"
    },
    "6428": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1892,
        1909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6429": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1913,
        1919
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6430": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1892,
        1909
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6431": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1913,
        1919
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6432": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1925"
    },
    "6435": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1919
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6436": {
      "dev": "Division by zero",
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1919
      ],
      "op": "INVALID",
      "path": "6"
    },
    "6437": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6438": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1919
      ],
      "op": "DIV",
      "path": "6"
    },
    "6439": {
      "branch": 206,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1881,
        1931
      ],
      "op": "EQ",
      "path": "6"
    },
    "6440": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1877,
        2200
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6441": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1877,
        2200
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1956"
    },
    "6444": {
      "branch": 206,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1877,
        2200
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6445": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1973,
        1993
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6446": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1973,
        1993
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6447": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1973,
        1993
      ],
      "op": "ADD",
      "path": "6"
    },
    "6448": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2015,
        2040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6449": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2015,
        2040
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6450": {
      "branch": 207,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2015,
        2040
      ],
      "op": "LT",
      "path": "6"
    },
    "6451": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2011,
        2185
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1954"
    },
    "6454": {
      "branch": 207,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2011,
        2185
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6455": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2124,
        2184
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 133,
      "value": "0x194A"
    },
    "6458": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2150,
        2160
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6459": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2162,
        2170
      ],
      "op": "DUP10",
      "path": "6"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6466": {
      "op": "SHL"
    },
    "6467": {
      "op": "SUB"
    },
    "6468": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2124,
        2184
      ],
      "op": "AND",
      "path": "6"
    },
    "6469": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2172,
        2183
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6470": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2124,
        2149
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "6473": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "jump": "i",
      "offset": [
        2124,
        2184
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6474": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2124,
        2184
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6475": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6476": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "POP",
      "path": "6"
    },
    "6477": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "POP",
      "path": "6"
    },
    "6478": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "POP",
      "path": "6"
    },
    "6479": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "POP",
      "path": "6"
    },
    "6480": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1678"
    },
    "6483": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2109,
        2185
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6484": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2011,
        2185
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6485": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1877,
        2200
      ],
      "op": "POP",
      "path": "6"
    },
    "6486": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1877,
        2200
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6487": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2229,
        2302
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 134,
      "value": "0x197C"
    },
    "6490": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2254,
        2264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6491": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2266,
        2301
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1977"
    },
    "6494": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2294,
        2300
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6495": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2280,
        2288
      ],
      "op": "DUP11",
      "path": "6"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "op": "SUB"
    },
    "6504": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "AND",
      "path": "6"
    },
    "6505": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2277
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6506": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6507": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1970"
    },
    "6510": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6511": {
      "dev": "Division by zero",
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "INVALID",
      "path": "6"
    },
    "6512": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6513": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "DIV",
      "path": "6"
    },
    "6514": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2267,
        2288
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6515": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2266,
        2293
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19CC"
    },
    "6518": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "jump": "i",
      "offset": [
        2266,
        2301
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6519": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2266,
        2301
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6520": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2229,
        2253
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FD"
    },
    "6523": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "jump": "i",
      "offset": [
        2229,
        2302
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6524": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2229,
        2302
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6525": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6526": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "POP",
      "path": "6"
    },
    "6527": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "POP",
      "path": "6"
    },
    "6528": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "POP",
      "path": "6"
    },
    "6529": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1678"
    },
    "6532": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2214,
        2303
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6533": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        1825,
        2764
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6540": {
      "op": "SHL"
    },
    "6541": {
      "op": "SUB"
    },
    "6542": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2579
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 135
    },
    "6543": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2579
      ],
      "op": "AND",
      "path": "6"
    },
    "6544": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2540,
        2557
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6545": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2540,
        2557
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6546": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2540,
        2557
      ],
      "op": "MUL",
      "path": "6"
    },
    "6547": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2540,
        2557
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6548": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2561,
        2567
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6549": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2540,
        2557
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6550": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2561,
        2567
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6551": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2567
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199C"
    },
    "6554": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2567
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6555": {
      "dev": "Division by zero",
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2567
      ],
      "op": "INVALID",
      "path": "6"
    },
    "6556": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2567
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6557": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2567
      ],
      "op": "DIV",
      "path": "6"
    },
    "6558": {
      "branch": 208,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2579
      ],
      "op": "EQ",
      "path": "6"
    },
    "6559": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6560": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6561": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19A9"
    },
    "6564": {
      "branch": 208,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6565": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "POP",
      "path": "6"
    },
    "6566": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2596,
        2603
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6567": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2583,
        2593
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6568": {
      "branch": 209,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2583,
        2603
      ],
      "op": "GT",
      "path": "6"
    },
    "6569": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2529,
        2603
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6570": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B2"
    },
    "6573": {
      "branch": 209,
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6574": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6576": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6577": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6578": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2521,
        2604
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6579": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2640,
        2660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6580": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2640,
        2660
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6581": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2640,
        2660
      ],
      "op": "SUB",
      "path": "6"
    },
    "6582": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2681,
        2753
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 136,
      "value": "0x194A"
    },
    "6585": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2681,
        2741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x186E"
    },
    "6588": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2640,
        2650
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6595": {
      "op": "SHL"
    },
    "6596": {
      "op": "SUB"
    },
    "6597": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2681,
        2741
      ],
      "op": "DUP12",
      "path": "6"
    },
    "6598": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2681,
        2741
      ],
      "op": "AND",
      "path": "6"
    },
    "6599": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2640,
        2660
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6600": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "offset": [
        2681,
        2706
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17C3"
    },
    "6603": {
      "fn": "SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp",
      "jump": "i",
      "offset": [
        2681,
        2741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6604": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        433,
        544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6605": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        525,
        530
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 137
    },
    "6606": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        525,
        530
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6607": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        525,
        530
      ],
      "op": "ADD",
      "path": "4"
    },
    "6608": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        520,
        536
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6609": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        520,
        536
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6610": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        520,
        536
      ],
      "op": "LT",
      "path": "4"
    },
    "6611": {
      "branch": 188,
      "fn": "LowGasSafeMath.add",
      "offset": [
        520,
        536
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6612": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        512,
        537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF24"
    },
    "6615": {
      "branch": 188,
      "fn": "LowGasSafeMath.add",
      "offset": [
        512,
        537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6616": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        512,
        537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6618": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        512,
        537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6619": {
      "fn": "LowGasSafeMath.add",
      "offset": [
        512,
        537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "6620": {
      "fn": "SafeCast.toUint160",
      "offset": [
        356,
        467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6621": {
      "fn": "SafeCast.toUint160",
      "offset": [
        458,
        459
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 138
    },
    "6622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "op": "SUB"
    },
    "6630": {
      "fn": "SafeCast.toUint160",
      "offset": [
        438,
        459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6631": {
      "fn": "SafeCast.toUint160",
      "offset": [
        438,
        459
      ],
      "op": "AND",
      "path": "5"
    },
    "6632": {
      "fn": "SafeCast.toUint160",
      "offset": [
        438,
        459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6633": {
      "branch": 189,
      "fn": "SafeCast.toUint160",
      "offset": [
        438,
        459
      ],
      "op": "EQ",
      "path": "5"
    },
    "6634": {
      "fn": "SafeCast.toUint160",
      "offset": [
        430,
        460
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1466"
    },
    "6637": {
      "branch": 189,
      "fn": "SafeCast.toUint160",
      "offset": [
        430,
        460
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6638": {
      "fn": "SafeCast.toUint160",
      "offset": [
        430,
        460
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6640": {
      "fn": "SafeCast.toUint160",
      "offset": [
        430,
        460
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6641": {
      "fn": "SafeCast.toUint160",
      "offset": [
        430,
        460
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6642": {
      "op": "JUMPDEST"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6645": {
      "op": "DUP1"
    },
    "6646": {
      "op": "MLOAD"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6649": {
      "op": "DUP2"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "op": "DUP3"
    },
    "6652": {
      "op": "MSTORE"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6655": {
      "op": "DUP1"
    },
    "6656": {
      "op": "DUP3"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6660": {
      "op": "DUP3"
    },
    "6661": {
      "op": "ADD"
    },
    "6662": {
      "op": "DUP2"
    },
    "6663": {
      "op": "SWAP1"
    },
    "6664": {
      "op": "MSTORE"
    },
    "6665": {
      "op": "SWAP2"
    },
    "6666": {
      "op": "DUP2"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "DUP3"
    },
    "6669": {
      "op": "SWAP1"
    },
    "6670": {
      "op": "MSTORE"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6673": {
      "op": "DUP2"
    },
    "6674": {
      "op": "ADD"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "SWAP1"
    },
    "6677": {
      "op": "MSTORE"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6680": {
      "op": "DUP2"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "DUP3"
    },
    "6683": {
      "op": "SWAP1"
    },
    "6684": {
      "op": "MSTORE"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6687": {
      "op": "DUP2"
    },
    "6688": {
      "op": "ADD"
    },
    "6689": {
      "op": "DUP3"
    },
    "6690": {
      "op": "SWAP1"
    },
    "6691": {
      "op": "MSTORE"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6694": {
      "op": "DUP2"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "SWAP2"
    },
    "6697": {
      "op": "SWAP1"
    },
    "6698": {
      "op": "SWAP2"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "SWAP1"
    },
    "6701": {
      "jump": "o",
      "op": "JUMP"
    },
    "6702": {
      "op": "JUMPDEST"
    },
    "6703": {
      "op": "DUP1"
    },
    "6704": {
      "op": "MLOAD"
    },
    "6705": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6708": {
      "op": "DUP2"
    },
    "6709": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "6712": {
      "jump": "i",
      "op": "JUMP"
    },
    "6713": {
      "op": "JUMPDEST"
    },
    "6714": {
      "op": "DUP1"
    },
    "6715": {
      "op": "MLOAD"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6718": {
      "op": "DUP2"
    },
    "6719": {
      "op": "SWAP1"
    },
    "6720": {
      "op": "SIGNEXTEND"
    },
    "6721": {
      "op": "DUP2"
    },
    "6722": {
      "op": "EQ"
    },
    "6723": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6726": {
      "op": "JUMPI"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6729": {
      "op": "DUP1"
    },
    "6730": {
      "op": "REVERT"
    },
    "6731": {
      "op": "JUMPDEST"
    },
    "6732": {
      "op": "DUP1"
    },
    "6733": {
      "op": "MLOAD"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "op": "SUB"
    },
    "6742": {
      "op": "DUP2"
    },
    "6743": {
      "op": "AND"
    },
    "6744": {
      "op": "DUP2"
    },
    "6745": {
      "op": "EQ"
    },
    "6746": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6749": {
      "op": "JUMPI"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6752": {
      "op": "DUP1"
    },
    "6753": {
      "op": "REVERT"
    },
    "6754": {
      "op": "JUMPDEST"
    },
    "6755": {
      "op": "DUP1"
    },
    "6756": {
      "op": "MLOAD"
    },
    "6757": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6760": {
      "op": "DUP2"
    },
    "6761": {
      "op": "PUSH2",
      "value": "0x1CFA"
    },
    "6764": {
      "jump": "i",
      "op": "JUMP"
    },
    "6765": {
      "op": "JUMPDEST"
    },
    "6766": {
      "op": "DUP1"
    },
    "6767": {
      "op": "MLOAD"
    },
    "6768": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6771": {
      "op": "DUP2"
    },
    "6772": {
      "op": "AND"
    },
    "6773": {
      "op": "DUP2"
    },
    "6774": {
      "op": "EQ"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6778": {
      "op": "JUMPI"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6781": {
      "op": "DUP1"
    },
    "6782": {
      "op": "REVERT"
    },
    "6783": {
      "op": "JUMPDEST"
    },
    "6784": {
      "op": "DUP1"
    },
    "6785": {
      "op": "MLOAD"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6788": {
      "op": "DUP2"
    },
    "6789": {
      "op": "AND"
    },
    "6790": {
      "op": "DUP2"
    },
    "6791": {
      "op": "EQ"
    },
    "6792": {
      "op": "PUSH2",
      "value": "0x1466"
    },
    "6795": {
      "op": "JUMPI"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6798": {
      "op": "DUP1"
    },
    "6799": {
      "op": "REVERT"
    },
    "6800": {
      "op": "JUMPDEST"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6805": {
      "op": "DUP3"
    },
    "6806": {
      "op": "DUP5"
    },
    "6807": {
      "op": "SUB"
    },
    "6808": {
      "op": "SLT"
    },
    "6809": {
      "op": "ISZERO"
    },
    "6810": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6813": {
      "op": "JUMPI"
    },
    "6814": {
      "op": "DUP1"
    },
    "6815": {
      "op": "DUP2"
    },
    "6816": {
      "op": "REVERT"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "DUP2"
    },
    "6819": {
      "op": "MLOAD"
    },
    "6820": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "6823": {
      "op": "DUP2"
    },
    "6824": {
      "op": "PUSH2",
      "value": "0x1CFA"
    },
    "6827": {
      "jump": "i",
      "op": "JUMP"
    },
    "6828": {
      "op": "JUMPDEST"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6831": {
      "op": "DUP1"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6834": {
      "op": "DUP1"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6837": {
      "op": "DUP6"
    },
    "6838": {
      "op": "DUP8"
    },
    "6839": {
      "op": "SUB"
    },
    "6840": {
      "op": "SLT"
    },
    "6841": {
      "op": "ISZERO"
    },
    "6842": {
      "op": "PUSH2",
      "value": "0x1AC1"
    },
    "6845": {
      "op": "JUMPI"
    },
    "6846": {
      "op": "DUP3"
    },
    "6847": {
      "op": "DUP4"
    },
    "6848": {
      "op": "REVERT"
    },
    "6849": {
      "op": "JUMPDEST"
    },
    "6850": {
      "op": "DUP5"
    },
    "6851": {
      "op": "CALLDATALOAD"
    },
    "6852": {
      "op": "PUSH2",
      "value": "0x1ACC"
    },
    "6855": {
      "op": "DUP2"
    },
    "6856": {
      "op": "PUSH2",
      "value": "0x1CFA"
    },
    "6859": {
      "jump": "i",
      "op": "JUMP"
    },
    "6860": {
      "op": "JUMPDEST"
    },
    "6861": {
      "op": "SWAP4"
    },
    "6862": {
      "op": "POP"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6865": {
      "op": "DUP6"
    },
    "6866": {
      "op": "ADD"
    },
    "6867": {
      "op": "CALLDATALOAD"
    },
    "6868": {
      "op": "PUSH2",
      "value": "0x1ADC"
    },
    "6871": {
      "op": "DUP2"
    },
    "6872": {
      "op": "PUSH2",
      "value": "0x1D12"
    },
    "6875": {
      "jump": "i",
      "op": "JUMP"
    },
    "6876": {
      "op": "JUMPDEST"
    },
    "6877": {
      "op": "SWAP3"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6881": {
      "op": "DUP6"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "CALLDATALOAD"
    },
    "6884": {
      "op": "SWAP2"
    },
    "6885": {
      "op": "POP"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6888": {
      "op": "DUP6"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "CALLDATALOAD"
    },
    "6891": {
      "op": "PUSH2",
      "value": "0x1AF3"
    },
    "6894": {
      "op": "DUP2"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1CFA"
    },
    "6898": {
      "jump": "i",
      "op": "JUMP"
    },
    "6899": {
      "op": "JUMPDEST"
    },
    "6900": {
      "op": "SWAP4"
    },
    "6901": {
      "op": "SWAP7"
    },
    "6902": {
      "op": "SWAP3"
    },
    "6903": {
      "op": "SWAP6"
    },
    "6904": {
      "op": "POP"
    },
    "6905": {
      "op": "SWAP1"
    },
    "6906": {
      "op": "SWAP4"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "op": "POP"
    },
    "6909": {
      "jump": "o",
      "op": "JUMP"
    },
    "6910": {
      "op": "JUMPDEST"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6915": {
      "op": "DUP3"
    },
    "6916": {
      "op": "DUP5"
    },
    "6917": {
      "op": "SUB"
    },
    "6918": {
      "op": "SLT"
    },
    "6919": {
      "op": "ISZERO"
    },
    "6920": {
      "op": "PUSH2",
      "value": "0x1B0F"
    },
    "6923": {
      "op": "JUMPI"
    },
    "6924": {
      "op": "DUP1"
    },
    "6925": {
      "op": "DUP2"
    },
    "6926": {
      "op": "REVERT"
    },
    "6927": {
      "op": "JUMPDEST"
    },
    "6928": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "PUSH2",
      "value": "0x1A39"
    },
    "6935": {
      "jump": "i",
      "op": "JUMP"
    },
    "6936": {
      "op": "JUMPDEST"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "DUP5"
    },
    "6943": {
      "op": "SUB"
    },
    "6944": {
      "op": "SLT"
    },
    "6945": {
      "op": "ISZERO"
    },
    "6946": {
      "op": "PUSH2",
      "value": "0x1B29"
    },
    "6949": {
      "op": "JUMPI"
    },
    "6950": {
      "op": "DUP1"
    },
    "6951": {
      "op": "DUP2"
    },
    "6952": {
      "op": "REVERT"
    },
    "6953": {
      "op": "JUMPDEST"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6956": {
      "op": "MLOAD"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6959": {
      "op": "DUP2"
    },
    "6960": {
      "op": "ADD"
    },
    "6961": {
      "op": "DUP2"
    },
    "6962": {
      "op": "DUP2"
    },
    "6963": {
      "op": "LT"
    },
    "6964": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6973": {
      "op": "DUP3"
    },
    "6974": {
      "op": "GT"
    },
    "6975": {
      "op": "OR"
    },
    "6976": {
      "op": "ISZERO"
    },
    "6977": {
      "op": "PUSH2",
      "value": "0x1B46"
    },
    "6980": {
      "op": "JUMPI"
    },
    "6981": {
      "op": "INVALID"
    },
    "6982": {
      "op": "JUMPDEST"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6985": {
      "op": "MSTORE"
    },
    "6986": {
      "op": "PUSH2",
      "value": "0x1B52"
    },
    "6989": {
      "op": "DUP4"
    },
    "6990": {
      "op": "PUSH2",
      "value": "0x1A62"
    },
    "6993": {
      "jump": "i",
      "op": "JUMP"
    },
    "6994": {
      "op": "JUMPDEST"
    },
    "6995": {
      "op": "DUP2"
    },
    "6996": {
      "op": "MSTORE"
    },
    "6997": {
      "op": "PUSH2",
      "value": "0x1B60"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7002": {
      "op": "DUP5"
    },
    "7003": {
      "op": "ADD"
    },
    "7004": {
      "op": "PUSH2",
      "value": "0x1A39"
    },
    "7007": {
      "jump": "i",
      "op": "JUMP"
    },
    "7008": {
      "op": "JUMPDEST"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7011": {
      "op": "DUP3"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "op": "MSTORE"
    },
    "7014": {
      "op": "PUSH2",
      "value": "0x1B71"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7019": {
      "op": "DUP5"
    },
    "7020": {
      "op": "ADD"
    },
    "7021": {
      "op": "PUSH2",
      "value": "0x1A6D"
    },
    "7024": {
      "jump": "i",
      "op": "JUMP"
    },
    "7025": {
      "op": "JUMPDEST"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7028": {
      "op": "DUP3"
    },
    "7029": {
      "op": "ADD"
    },
    "7030": {
      "op": "MSTORE"
    },
    "7031": {
      "op": "PUSH2",
      "value": "0x1B82"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7036": {
      "op": "DUP5"
    },
    "7037": {
      "op": "ADD"
    },
    "7038": {
      "op": "PUSH2",
      "value": "0x1A6D"
    },
    "7041": {
      "jump": "i",
      "op": "JUMP"
    },
    "7042": {
      "op": "JUMPDEST"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7045": {
      "op": "DUP3"
    },
    "7046": {
      "op": "ADD"
    },
    "7047": {
      "op": "MSTORE"
    },
    "7048": {
      "op": "PUSH2",
      "value": "0x1B93"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7053": {
      "op": "DUP5"
    },
    "7054": {
      "op": "ADD"
    },
    "7055": {
      "op": "PUSH2",
      "value": "0x1A6D"
    },
    "7058": {
      "jump": "i",
      "op": "JUMP"
    },
    "7059": {
      "op": "JUMPDEST"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7062": {
      "op": "DUP3"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "op": "MSTORE"
    },
    "7065": {
      "op": "PUSH2",
      "value": "0x1BA4"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7070": {
      "op": "DUP5"
    },
    "7071": {
      "op": "ADD"
    },
    "7072": {
      "op": "PUSH2",
      "value": "0x1A7F"
    },
    "7075": {
      "jump": "i",
      "op": "JUMP"
    },
    "7076": {
      "op": "JUMPDEST"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7079": {
      "op": "DUP3"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "op": "MSTORE"
    },
    "7082": {
      "op": "PUSH2",
      "value": "0x1BB5"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7087": {
      "op": "DUP5"
    },
    "7088": {
      "op": "ADD"
    },
    "7089": {
      "op": "PUSH2",
      "value": "0x1A2E"
    },
    "7092": {
      "jump": "i",
      "op": "JUMP"
    },
    "7093": {
      "op": "JUMPDEST"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7096": {
      "op": "DUP3"
    },
    "7097": {
      "op": "ADD"
    },
    "7098": {
      "op": "MSTORE"
    },
    "7099": {
      "op": "SWAP4"
    },
    "7100": {
      "op": "SWAP3"
    },
    "7101": {
      "op": "POP"
    },
    "7102": {
      "op": "POP"
    },
    "7103": {
      "op": "POP"
    },
    "7104": {
      "jump": "o",
      "op": "JUMP"
    },
    "7105": {
      "op": "JUMPDEST"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7110": {
      "op": "DUP3"
    },
    "7111": {
      "op": "DUP5"
    },
    "7112": {
      "op": "SUB"
    },
    "7113": {
      "op": "SLT"
    },
    "7114": {
      "op": "ISZERO"
    },
    "7115": {
      "op": "PUSH2",
      "value": "0x1BD2"
    },
    "7118": {
      "op": "JUMPI"
    },
    "7119": {
      "op": "DUP1"
    },
    "7120": {
      "op": "DUP2"
    },
    "7121": {
      "op": "REVERT"
    },
    "7122": {
      "op": "JUMPDEST"
    },
    "7123": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "7126": {
      "op": "DUP3"
    },
    "7127": {
      "op": "PUSH2",
      "value": "0x1A4B"
    },
    "7130": {
      "jump": "i",
      "op": "JUMP"
    },
    "7131": {
      "op": "JUMPDEST"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7134": {
      "op": "DUP1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7137": {
      "op": "DUP1"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7140": {
      "op": "DUP1"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7143": {
      "op": "DUP1"
    },
    "7144": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7147": {
      "op": "DUP10"
    },
    "7148": {
      "op": "DUP12"
    },
    "7149": {
      "op": "SUB"
    },
    "7150": {
      "op": "SLT"
    },
    "7151": {
      "op": "ISZERO"
    },
    "7152": {
      "op": "PUSH2",
      "value": "0x1BF7"
    },
    "7155": {
      "op": "JUMPI"
    },
    "7156": {
      "op": "DUP4"
    },
    "7157": {
      "op": "DUP5"
    },
    "7158": {
      "op": "REVERT"
    },
    "7159": {
      "op": "JUMPDEST"
    },
    "7160": {
      "op": "PUSH2",
      "value": "0x1C00"
    },
    "7163": {
      "op": "DUP10"
    },
    "7164": {
      "op": "PUSH2",
      "value": "0x1A4B"
    },
    "7167": {
      "jump": "i",
      "op": "JUMP"
    },
    "7168": {
      "op": "JUMPDEST"
    },
    "7169": {
      "op": "SWAP8"
    },
    "7170": {
      "op": "POP"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7173": {
      "op": "DUP10"
    },
    "7174": {
      "op": "ADD"
    },
    "7175": {
      "op": "MLOAD"
    },
    "7176": {
      "op": "DUP1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7179": {
      "op": "SIGNEXTEND"
    },
    "7180": {
      "op": "DUP2"
    },
    "7181": {
      "op": "EQ"
    },
    "7182": {
      "op": "PUSH2",
      "value": "0x1C15"
    },
    "7185": {
      "op": "JUMPI"
    },
    "7186": {
      "op": "DUP5"
    },
    "7187": {
      "op": "DUP6"
    },
    "7188": {
      "op": "REVERT"
    },
    "7189": {
      "op": "JUMPDEST"
    },
    "7190": {
      "op": "DUP1"
    },
    "7191": {
      "op": "SWAP8"
    },
    "7192": {
      "op": "POP"
    },
    "7193": {
      "op": "POP"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7196": {
      "op": "DUP10"
    },
    "7197": {
      "op": "ADD"
    },
    "7198": {
      "op": "MLOAD"
    },
    "7199": {
      "op": "SWAP6"
    },
    "7200": {
      "op": "POP"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7203": {
      "op": "DUP10"
    },
    "7204": {
      "op": "ADD"
    },
    "7205": {
      "op": "MLOAD"
    },
    "7206": {
      "op": "SWAP5"
    },
    "7207": {
      "op": "POP"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7210": {
      "op": "DUP10"
    },
    "7211": {
      "op": "ADD"
    },
    "7212": {
      "op": "MLOAD"
    },
    "7213": {
      "op": "DUP1"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "7216": {
      "op": "SIGNEXTEND"
    },
    "7217": {
      "op": "DUP2"
    },
    "7218": {
      "op": "EQ"
    },
    "7219": {
      "op": "PUSH2",
      "value": "0x1C3A"
    },
    "7222": {
      "op": "JUMPI"
    },
    "7223": {
      "op": "DUP5"
    },
    "7224": {
      "op": "DUP6"
    },
    "7225": {
      "op": "REVERT"
    },
    "7226": {
      "op": "JUMPDEST"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7229": {
      "op": "DUP11"
    },
    "7230": {
      "op": "ADD"
    },
    "7231": {
      "op": "MLOAD"
    },
    "7232": {
      "op": "SWAP1"
    },
    "7233": {
      "op": "SWAP5"
    },
    "7234": {
      "op": "POP"
    },
    "7235": {
      "op": "PUSH2",
      "value": "0x1C4B"
    },
    "7238": {
      "op": "DUP2"
    },
    "7239": {
      "op": "PUSH2",
      "value": "0x1CFA"
    },
    "7242": {
      "jump": "i",
      "op": "JUMP"
    },
    "7243": {
      "op": "JUMPDEST"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7246": {
      "op": "DUP11"
    },
    "7247": {
      "op": "ADD"
    },
    "7248": {
      "op": "MLOAD"
    },
    "7249": {
      "op": "SWAP1"
    },
    "7250": {
      "op": "SWAP4"
    },
    "7251": {
      "op": "POP"
    },
    "7252": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7257": {
      "op": "DUP2"
    },
    "7258": {
      "op": "AND"
    },
    "7259": {
      "op": "DUP2"
    },
    "7260": {
      "op": "EQ"
    },
    "7261": {
      "op": "PUSH2",
      "value": "0x1C64"
    },
    "7264": {
      "op": "JUMPI"
    },
    "7265": {
      "op": "DUP3"
    },
    "7266": {
      "op": "DUP4"
    },
    "7267": {
      "op": "REVERT"
    },
    "7268": {
      "op": "JUMPDEST"
    },
    "7269": {
      "op": "SWAP2"
    },
    "7270": {
      "op": "POP"
    },
    "7271": {
      "op": "PUSH2",
      "value": "0x1C72"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7276": {
      "op": "DUP11"
    },
    "7277": {
      "op": "ADD"
    },
    "7278": {
      "op": "PUSH2",
      "value": "0x1A2E"
    },
    "7281": {
      "jump": "i",
      "op": "JUMP"
    },
    "7282": {
      "op": "JUMPDEST"
    },
    "7283": {
      "op": "SWAP1"
    },
    "7284": {
      "op": "POP"
    },
    "7285": {
      "op": "SWAP3"
    },
    "7286": {
      "op": "SWAP6"
    },
    "7287": {
      "op": "SWAP9"
    },
    "7288": {
      "op": "POP"
    },
    "7289": {
      "op": "SWAP3"
    },
    "7290": {
      "op": "SWAP6"
    },
    "7291": {
      "op": "SWAP9"
    },
    "7292": {
      "op": "SWAP1"
    },
    "7293": {
      "op": "SWAP4"
    },
    "7294": {
      "op": "SWAP7"
    },
    "7295": {
      "op": "POP"
    },
    "7296": {
      "jump": "o",
      "op": "JUMP"
    },
    "7297": {
      "op": "JUMPDEST"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7302": {
      "op": "DUP3"
    },
    "7303": {
      "op": "DUP5"
    },
    "7304": {
      "op": "SUB"
    },
    "7305": {
      "op": "SLT"
    },
    "7306": {
      "op": "ISZERO"
    },
    "7307": {
      "op": "PUSH2",
      "value": "0x1C92"
    },
    "7310": {
      "op": "JUMPI"
    },
    "7311": {
      "op": "DUP1"
    },
    "7312": {
      "op": "DUP2"
    },
    "7313": {
      "op": "REVERT"
    },
    "7314": {
      "op": "JUMPDEST"
    },
    "7315": {
      "op": "DUP2"
    },
    "7316": {
      "op": "MLOAD"
    },
    "7317": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "7321": {
      "op": "DUP2"
    },
    "7322": {
      "op": "AND"
    },
    "7323": {
      "op": "DUP2"
    },
    "7324": {
      "op": "EQ"
    },
    "7325": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "7328": {
      "op": "JUMPI"
    },
    "7329": {
      "op": "DUP2"
    },
    "7330": {
      "op": "DUP3"
    },
    "7331": {
      "op": "REVERT"
    },
    "7332": {
      "op": "JUMPDEST"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7337": {
      "op": "DUP3"
    },
    "7338": {
      "op": "DUP5"
    },
    "7339": {
      "op": "SUB"
    },
    "7340": {
      "op": "SLT"
    },
    "7341": {
      "op": "ISZERO"
    },
    "7342": {
      "op": "PUSH2",
      "value": "0x1CB5"
    },
    "7345": {
      "op": "JUMPI"
    },
    "7346": {
      "op": "DUP1"
    },
    "7347": {
      "op": "DUP2"
    },
    "7348": {
      "op": "REVERT"
    },
    "7349": {
      "op": "JUMPDEST"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "op": "MLOAD"
    },
    "7352": {
      "op": "SWAP2"
    },
    "7353": {
      "op": "SWAP1"
    },
    "7354": {
      "op": "POP"
    },
    "7355": {
      "jump": "o",
      "op": "JUMP"
    },
    "7356": {
      "op": "JUMPDEST"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7363": {
      "op": "SHL"
    },
    "7364": {
      "op": "SUB"
    },
    "7365": {
      "op": "SWAP2"
    },
    "7366": {
      "op": "SWAP1"
    },
    "7367": {
      "op": "SWAP2"
    },
    "7368": {
      "op": "AND"
    },
    "7369": {
      "op": "DUP2"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7373": {
      "op": "ADD"
    },
    "7374": {
      "op": "SWAP1"
    },
    "7375": {
      "jump": "o",
      "op": "JUMP"
    },
    "7376": {
      "op": "JUMPDEST"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7379": {
      "op": "SWAP2"
    },
    "7380": {
      "op": "SWAP1"
    },
    "7381": {
      "op": "SWAP2"
    },
    "7382": {
      "op": "SIGNEXTEND"
    },
    "7383": {
      "op": "DUP2"
    },
    "7384": {
      "op": "MSTORE"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7387": {
      "op": "ADD"
    },
    "7388": {
      "op": "SWAP1"
    },
    "7389": {
      "jump": "o",
      "op": "JUMP"
    },
    "7390": {
      "op": "JUMPDEST"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7393": {
      "op": "SWAP2"
    },
    "7394": {
      "op": "SWAP1"
    },
    "7395": {
      "op": "SWAP2"
    },
    "7396": {
      "op": "SIGNEXTEND"
    },
    "7397": {
      "op": "DUP2"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7401": {
      "op": "ADD"
    },
    "7402": {
      "op": "SWAP1"
    },
    "7403": {
      "jump": "o",
      "op": "JUMP"
    },
    "7404": {
      "op": "JUMPDEST"
    },
    "7405": {
      "op": "SWAP2"
    },
    "7406": {
      "op": "DUP3"
    },
    "7407": {
      "op": "MSTORE"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7410": {
      "op": "DUP3"
    },
    "7411": {
      "op": "ADD"
    },
    "7412": {
      "op": "MSTORE"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7415": {
      "op": "ADD"
    },
    "7416": {
      "op": "SWAP1"
    },
    "7417": {
      "jump": "o",
      "op": "JUMP"
    },
    "7418": {
      "op": "JUMPDEST"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7425": {
      "op": "SHL"
    },
    "7426": {
      "op": "SUB"
    },
    "7427": {
      "op": "DUP2"
    },
    "7428": {
      "op": "AND"
    },
    "7429": {
      "op": "DUP2"
    },
    "7430": {
      "op": "EQ"
    },
    "7431": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7434": {
      "op": "JUMPI"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7437": {
      "op": "DUP1"
    },
    "7438": {
      "op": "REVERT"
    },
    "7439": {
      "op": "JUMPDEST"
    },
    "7440": {
      "op": "POP"
    },
    "7441": {
      "jump": "o",
      "op": "JUMP"
    },
    "7442": {
      "op": "JUMPDEST"
    },
    "7443": {
      "op": "DUP1"
    },
    "7444": {
      "op": "ISZERO"
    },
    "7445": {
      "op": "ISZERO"
    },
    "7446": {
      "op": "DUP2"
    },
    "7447": {
      "op": "EQ"
    },
    "7448": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7451": {
      "op": "JUMPI"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7454": {
      "op": "DUP1"
    },
    "7455": {
      "op": "REVERT"
    }
  },
  "sha1": "a69194f51463e6ae423519e437394a70675bdd5e",
  "source": "pragma solidity 0.7.6;\npragma abicoder v2;\n\nimport \"./TickMath.sol\";\nimport \"./BitMath.sol\";\nimport \"./TickBitmap.sol\";\nimport \"./SwapMath.sol\";\nimport \"./FullMath.sol\";\nimport \"./SqrtPriceMath.sol\";\nimport \"./LiquidityMath.sol\";\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n}\n\n\ninterface IUniswapV3Pool {\n\n    struct Slot0 {\n         uint160 sqrtPriceX96;\n         int24 tick;\n         uint16 observationIndex;\n         uint16 observationCardinality;\n         uint16 observationCardinalityNext;\n         uint8 feeProtocol;\n         bool unlocked;\n    }\n\n    function slot0() external view returns (Slot0 memory s0);\n    function liquidity() external view returns (uint128);\n    function ticks(int24 tick) external view returns (\n\t\t\t\t\t\t      uint128 liquidityGross,\n\t\t\t\t\t\t      int128 liquidityNet,\n\t\t\t\t\t\t      uint256 feeGrowthOutside0X128,\n\t\t\t\t\t\t      uint256 feeGrowthOutside1X128,\n\t\t\t\t\t\t      int56 tickCumulativeOutside,\n\t\t\t\t\t\t      uint160 secondsPerLiquidityOutsideX128,\n\t\t\t\t\t\t      uint32 secondsOutside,\n\t\t\t\t\t\t      bool initialized\n\t\t\t\t\t\t      );\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n    function tickSpacing() external view returns (int24);\n    function fee() external view returns (uint24);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n}\n\ncontract UniV3Calc {\n\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    function nextInitializedTickWithinOneWord(\n\t\t\t\t\t      address _pool,\n\t\t\t\t\t      int24 tick,\n\t\t\t\t\t      bool lte\n\t\t\t\t\t      ) private view returns (int24 next, bool initialized) {\n\tIUniswapV3Pool pool = IUniswapV3Pool(_pool);\n\tint24 tickSpacing = pool.tickSpacing();\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = pool.tickBitmap(wordPos) & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = pool.tickBitmap(wordPos) & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n\n    function _liqNet(IUniswapV3Pool pool, int24 _tickNext) private view returns (int128) {\n\tuint128 liquidityGross;\n\tint128 liquidityNet;\n\tuint256 feeGrowthOutside0X128;\n\tuint256 feeGrowthOutside1X128;\n\tint56 tickCumulativeOutside;\n\tuint160 secondsPerLiquidityOutsideX128;\n\tuint32 secondsOutside;\n\tbool initialized;\n\t\t    \n\t\t    \n\t(liquidityGross, liquidityNet, feeGrowthOutside0X128, feeGrowthOutside1X128, tickCumulativeOutside, secondsPerLiquidityOutsideX128, secondsOutside, initialized) =  pool.ticks(_tickNext);\n\treturn liquidityNet;\n    }\n\n\n    // the top level state of the swap, the results of which are recorded in storage at the end\n    struct SwapState {\n        // the amount remaining to be swapped in/out of the input/output asset\n        int256 amountSpecifiedRemaining;\n        // the amount already swapped out/in of the output/input asset\n        int256 amountCalculated;\n        // current sqrt(price)\n        uint160 sqrtPriceX96;\n        // the tick associated with the current price\n        int24 tick;\n        // the global fee growth of the input token\n        // amount of input token paid as protocol fee\n        uint128 protocolFee;\n        // the current liquidity in range\n        uint128 liquidity;\n    }\n\n    struct StepComputations {\n        // the price at the beginning of the step\n        uint160 sqrtPriceStartX96;\n        // the next tick to swap to from the current tick in the swap direction\n        int24 tickNext;\n        // whether tickNext is initialized or not\n        bool initialized;\n        // sqrt(price) for the next tick (1/0)\n        uint160 sqrtPriceNextX96;\n        // how much is being swapped in in this step\n        uint256 amountIn;\n        // how much is being swapped out\n        uint256 amountOut;\n        // how much fee is being paid in\n        uint256 feeAmount;\n    }\n    using LowGasSafeMath for uint256;\n    using LowGasSafeMath for int256;\n    using SafeCast for uint256;\n    using SafeCast for int256;\n\n    function calc_v3_swap(\n\t\t  address _pool,\n\t\t  bool zeroForOne,\n\t\t  int256 amountSpecified,\n\t\t  uint160 sqrtPriceLimitX96\n\t\t  ) public view returns (int256 amount0, int256 amount1) {\n        require(amountSpecified != 0);\n\n\tIUniswapV3Pool pool = IUniswapV3Pool(_pool);\n\tuint24 fee = pool.fee();\n\t\n        IUniswapV3Pool.Slot0 memory slot0Start = pool.slot0() ;\n\n        require(slot0Start.unlocked);\n        require(\n            zeroForOne\n                ? sqrtPriceLimitX96 < slot0Start.sqrtPriceX96 && sqrtPriceLimitX96 > TickMath.MIN_SQRT_RATIO\n                : sqrtPriceLimitX96 > slot0Start.sqrtPriceX96 && sqrtPriceLimitX96 < TickMath.MAX_SQRT_RATIO\n        );\n\n        bool exactInput = amountSpecified > 0;\n\n        SwapState memory state =\n            SwapState({\n                amountSpecifiedRemaining: amountSpecified,\n                amountCalculated: 0,\n                sqrtPriceX96: slot0Start.sqrtPriceX96,\n                tick: slot0Start.tick,\n                protocolFee: 0,\n                liquidity: pool.liquidity()\n            });\n\n        // continue swapping as long as we haven't used the entire input/output and haven't reached the price limit\n        while (state.amountSpecifiedRemaining != 0 && state.sqrtPriceX96 != sqrtPriceLimitX96) {\n            StepComputations memory step;\n\n            step.sqrtPriceStartX96 = state.sqrtPriceX96;\n\t    // replace this with function call \n            (step.tickNext, step.initialized) = nextInitializedTickWithinOneWord(\n\t\t\t\t\t\t\t\t\t\t _pool,\n\t\t\t\t\t\t\t\t\t\t state.tick,\n\t\t\t\t\t\t\t\t\t\t zeroForOne\n            );\n\n            // ensure that we do not overshoot the min/max tick, as the tick bitmap is not aware of these bounds\n            if (step.tickNext < TickMath.MIN_TICK) {\n                step.tickNext = TickMath.MIN_TICK;\n            } else if (step.tickNext > TickMath.MAX_TICK) {\n                step.tickNext = TickMath.MAX_TICK;\n            }\n\n            // get the price for the next tick\n            step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.tickNext);\n\n            // compute values to swap to the target tick, price limit, or point where input/output amount is exhausted\n            (state.sqrtPriceX96, step.amountIn, step.amountOut, step.feeAmount) = SwapMath.computeSwapStep(\n                state.sqrtPriceX96,\n                (zeroForOne ? step.sqrtPriceNextX96 < sqrtPriceLimitX96 : step.sqrtPriceNextX96 > sqrtPriceLimitX96)\n                    ? sqrtPriceLimitX96\n                    : step.sqrtPriceNextX96,\n                state.liquidity,\n                state.amountSpecifiedRemaining,\n                fee\n            );\n\n            if (exactInput) {\n                state.amountSpecifiedRemaining -= int256(step.amountIn + step.feeAmount);\n                state.amountCalculated = state.amountCalculated.sub(int256(step.amountOut));\n            } else {\n                state.amountSpecifiedRemaining += int256(step.amountOut);\n                state.amountCalculated = state.amountCalculated.add(int256(step.amountIn + step.feeAmount));\n            }\n\n            // shift tick if we reached the next price\n            if (state.sqrtPriceX96 == step.sqrtPriceNextX96) {\n                // if the tick is initialized, run the tick transition\n                if (step.initialized) {\n\n\t\t    int128 liquidityNet = _liqNet(pool, step.tickNext);\n                    // if we're moving leftward, we interpret liquidityNet as the opposite sign\n                    // safe because liquidityNet cannot be type(int128).min\n                    if (zeroForOne) liquidityNet = -liquidityNet;\n\n                    state.liquidity = LiquidityMath.addDelta(state.liquidity, liquidityNet);\n                }\n\n                state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;\n            } else if (state.sqrtPriceX96 != step.sqrtPriceStartX96) {\n                // recompute unless we're on a lower tick boundary (i.e. already transitioned ticks), and haven't moved\n                state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96);\n            }\n        }\n\n\t\n        (amount0, amount1) = zeroForOne == exactInput\n            ? (amountSpecified - state.amountSpecifiedRemaining, state.amountCalculated)\n            : (state.amountCalculated, amountSpecified - state.amountSpecifiedRemaining);\n\n\n\tif (zeroForOne) {\n\t    require(uint256(amount1 * -1) < IERC20(pool.token1()).balanceOf(address(this)));\n\t} else {\n\t    require(uint256(amount0 * -1) < IERC20(pool.token0()).balanceOf(address(this)));\n\t}\n\t\n    }\n    \n}\n",
  "sourceMap": "1461:8686:11:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/univ3calc.sol",
  "type": "contract"
}